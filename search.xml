<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[${\color{Yellow}【}{\color{Yellow}置}{\color{Yellow}顶}{\color{Yellow}】}$OIer的伤与痛]]></title>
      <url>/2100/01/16/111/</url>
      <content type="html"><![CDATA[<ul>
<li>日期年份为人工置顶，请不要吐槽</li>
</ul>
<ul>
<li>本文为Menci在WC2017上的倾情歌唱，这是所有OIer共同的伤与痛<a id="more"></a> </li>
</ul>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="600" height="86" src="//music.163.com/outchain/player?type=2&id=459434585&auto=1&height=66"></iframe>

<hr>
<p><center><br>屏幕在深夜微微发亮</center></p>
<p><center><br>思想在那虚树路径上彷徨</center></p>
<p><center><br>平面的向量交错生长</center></p>
<p><center><br>织成，忧伤的网</center></p>
<p><center><br>剪枝剪去我们的疯狂</center></p>
<p><center><br>SPFA告诉我前途在何方</center></p>
<p><center><br>01背包装下了忧伤</center></p>
<p><center><br>笑颜，洋溢脸庞</center></p>
<p><center><br>键盘微凉，鼠标微凉</center></p>
<p><center><br>指尖流淌，代码千行</center></p>
<p><center><br>凸包周长，直径多长</center></p>
<p><center><br>一进考场，全都忘光</center></p>
<p><center><br>你在OJ上提交了千百遍</center></p>
<p><center><br>却依然不能卡进那时限</center></p>
<p><center><br>双手敲尽代码也敲尽岁月</center></p>
<p><center><br>只有我一人写的题解</center></p>
<p><center><br>凋零在OJ里面</center></p>
<p><center><br>Tarjan陪伴强连通分量</center></p>
<p><center><br>生成树完成后思路才闪光</center></p>
<p><center><br>欧拉跑过的七桥古塘</center></p>
<p><center><br>让你，心驰神往</center></p>
<p><center><br>队列进出图上的方向</center></p>
<p><center><br>线段树区间修改求出总量</center></p>
<p><center><br>可持久化留下的迹象</center></p>
<p><center><br>我们，伏身欣赏</center></p>
<p><center><br>数论算法，图论算法</center></p>
<p><center><br>高斯费马，树上开花</center></p>
<p><center><br>线性规划，动态规划</center></p>
<p><center><br>时间爆炸，如何优化</center></p>
<p><center><br>我在OI中辗转了千百天</center></p>
<p><center><br>却不让我看AK最后一眼</center></p>
<p><center><br>我用空间换回超限的时间</center></p>
<p><center><br>随重新编译，测完样例</center></p>
<p><center><br>才发现漏洞满篇</center></p>
<p><center><br>原来CE是因选错语言</center></p>
<p><center><br>其实爆零，只因忘写文件</center></p>
<p><center><br>如果标算太难请坚定信念</center></p>
<p><center><br>不如回头再看一眼题面</center></p>
<p><center><br>以那暴力模拟向正解吊唁</center></p>
<p><center><br>蒟蒻的蜕变，神犇出现</center></p>
<p><center><br>终将与Au擦肩</center></p>
<p><center><br>屏幕在深夜微微发亮</center></p>
<p><center><br>我心在考场</center></p>
<hr>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[${\color{Yellow}【}{\color{Yellow}置}{\color{Yellow}顶}{\color{Yellow}】}$NOI2017退役总结]]></title>
      <url>/2050/07/24/NOI2017%E9%80%80%E5%BD%B9%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<ul>
<li>日期年份为人工置顶，请不要吐槽</li>
</ul>
<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p>　　</p>
<p><font size="5"><center> OI一路走来</center></font></p>
<p>　　<br>　　吾辈认为，这个世界上只有两种人，一种是碌碌无为的普通人，另一种则是备受造物主宠爱的天才。曾经那么认为……<br>　　<br>　　深夜，窗外是璀璨夺目的夜景。我熄了灯，让黑暗聚拢于指尖，感受命运的流转。大千世界，五行相生相克，万物流转始终，察阴阳调和之妙理，观天下纵横之妙局，命运仿佛织成了一张无形的大网，将世人笼罩其中，而我们却看不清织网者的面目。我们谁都不知道自己的命运，或许这就是命运的奇妙之处吧。<br>　　<br>　　国赛早已告罄，铜牌也是板上钉钉的事实，唯有回忆在脑海中一遍遍的循环，那时那日的情景历历在目。<br>　　<br>　　两年OI路，一场浮华梦，曲终人未散。自从踏入了这条不寻常的路，我就告别了看似平常的假期，翘掉了不计其数的自习课，放弃了午休时间的睡眠与放松，整日盯着电脑屏幕，看着光标闪动，代码一泄如注。看到自己亲手书写的代码成功编译运行，我的心里充满了自豪与喜悦。无奈初学之时懵懂无知，信息闭塞，手上没有充足的资料，导致卡了很长时间的瓶颈，图论、动规与数据结构皆啃不动。那一段时间我几乎想放弃，是黄学长的博客拯救了我，我参考黄学长的代码成功突破了瓶颈，代价是放弃了高中仅有一次的社会实践活动。彼时已是高一的尾声，而我在机房里只是排名第四的弱鸡，湖南省队集训后，我终于了解到外省的实力是如此的强大，我在OI界是多么的渺小，于是我开始广加大佬的友链，跟着POPOQQQ大爷的博客做题，积极参与各种问题的讨论，终于，我的代码能力成倍提升，思维高度也达到了一定的水平。我终于具备了参加NOI的实力，也如愿获得了铜牌靠前的成绩。<br>　　<br>　　此时此刻，我才意识到，普通人未必一事无成，而天才未必事事顺心。<br>　　<br>　　在OI界混迹两年，我认识了各路大佬，见识了种种不寻常的现象，比如说喜闻乐见的女装选手，玄妙的人品理论，以及对某国家领导人的膜拜风气。这些都是我宝贵的人生经验，未来的某一天我回想起曾经在OI界逸闻趣事，也会庆幸自己曾经选择了OI之路吧。<br>　　<br>　　在紧张的学习中，我也同样收获了真挚的友情，自高中以来，没有靖文在身边，我的生活总有一些空虚，班内没有与我志同道合的友人，每次吃饭时我也都是独自一人。直到在机房结识了柳志轩、焦景辉与柴东辰三位挚友，我的生活才增添了一些色彩，回想起我们4人一起吃饭的场景，心中掠过无限温暖。尤其是柳志轩，性情居然与靖文十分相似，都是那么的有趣，OI路上有之为伴也是人生一大幸事也。焦景辉则是消息灵通、精通电脑与手机技术的高手，有问题的时候我就去请教他，而他也都是有问必答，柴东辰是我们团队的外交大使，性情耿直，我也十分中意这样的性格。回想起曾经和柳志轩谈笑风生，和焦景辉畅谈人生，和柴东辰共赏动漫的时光，也挺快乐。<br>　　<br>　　总之，OI带给我的不止是国赛上的铜牌与浙大的一纸协议，更重要的是宝贵的人生经历与真挚友情。<br>　　<br>　　吾将带着这些回忆，以计算机为剑，继续为零和一的意义搏杀。</p>
<p>　　</p>
<p>　　</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[${\color{Yellow}【}{\color{Yellow}置}{\color{Yellow}顶}{\color{Yellow}】}$编程技巧总结]]></title>
      <url>/2050/07/02/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<ul>
<li>日期年份为人工置顶，请不要吐槽</li>
</ul>
<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<h2 id="编译与运行"><a href="#编译与运行" class="headerlink" title="编译与运行"></a>编译与运行</h2><p>创建run.bat并输入如下代码：</p>
<figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off</div><div class="line"><span class="built_in">set</span> <span class="built_in">path</span>=c:\mingw\bin</div><div class="line">g++ -g <span class="number">274</span>.cpp -o <span class="number">274</span>.exe</div><div class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> == <span class="number">1</span> <span class="keyword">goto</span> :next</div><div class="line"><span class="number">274</span>.exe</div><div class="line">:next</div></pre></td></tr></table></figure>
<p>然后在终端中运行run即可</p>
<p>　　</p>
<p>　　</p>
<h2 id="对拍"><a href="#对拍" class="headerlink" title="对拍"></a>对拍</h2><p>创建pai.bat并输入如下代码：</p>
<figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">@<span class="built_in">echo</span> off </div><div class="line"><span class="built_in">set</span> <span class="built_in">path</span>=c:\mingw\bin</div><div class="line">g++ -g makedata.cpp -o makedata.exe</div><div class="line">g++ -g <span class="number">1</span>.cpp -o <span class="number">1</span>.exe</div><div class="line">g++ -g <span class="number">2</span>.cpp -o <span class="number">2</span>.exe</div><div class="line">:loop</div><div class="line"><span class="built_in">set</span> <span class="built_in">path</span>=c:\mingw\bin</div><div class="line">makedata.exe</div><div class="line"><span class="number">1</span>.exe</div><div class="line"><span class="number">2</span>.exe</div><div class="line"><span class="built_in">set</span> <span class="built_in">path</span>=c:\windows\system32</div><div class="line">fc read1.out read2.out</div><div class="line"><span class="keyword">if</span> <span class="keyword">errorlevel</span> == <span class="number">1</span> <span class="built_in">pause</span></div><div class="line"><span class="keyword">goto</span> loop</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="开栈"><a href="#开栈" class="headerlink" title="开栈"></a>开栈</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Windows下代码：</span></div><div class="line"><span class="keyword">int</span> __size__=<span class="number">20</span>&lt;&lt;<span class="number">20</span>;<span class="comment">//20MB</span></div><div class="line"><span class="keyword">char</span> *__p__=(<span class="keyword">char</span>*)<span class="built_in">malloc</span>(__size__)+__size__;</div><div class="line">__asm__(<span class="string">"movl %0, %%esp\n"</span>::<span class="string">"r"</span>(__p__));</div><div class="line"></div><div class="line"><span class="comment">//linux下代码：</span></div><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(linker, <span class="meta-string">"/STACK:102400000,102400000"</span>)</span></div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="常数优化"><a href="#常数优化" class="headerlink" title="常数优化"></a>常数优化</h2><p>1、选几个主要的循环，定义循环变量为register int</p>
<p>2、循环中使用++i,而不是i++</p>
<p>3、循环展开，一般展开4层足矣</p>
<p>4、使用读入优化和输出优化</p>
<p>5、如果某些OJ不开O2的话，你可以使用如下代码强制开O2</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(<span class="meta-string">"-O2"</span>)</span></div></pre></td></tr></table></figure>
<p>6、取模运算建议这样写：（这样避免了使用long long以及尽量少的使用%符号</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="gdb调试"><a href="#gdb调试" class="headerlink" title="gdb调试"></a>gdb调试</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//在终端里运行：</span></div><div class="line">$ gdb 文件名.exe</div><div class="line">$ b <span class="number">13</span>    <span class="comment">//在13行设置断点</span></div><div class="line">$ r       <span class="comment">//运行至断点</span></div><div class="line">$ n       <span class="comment">//单步跟踪</span></div><div class="line">$ s       <span class="comment">//进入函数</span></div><div class="line">$ p a     <span class="comment">//输出变量a的值</span></div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1876】最大公约数]]></title>
      <url>/2018/02/22/1621/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1876" target="_blank" rel="external">AC通道</a></p>
<p>用同余原理的话，高精度取模会爆掉（我说的是代码复杂度</p>
<p>这里介绍更相减损术算法：</p>
<p>（1）若$a$为奇数，$b$为偶数，则$gcd(a,b)=gcd(a,\frac{b}{2})$</p>
<p>（2）若$a$为偶数，$b$为奇数，则$gcd(a,b)=gcd(\frac{a}{2},b)$</p>
<p>（3）若$a,b$都为偶数，则$gcd(a,b)=2gcd(\frac{a}{2},\frac{b}{2})$</p>
<p>（4）若$a,b$都为奇数，则$gcd(a,b)=gcd(a-b,b)$</p>
<p>巧妙避开了高精度除法，至于除2的运算，借位就可以了，代码十分简单</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1255</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> ll BASE=<span class="number">1e8</span>,WIDTH=<span class="number">8</span>;</div><div class="line"><span class="keyword">char</span> readin[MAXN*<span class="number">8</span>];</div><div class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</div><div class="line"><span class="keyword">struct</span> bigint&#123;</div><div class="line">	ll s[MAXN],len;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;<span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="keyword">sizeof</span>(s));len=<span class="number">0</span>;&#125;</div><div class="line">	bigint <span class="keyword">operator</span> =(ll num)&#123;init();<span class="keyword">while</span>(num)&#123;s[++len]=num%BASE;num/=BASE;&#125;<span class="keyword">return</span> *<span class="keyword">this</span>;&#125;</div><div class="line">	bigint <span class="keyword">operator</span> =(<span class="keyword">char</span> *str)&#123;</div><div class="line">		init();</div><div class="line">		ll numlen=<span class="built_in">strlen</span>(str);len=(numlen+WIDTH<span class="number">-1</span>)/WIDTH;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=numlen<span class="number">-1</span>,t=<span class="number">0</span>,w;i&gt;=<span class="number">0</span>;--i,w*=<span class="number">10</span>)&#123;</div><div class="line">			<span class="keyword">if</span>((numlen-i<span class="number">-1</span>)%WIDTH==<span class="number">0</span>) &#123;w=<span class="number">1</span>;++t;&#125;</div><div class="line">			s[t]+=(str[i]<span class="number">-48</span>)*w;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span> &lt;(<span class="keyword">const</span> bigint &amp;b)<span class="keyword">const</span>&#123;</div><div class="line">		<span class="keyword">if</span>(b.len!=len) <span class="keyword">return</span> len&lt;b.len;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=b.len;i&gt;=<span class="number">1</span>;--i)<span class="keyword">if</span>(s[i]!=b.s[i])<span class="keyword">return</span> s[i]&lt;b.s[i];</div><div class="line">		<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span> ==(<span class="keyword">const</span> bigint &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> !(b&lt;*<span class="keyword">this</span>)&amp;&amp;!(*<span class="keyword">this</span>&lt;b);&#125;</div><div class="line">	bigint <span class="keyword">operator</span> +(<span class="keyword">const</span> bigint &amp;b)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i)&#123;</div><div class="line">			s[i]+=b.s[i];</div><div class="line">			<span class="keyword">if</span>(s[i]&gt;=BASE)  &#123;s[i]-=BASE; ++s[i+<span class="number">1</span>];&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(s[len+<span class="number">1</span>]) ++len;</div><div class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</div><div class="line">	&#125;</div><div class="line">	bigint <span class="keyword">operator</span> -(<span class="keyword">const</span> bigint &amp;b)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i)&#123;</div><div class="line">			s[i]-=b.s[i];</div><div class="line">			<span class="keyword">if</span>(s[i]&lt;<span class="number">0</span>) &#123;s[i]+=BASE; --s[i+<span class="number">1</span>];&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(!s[len]&amp;&amp;len) --len;</div><div class="line">		<span class="keyword">return</span> *<span class="keyword">this</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">MUL2</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i) s[i]*=<span class="number">2</span>; len+=<span class="number">5</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i)&#123;</div><div class="line">			s[i+<span class="number">1</span>]+=s[i]/BASE;</div><div class="line">			s[i]%=BASE;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(!s[len]&amp;&amp;len) --len;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">DIV2</span><span class="params">()</span></span>&#123;</div><div class="line">		len+=<span class="number">5</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=len;i&gt;=<span class="number">1</span>;--i)&#123;</div><div class="line">			<span class="keyword">if</span>(s[i]&amp;<span class="number">1</span>)s[i<span class="number">-1</span>]+=BASE;</div><div class="line">			s[i]&gt;&gt;=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(!s[len]&amp;&amp;len) --len;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">MOD2</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">if</span>(len==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">return</span> s[<span class="number">1</span>]%<span class="number">2</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%s"</span>,readin);*<span class="keyword">this</span>=readin;&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">if</span>(len==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"0"</span>);</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld"</span>,s[len]);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=len<span class="number">-1</span>;i&gt;=<span class="number">1</span>;--i)</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%08lld"</span>,s[i]);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;A,B,C;</div><div class="line"><span class="function">bigint <span class="title">GCD</span><span class="params">(bigint A,bigint B)</span></span>&#123;</div><div class="line">	<span class="keyword">while</span>(!(A==B))&#123;</div><div class="line">		<span class="keyword">if</span>(A&lt;B) swap(A,B);</div><div class="line">		<span class="keyword">if</span>(!A.MOD2()&amp;&amp;B.MOD2())  	  A.DIV2();</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(A.MOD2()&amp;&amp;!B.MOD2())  B.DIV2();</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(!A.MOD2()&amp;&amp;!B.MOD2())   ++cnt,A.DIV2(),B.DIV2();</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(A.MOD2()&amp;&amp;B.MOD2()) A=A-B;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> A;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	A.read();  B.read();  C=GCD(A,B);</div><div class="line">	<span class="keyword">while</span>(cnt--)  C.MUL2();</div><div class="line">	C.print();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 高精度 </tag>
            
            <tag> 更相减损术 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【游记】湖南省队集训总结]]></title>
      <url>/2017/07/10/%E3%80%90%E6%B8%B8%E8%AE%B0%E3%80%91%E6%B9%96%E5%8D%97%E7%9C%81%E9%98%9F%E9%9B%86%E8%AE%AD%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><hr>
<p><img src="http://i1.buimg.com/591838/3e690b3d84d314ac.png"></p>
<p>这题目名称……出题人是有多懒</p>
<p>看完第一题，我发现了一个性质，于是大力搜了一发，拿到60</p>
<p>第二题和第三题都是计算几何，我的计算几何姿势已经忘完，只能暴力20分</p>
<p>结果考完试后，我意识到第一题的数组应该开2倍……..</p>
<p>于是60分变成了30………..</p>
<p>我也很无奈啊</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><hr>
<p>今天的题目不太友好</p>
<p>T1这是怎么东西啊，根本不会算啊</p>
<p>T2原以为30%的数据就是30分，于是写了一发spfa就去睡觉了</p>
<p>结果30%的数据是10分……..</p>
<p>T3一看就是贪心，但是我并不知道怎么贪，于是爆搜走起</p>
<p>整场考试只拿到了20分</p>
<p>可能是精神状态不佳吧</p>
<p>我只能这样安慰自己</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><hr>
<p>今天考试状态大好，甚至没有犯困</p>
<p>T1是一个三维偏序问题，限制是无重复数字，要求复杂度nlogn</p>
<p>我果断写了一发CDQ分治拿到60（现场ljt大佬使用压位大法成功卡过，无限膜拜</p>
<p>正解非常的妙，使用容斥原理将问题转化为二维数点，直接树状数组</p>
<p>T2是一个博弈题，没有研究过博弈论的我怎么可能会做，于是get到40走人</p>
<p>T3显然是一个回文自动机的题目，但是我忘了回文自动机怎么写，果断暴力20分走人</p>
<p>今天终于破了100分的坎，好高兴啊</p>
<p>PS:下午结束后，我们搬入了宾馆，但是此时天降大雨</p>
<p>天象所示这次行动似乎是错误的，吾心不禁有一些慌乱</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h2><hr>
<p>看完T1我马上想到这是分数规划，十分熟练地写了一发（不到20分钟就搞定了</p>
<p>然后心想这次稳了，于是去看T2</p>
<p>这什么鬼啊，怎么只有20分的部分分</p>
<p>思考正解无果，于是果断写了20分的程序</p>
<p>T3好像是个状压dp的样子，于是写了一发，然后发现复杂度有点不对啊</p>
<p>难道是我写的太暴力吗？</p>
<p>然后我听见旁边的孟教练惊呼一声：卧槽，怎么考插头dp啊</p>
<p>然后我意识到自己太naive了，写出来的只是暴力算法</p>
<p>没办法，只好GG了，于是去检查T1</p>
<p>造出数据之后，我惊喜地发现大数据跑不过</p>
<p>然后我意识到这个模型是可以优化建图的，然后优化方法我不会</p>
<p>知道考试结束也没能想出来</p>
<p>题解出来之后，我发现这玩意是个FFT优化状压dp的毒瘤东西</p>
<p>而我的程序由于一些奥妙重重的原因挂掉了（题意杀</p>
<p>而且T2也因为取模的原因挂掉了</p>
<p>只拿到了T1的55分（事实上由于数据造错了，应该是65分</p>
<p>回去后和焦景辉一起改T1，我俩都被卡了若干小时的常数（好恶心啊</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day5"><a href="#Day5" class="headerlink" title="Day5"></a>Day5</h2><hr>
<p>今天的题目比较毒瘤，但考试状态不错，该拿的分都拿到了</p>
<p>看完T1的数据范围我是崩溃的，n怎么全是1e5啊，不给暴力分有木有啊</p>
<p>后来我意识到W=1e5和W=5000的情况用主席树可以解决</p>
<p>于是果断写了一发，但是姿势不太熟练，用了近2个小时，拿到了40分</p>
<p>然后T2毒瘤数论题，我只能拿n^2暴力走人了</p>
<p>然后去看T3，这种构造题我怎么可能会，于是骗到10分滚粗</p>
<p>此时还剩1个半小时左右，于是我去推T2的式子</p>
<p>最后推出了一个预处理μ^2前缀和可以做到根号复杂度的式子</p>
<p>但是预处理μ^2前缀和我不会做，于是成功GG</p>
<p>考完试后，我意识到T1还有4个测试点可以离线，于是写一发简单的莫队就能多拿20</p>
<p>本场考试40+20+10，算是状态不错了吧</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day6"><a href="#Day6" class="headerlink" title="Day6"></a>Day6</h2><hr>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】小Y]]></title>
      <url>/2017/07/08/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91%E5%B0%8FY/</url>
      <content type="html"><![CDATA[<ul>
<li>题目来源：湖南省队集训Day2T1</li>
</ul>
<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p><img src="http://i2.kiimg.com/591838/0b612140b58aa7ff.png"></p>
<hr>
<p>分析：</p>
<p>首先考虑如何计算答案：把左区间视为左括号，右区间视为右括号，设$x_i$表示第$i$个右括号左边左括号的数量</p>
<p>那么答案就是$\sum_{i=1}^{S}(x_i-i+1)$   （仔细考虑为什么</p>
<p>然后我们发现如果有一段连续的右括号，那么这些右括号的x值是相同的，可以一起计算</p>
<p>所以我们对这样一段连续的右括号一起计算贡献，复杂度为$O(n \sqrt n)$ （仔细思考为何是$\sqrt n$</p>
<p>接下来考虑如何找到连续右括号的最右端（不再详述了，看代码就能理解</p>
<p>代码中的find()函数是找第k小，calc()函数是找比v小的数的个数</p>
<p>总的复杂度$O(n \sqrt n \log n)$，虽然n到了1e5，但是跑得飞快</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</div><div class="line"><span class="keyword">int</span> n,m,cnt,fac[MAXN],inv[MAXN],root[MAXN&lt;&lt;<span class="number">4</span>],sum[MAXN&lt;&lt;<span class="number">4</span>],son[MAXN&lt;&lt;<span class="number">4</span>][<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">pow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> ret=<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(b)&#123;</div><div class="line">		<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ret=mul(ret,a);</div><div class="line">		a=mul(a,a); b&gt;&gt;=<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> N=<span class="number">100000</span>;  fac[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i) fac[i]=mul(fac[i<span class="number">-1</span>],i);</div><div class="line">	inv[N]=<span class="built_in">pow</span>(fac[N],mod<span class="number">-2</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=N<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i) inv[i]=mul(inv[i+<span class="number">1</span>],i+<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">newnode</span><span class="params">(<span class="keyword">int</span> last)</span></span>&#123;</div><div class="line">	++cnt;</div><div class="line">	son[cnt][<span class="number">0</span>]=son[last][<span class="number">0</span>];</div><div class="line">	son[cnt][<span class="number">1</span>]=son[last][<span class="number">1</span>];</div><div class="line">	sum[cnt]=sum[last]+<span class="number">1</span>;</div><div class="line">	<span class="keyword">return</span> cnt;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;root,<span class="keyword">int</span> last,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	root=newnode(last);</div><div class="line">	<span class="keyword">if</span>(l==r)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(v&lt;=mid) build(son[root][<span class="number">0</span>],son[last][<span class="number">0</span>],l,mid,v);</div><div class="line">	<span class="keyword">else</span> build(son[root][<span class="number">1</span>],son[last][<span class="number">1</span>],mid+<span class="number">1</span>,r,v);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> rootL,<span class="keyword">int</span> rootR,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)  <span class="keyword">return</span> l;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>,temp=sum[son[rootR][<span class="number">0</span>]]-sum[son[rootL][<span class="number">0</span>]];</div><div class="line">	<span class="keyword">if</span>(k&lt;=temp) <span class="keyword">return</span> find(son[rootL][<span class="number">0</span>],son[rootR][<span class="number">0</span>],l,mid,k);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> find(son[rootL][<span class="number">1</span>],son[rootR][<span class="number">1</span>],mid+<span class="number">1</span>,r,k-temp);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> rootL,<span class="keyword">int</span> rootR,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r) <span class="keyword">return</span> sum[rootR]-sum[rootL];</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(v&lt;=mid) <span class="keyword">return</span> calc(son[rootL][<span class="number">0</span>],son[rootR][<span class="number">0</span>],l,mid,v);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> sum[son[rootR][<span class="number">0</span>]]-sum[son[rootL][<span class="number">0</span>]]+calc(son[rootL][<span class="number">1</span>],son[rootR][<span class="number">1</span>],mid+<span class="number">1</span>,r,v);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</div><div class="line">	cnt=<span class="number">0</span>;</div><div class="line">	<span class="built_in">memset</span>(sum,<span class="number">0</span>,<span class="keyword">sizeof</span>(sum));</div><div class="line">	<span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span>(son));</div><div class="line">	<span class="built_in">memset</span>(root,<span class="number">0</span>,<span class="keyword">sizeof</span>(root));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();  clear();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) build(root[i],root[i<span class="number">-1</span>],<span class="number">1</span>,n,read());</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> l1=read(),r1=read(),l2=read(),r2=read(),S=r1-l1+<span class="number">1</span>,ans=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>,last=<span class="number">0</span>;k&lt;=S;k=last+<span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">int</span> I=find(root[l2<span class="number">-1</span>],root[r2],<span class="number">1</span>,n,k);</div><div class="line">			<span class="keyword">int</span> x=calc(root[l1<span class="number">-1</span>],root[r1],<span class="number">1</span>,n,I);</div><div class="line">			<span class="keyword">int</span> J=find(root[l1<span class="number">-1</span>],root[r1],<span class="number">1</span>,n,x+<span class="number">1</span>);</div><div class="line">			last =calc(root[l2<span class="number">-1</span>],root[r2],<span class="number">1</span>,n,J);</div><div class="line">			ans=mul(ans,mul(fac[x-k+<span class="number">1</span>],inv[x-last]));</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre(); <span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 主席树 </tag>
            
            <tag> 分块 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【清华集训2014】奇数国]]></title>
      <url>/2017/07/06/38/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://uoj.ac/problem/38" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>果然提交人数多的题都是水题</p>
<p>显然答案是$\phi(product)$，也就是求区间积的欧拉函数并支持修改操作</p>
<p>只需要用线段树记录区间积的质因子分解就行了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">19961993</span>;</div><div class="line"><span class="keyword">int</span> Q,tot,ans[<span class="number">65</span>],cnt[<span class="number">65</span>],prime[<span class="number">65</span>],check[<span class="number">305</span>],tr[MAXN&lt;&lt;<span class="number">2</span>][<span class="number">65</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">fast</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">ret</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=mul(a,a))<span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=mul(ret,a);<span class="keyword">return</span> ret;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">relord</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">60</span>;++i)</div><div class="line">		tr[p][i]=tr[p&lt;&lt;<span class="number">1</span>][i]+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>][i];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		tr[p][<span class="number">2</span>]++;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid);  build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">60</span>;++i)tr[p][i]=cnt[i];</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) updata(p&lt;&lt;<span class="number">1</span>,l,mid,x);</div><div class="line">	<span class="keyword">else</span>       updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">60</span>;++i)</div><div class="line">			ans[i]+=tr[p][i];</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) query(p&lt;&lt;<span class="number">1</span>,l,mid,x,y);</div><div class="line">	<span class="keyword">if</span>(y&gt;mid)  query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">60</span>;++i)<span class="keyword">while</span>(n%prime[i]==<span class="number">0</span>)</div><div class="line">		cnt[i]++,n/=prime[i];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</div><div class="line">	ll ret=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">60</span>;++i)<span class="keyword">if</span>(ans[i])</div><div class="line">		ret=mul(ret,mul(prime[i]<span class="number">-1</span>,fast(prime[i],ans[i]<span class="number">-1</span>)));</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ret);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">281</span>;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i]) prime[++tot]=i;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=tot&amp;&amp;prime[j]*i&lt;=<span class="number">281</span>;++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	Q=read(); pre(); build(<span class="number">1</span>,<span class="number">1</span>,N);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Q;++i)&#123;</div><div class="line">		<span class="keyword">int</span> opt=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">0</span>)&#123;</div><div class="line">			<span class="keyword">int</span> l=read(),r=read();</div><div class="line">			<span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</div><div class="line">			query(<span class="number">1</span>,<span class="number">1</span>,N,l,r);</div><div class="line">			output();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> x=read(),v=read();</div><div class="line">			<span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="keyword">sizeof</span>(cnt));</div><div class="line">			solve(v);</div><div class="line">			updata(<span class="number">1</span>,<span class="number">1</span>,N,x);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> uoj </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【清华集训2014】玛里苟斯]]></title>
      <url>/2017/07/05/36/</url>
      <content type="html"><![CDATA[<ul>
<li>线性基重学系列第三题<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://uoj.ac/problem/36" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>清华集训的题果然都是神题</p>
<p>早就听说过这道神题，一直都不敢碰，今天复习线性基，终于A掉了（好开心啊</p>
<p>粘个题解：（有上好的现成题解为何不用？</p>
<ul>
<li><a href="https://blog.sengxian.com/solutions/bzoj-3811" target="_blank" rel="external">传送门</a></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,K,cnt;</div><div class="line">ll a[MAXN],b[<span class="number">25</span>],Mat[<span class="number">25</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve1</span><span class="params">()</span></span>&#123;</div><div class="line">	ll ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) ans|=a[i];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans&gt;&gt;<span class="number">1</span>);</div><div class="line">	<span class="keyword">if</span>(ans&amp;<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">".5"</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve2</span><span class="params">()</span></span>&#123;</div><div class="line">	ll ans=<span class="number">0</span>,res=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">32</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">32</span>;j&gt;=<span class="number">0</span>;--j)&#123;</div><div class="line">		<span class="keyword">bool</span> flag; </div><div class="line">		flag=<span class="number">0</span>; <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;++k)<span class="keyword">if</span>(a[k]&gt;&gt;i&amp;<span class="number">1</span>)flag=<span class="number">1</span>; <span class="keyword">if</span>(!flag) <span class="keyword">continue</span>;</div><div class="line">		flag=<span class="number">0</span>; <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;++k)<span class="keyword">if</span>(a[k]&gt;&gt;j&amp;<span class="number">1</span>)flag=<span class="number">1</span>; <span class="keyword">if</span>(!flag) <span class="keyword">continue</span>;</div><div class="line">		flag=<span class="number">0</span>; <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;++k)<span class="keyword">if</span>((a[k]&gt;&gt;i&amp;<span class="number">1</span>)!=(a[k]&gt;&gt;j&amp;<span class="number">1</span>))flag=<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(i+j<span class="number">-1</span>-flag==<span class="number">-1</span>) res+=<span class="number">2</span>;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(i+j<span class="number">-1</span>-flag==<span class="number">-2</span>) res++;</div><div class="line">		<span class="keyword">else</span> ans+=(<span class="number">1L</span>L&lt;&lt;(i+j<span class="number">-1</span>-flag));</div><div class="line">	&#125;</div><div class="line">	ans+=(res&gt;&gt;<span class="number">2</span>);  res%=<span class="number">4</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</div><div class="line">	<span class="keyword">if</span>(res==<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">".25"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(res==<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">".5"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(res==<span class="number">3</span>) <span class="built_in">printf</span>(<span class="string">".75"</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve3</span><span class="params">()</span></span>&#123;</div><div class="line">	ll ans=<span class="number">0</span>,res=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">23</span>;j&gt;=<span class="number">0</span>;--j)<span class="keyword">if</span>(a[i]&gt;&gt;j&amp;<span class="number">1</span>)&#123;</div><div class="line">		<span class="keyword">if</span>(Mat[j]) a[i]^=Mat[j];</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			Mat[j]=a[i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=j<span class="number">-1</span>;k&gt;=<span class="number">0</span>;--k) <span class="keyword">if</span>(Mat[k]&amp;&amp;(Mat[j]&gt;&gt;k&amp;<span class="number">1</span>))Mat[j]^=Mat[k];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;=<span class="number">23</span>;++k)<span class="keyword">if</span>(Mat[k]&amp;&amp;(Mat[j]&gt;&gt;k&amp;<span class="number">1</span>))Mat[k]^=Mat[j];</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">23</span>;++i)<span class="keyword">if</span>(Mat[i])b[++cnt]=Mat[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;cnt);++i)&#123;</div><div class="line">		ll ret=<span class="number">0</span>,Shang=<span class="number">0</span>,Yu=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)<span class="keyword">if</span>(i&amp;(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>)))ret^=b[j];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=K;++j)&#123;</div><div class="line">			Shang*=ret;  Yu*=ret;</div><div class="line">			Shang+=Yu&gt;&gt;cnt;  Yu%=(<span class="number">1</span>&lt;&lt;cnt);</div><div class="line">		&#125;</div><div class="line">		ans+=Shang;  res+=Yu;</div><div class="line">		ans+=res&gt;&gt;cnt;  res%=(<span class="number">1</span>&lt;&lt;cnt);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</div><div class="line">	<span class="keyword">if</span>(res) <span class="built_in">printf</span>(<span class="string">".5"</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  K=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</div><div class="line">	<span class="keyword">if</span>(K==<span class="number">1</span>) solve1();</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(K==<span class="number">2</span>) solve2();</div><div class="line">	<span class="keyword">else</span> solve3();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> uoj </tag>
            
            <tag> 线性基 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4644】经典傻逼题]]></title>
      <url>/2017/07/05/4644/</url>
      <content type="html"><![CDATA[<ul>
<li>线性基重学系列第二题<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4644" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>将边权异或到点上，这样问题就转化成了选择若干点使得他们的异或和最大</p>
<p>至于每次添边时询问，线段树分治即可</p>
<p>写这道题练习bitset的用法，岂不美哉</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1050</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="built_in">bitset</span>&lt;MAXN&gt; Int;</div><div class="line"><span class="keyword">int</span> Case,n,m,L,last[MAXN];</div><div class="line">Int value[MAXN],Mat[MAXN];</div><div class="line"><span class="built_in">vector</span>&lt;Int&gt;data[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Int <span class="title">Read</span><span class="params">()</span></span>&#123;</div><div class="line">	Int ret;  ret.reset();</div><div class="line">	<span class="keyword">char</span> ch[MAXN]; <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>); <span class="keyword">int</span> len=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i) ret[len-i]=ch[i]-<span class="string">'0'</span>;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">output</span><span class="params">(Int ans)</span></span>&#123;</div><div class="line">	<span class="keyword">char</span> vout[MAXN];  <span class="keyword">int</span> cur=<span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(ans.none()) <span class="built_in">puts</span>(<span class="string">"0"</span>);</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=L;i&gt;=<span class="number">0</span>;--i)<span class="keyword">if</span>(ans[i])&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&gt;=<span class="number">0</span>;--j) vout[cur++]=ans[j]+<span class="string">'0'</span>;</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">		vout[cur++]=<span class="string">'\0'</span>; <span class="built_in">puts</span>(vout);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,Int v)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</div><div class="line">		data[p].push_back(v);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,v);</div><div class="line">	<span class="keyword">if</span>(y&gt;mid)  updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,v);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,Int *Mat)</span></span>&#123;</div><div class="line">	Int Lmat[MAXN],Rmat[MAXN],temp[MAXN];</div><div class="line">	<span class="built_in">memcpy</span>(temp,Mat,<span class="keyword">sizeof</span>(temp));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;data[p].size();++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=L;j&gt;=<span class="number">0</span>;--j)<span class="keyword">if</span>(data[p][i][j])&#123;</div><div class="line">		<span class="keyword">if</span>(!temp[j].none()) data[p][i]^=temp[j];</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			temp[j]=data[p][i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=j<span class="number">-1</span>;k&gt;=<span class="number">0</span>;--k)<span class="keyword">if</span>(!temp[k].none()&amp;&amp;temp[j][k])temp[j]^=temp[k];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;=L;++k)<span class="keyword">if</span>(!temp[k].none()&amp;&amp;temp[j][k])temp[k]^=temp[j];</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">memcpy</span>(Lmat,temp,<span class="keyword">sizeof</span>(Lmat));</div><div class="line">	<span class="built_in">memcpy</span>(Rmat,temp,<span class="keyword">sizeof</span>(Rmat));</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		Int ans; ans.reset();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=L;i&gt;=<span class="number">0</span>;--i)<span class="keyword">if</span>(!ans[i])ans^=temp[i];</div><div class="line">		output(ans);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	dfs(p&lt;&lt;<span class="number">1</span>,l,mid,Lmat);</div><div class="line">	dfs(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,Rmat);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	Case=read();  n=read();  m=read();  L=<span class="number">1000</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();Int v=Read();</div><div class="line">		<span class="keyword">if</span>(x==y) <span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">if</span>(last[x]) updata(<span class="number">1</span>,<span class="number">1</span>,m,last[x],i<span class="number">-1</span>,value[x]);</div><div class="line">		<span class="keyword">if</span>(last[y]) updata(<span class="number">1</span>,<span class="number">1</span>,m,last[y],i<span class="number">-1</span>,value[y]);</div><div class="line">		last[x]=i; value[x]^=v;</div><div class="line">		last[y]=i; value[y]^=v;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)updata(<span class="number">1</span>,<span class="number">1</span>,m,last[i],m,value[i]);</div><div class="line">	dfs(<span class="number">1</span>,<span class="number">1</span>,m,Mat);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> bzoj </tag>
            
            <tag> 线性基 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4184】shallot]]></title>
      <url>/2017/07/04/4184/</url>
      <content type="html"><![CDATA[<ul>
<li>线性基重学系列第一题<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4184" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>考虑一个元素存在的时间[l,r]，在线段树对应区间的vector中加入这个元素</p>
<p>然后用类似于标记永久化的方法dfs一遍即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line">ll n,Mat[<span class="number">35</span>],a[MAXN];</div><div class="line"><span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt;cnt,last;</div><div class="line"><span class="built_in">vector</span>&lt;ll&gt;data[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,ll v)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</div><div class="line">		data[p].push_back(v);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,v);</div><div class="line">	<span class="keyword">if</span>(y&gt;mid)  updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,v);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,ll *Mat)</span></span>&#123;</div><div class="line">	ll temp[<span class="number">35</span>],Lmat[<span class="number">35</span>],Rmat[<span class="number">35</span>];</div><div class="line">	<span class="built_in">memcpy</span>(temp,Mat,<span class="keyword">sizeof</span>(temp));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;data[p].size();++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">32</span>;j&gt;=<span class="number">0</span>;--j)<span class="keyword">if</span>(data[p][i]&gt;&gt;j&amp;<span class="number">1</span>)&#123;</div><div class="line">		<span class="keyword">if</span>(temp[j]) data[p][i]^=temp[j];</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			temp[j]=data[p][i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=j<span class="number">-1</span>;k&gt;=<span class="number">0</span>;--k) <span class="keyword">if</span>(temp[k]&amp;&amp;(temp[j]&gt;&gt;k&amp;<span class="number">1</span>))temp[j]^=temp[k];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=j+<span class="number">1</span>;k&lt;=<span class="number">32</span>;++k)<span class="keyword">if</span>(temp[k]&amp;&amp;(temp[j]&gt;&gt;k&amp;<span class="number">1</span>))temp[k]^=temp[j];</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">memcpy</span>(Lmat,temp,<span class="keyword">sizeof</span>(Lmat));</div><div class="line">	<span class="built_in">memcpy</span>(Rmat,temp,<span class="keyword">sizeof</span>(Rmat));</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		ll ans=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">32</span>;i&gt;=<span class="number">0</span>;--i)cmax(ans,ans^temp[i]);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	dfs(p&lt;&lt;<span class="number">1</span>,l,mid,Lmat);  dfs(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,Rmat);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  </div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		a[i]=read();</div><div class="line">		<span class="keyword">if</span>(a[i]&gt;<span class="number">0</span>)&#123;<span class="keyword">if</span>(++cnt[a[i]]==<span class="number">1</span>) last[a[i]]=i;&#125;</div><div class="line">		<span class="keyword">else</span>&#123;<span class="keyword">if</span>(--cnt[-a[i]]==<span class="number">0</span>) updata(<span class="number">1</span>,<span class="number">1</span>,n,last[-a[i]],i<span class="number">-1</span>,-a[i]);&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(cnt[<span class="built_in">abs</span>(a[i])])updata(<span class="number">1</span>,<span class="number">1</span>,n,last[<span class="built_in">abs</span>(a[i])],n,<span class="built_in">abs</span>(a[i]));</div><div class="line">	dfs(<span class="number">1</span>,<span class="number">1</span>,n,Mat);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> bzoj </tag>
            
            <tag> 线性基 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【51nod算法马拉松】连续区间]]></title>
      <url>/2017/07/04/%E3%80%9051nod%E7%AE%97%E6%B3%95%E9%A9%AC%E6%8B%89%E6%9D%BE%E3%80%91%E8%BF%9E%E7%BB%AD%E5%8C%BA%E9%97%B4/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.51nod.com/contest/problem.html#!problemId=1810" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>直接粘题解：（懒得写了</p>
<p><img src="http://i2.kiimg.com/591838/47a2aca2aaf0f6e2.png"></p>
<p>nlogn的复杂度跑得飞快</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,a[MAXN],maxx[MAXN],minn[MAXN],cnt[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;++ans; <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;  </div><div class="line">	solve(l,mid);  solve(mid+<span class="number">1</span>,r);</div><div class="line">	maxx[mid]=minn[mid]=a[mid];</div><div class="line">	maxx[mid+<span class="number">1</span>]=minn[mid+<span class="number">1</span>]=a[mid+<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid<span class="number">-1</span>;i&gt;=l;--i)&#123;</div><div class="line">		maxx[i]=max(maxx[i+<span class="number">1</span>],a[i]);</div><div class="line">		minn[i]=min(minn[i+<span class="number">1</span>],a[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">2</span>;i&lt;=r;++i)&#123;</div><div class="line">		maxx[i]=max(maxx[i<span class="number">-1</span>],a[i]);</div><div class="line">		minn[i]=min(minn[i<span class="number">-1</span>],a[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=mid;++i)&#123;</div><div class="line">		<span class="keyword">int</span> j=maxx[i]-minn[i]+i;</div><div class="line">		<span class="keyword">if</span>(j&lt;=mid||j&gt;r||maxx[j]&gt;maxx[i]||minn[j]&lt;minn[i]) <span class="keyword">continue</span>;</div><div class="line">		++ans;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span>;i&lt;=r;++i)&#123;</div><div class="line">		<span class="keyword">int</span> j=minn[i]-maxx[i]+i;</div><div class="line">		<span class="keyword">if</span>(j&gt;mid||j&lt;l||maxx[j]&gt;maxx[i]||minn[j]&lt;minn[i]) <span class="keyword">continue</span>;</div><div class="line">		++ans;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> L=mid+<span class="number">1</span>,R=mid+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid;i&gt;=l;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(maxx[R]&lt;maxx[i]&amp;&amp;R&lt;=r)  ++cnt[minn[R]+R],++R;</div><div class="line">		<span class="keyword">while</span>(minn[L]&gt;minn[i]&amp;&amp;L&lt;=r)  --cnt[minn[L]+L],++L;</div><div class="line">		<span class="keyword">if</span>(R&gt;L) ans+=cnt[maxx[i]+i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(R&lt;=r) ++cnt[minn[R]+R],++R;</div><div class="line">	<span class="keyword">while</span>(L&lt;=r) --cnt[minn[L]+L],++L;</div><div class="line">	L=R=mid;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span>;i&lt;=r;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(maxx[L]&lt;maxx[i]&amp;&amp;L&gt;=l) ++cnt[minn[L]-L+n],--L;</div><div class="line">		<span class="keyword">while</span>(minn[R]&gt;minn[i]&amp;&amp;R&gt;=l) --cnt[minn[R]-R+n],--R;</div><div class="line">		<span class="keyword">if</span>(R&gt;L) ans+=cnt[maxx[i]-i+n];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(L&gt;=l) ++cnt[minn[L]-L+n],--L;</div><div class="line">	<span class="keyword">while</span>(R&gt;=l) --cnt[minn[R]-R+n],--R;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read(); </div><div class="line">	solve(<span class="number">1</span>,n);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> 分治 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【清华集训2016】温暖会指引我们前行]]></title>
      <url>/2017/07/02/274/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://uoj.ac/problem/274" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>根据kruskal算法，我们发现一个性质：最大生成树上的边是尽量大的</p>
<p>所以我们的做法非常显然：</p>
<p>对于温度维护一个最大生成树</p>
<p>于是这道题就和魔法森林一模一样了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 400100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,cnt,value[MAXN],a[MAXN],pos[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">class</span> Link_Cut_Tree&#123;</div><div class="line">	<span class="keyword">int</span> f[MAXN],st[MAXN],rev[MAXN],mn[MAXN],sum[MAXN],son[MAXN][<span class="number">2</span>],Link[MAXN][<span class="number">2</span>];</div><div class="line">	<span class="keyword">private</span>:</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">1</span>]==x;&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">isroot</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">0</span>]!=x&amp;&amp;son[f[x]][<span class="number">1</span>]!=x;&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			mn[x]=x;</div><div class="line">			<span class="keyword">if</span>(value[mn[son[x][<span class="number">0</span>]]]&lt;value[mn[x]])  mn[x]=mn[son[x][<span class="number">0</span>]];</div><div class="line">			<span class="keyword">if</span>(value[mn[son[x][<span class="number">1</span>]]]&lt;value[mn[x]])  mn[x]=mn[son[x][<span class="number">1</span>]];</div><div class="line">			sum[x]=sum[son[x][<span class="number">0</span>]]+sum[son[x][<span class="number">1</span>]]+a[x];</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> y=f[x],z=f[y],which=get(x);</div><div class="line">			<span class="keyword">if</span>(!isroot(y))  son[z][son[z][<span class="number">1</span>]==y]=x;</div><div class="line">			son[y][which]=son[x][which^<span class="number">1</span>];  f[son[y][which]]=y;</div><div class="line">			son[x][which^<span class="number">1</span>]=y;  f[y]=x;  f[x]=z;</div><div class="line">			updata(y);  updata(x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">if</span>(rev[x])&#123;</div><div class="line">				swap(son[x][<span class="number">0</span>],son[x][<span class="number">1</span>]);</div><div class="line">				rev[son[x][<span class="number">0</span>]]^=<span class="number">1</span>; rev[son[x][<span class="number">1</span>]]^=<span class="number">1</span>;</div><div class="line">				rev[x]=<span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">(<span class="number">0</span>)</span></span>;  st[++top]=x;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=x;!isroot(i);i=f[i]) st[++top]=f[i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=top;i;--i) pushdown(st[i]);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> y=f[x];!isroot(x);rotate(x),y=f[x])</div><div class="line">				<span class="keyword">if</span>(!isroot(y)) rotate(get(x)==get(y)?y:x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> last=<span class="number">0</span>;</div><div class="line">			<span class="keyword">while</span>(x)&#123;</div><div class="line">				splay(x);</div><div class="line">				son[x][<span class="number">1</span>]=last;</div><div class="line">				updata(x);</div><div class="line">				last=x; x=f[x];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			access(x); splay(x); rev[x]^=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">linkk</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			reverse(x); reverse(y); f[y]=x; updata(x); </div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Cut</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			reverse(x); access(y); splay(y); </div><div class="line">			f[x]=son[y][<span class="number">0</span>]=<span class="number">0</span>; updata(y); updata(x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			reverse(x); access(y); splay(y);</div><div class="line">			<span class="keyword">return</span> mn[y];</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			access(x); splay(x); <span class="keyword">while</span>(son[x][<span class="number">0</span>]) x=son[x][<span class="number">0</span>];</div><div class="line">			<span class="keyword">return</span> x;</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">public</span>:</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> id=read(),x=read()+<span class="number">1</span>,y=read()+<span class="number">1</span>,v=read(),l=read();</div><div class="line">			<span class="keyword">if</span>(find(x)==find(y))&#123;</div><div class="line">				<span class="keyword">int</span> temp=query(x,y);</div><div class="line">				<span class="keyword">if</span>(value[temp]&gt;v) <span class="keyword">return</span>;</div><div class="line">				Cut(temp,Link[temp][<span class="number">0</span>]); </div><div class="line">				Cut(temp,Link[temp][<span class="number">1</span>]);</div><div class="line">			&#125;</div><div class="line">			pos[id]=++cnt; value[pos[id]]=v; a[pos[id]]=l;</div><div class="line">			linkk(pos[id],x);  linkk(pos[id],y);</div><div class="line">			Link[pos[id]][<span class="number">0</span>]=x;  Link[pos[id]][<span class="number">1</span>]=y;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">change</span><span class="params">()</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> id=read(),l=read();</div><div class="line">			<span class="keyword">if</span>(!pos[id]) <span class="keyword">return</span>;</div><div class="line">			access(pos[id]); splay(pos[id]);</div><div class="line">			a[pos[id]]=l; updata(pos[id]);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ask</span><span class="params">()</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> x=read()+<span class="number">1</span>,y=read()+<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(find(x)!=find(y)) &#123;<span class="built_in">puts</span>(<span class="string">"-1"</span>); <span class="keyword">return</span>;&#125;</div><div class="line">			reverse(x); access(y); splay(y);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum[y]);</div><div class="line">		&#125;</div><div class="line">&#125;Tree;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=cnt=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;++i) value[i]=INF;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">char</span> ch[<span class="number">10</span>];  <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch);</div><div class="line">		<span class="keyword">if</span>(ch[<span class="number">0</span>]==<span class="string">'f'</span>)  Tree.insert();</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(ch[<span class="number">0</span>]==<span class="string">'c'</span>)  Tree.change();</div><div class="line">		<span class="keyword">else</span> Tree.ask();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> uoj </tag>
            
            <tag> LCT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【uoj#207】共价大爷游长沙]]></title>
      <url>/2017/07/01/207/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://uoj.ac/problem/207" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>这题好神啊，谁能想到随机化的做法呢？</p>
<p>给每条路径随机一个权值，并给两个端点异或上这个权值</p>
<p>那么一条边在所有路径上的条件是边的两个端点的子树异或和都等于所有路径的异或和</p>
<p>用LCT维护子树异或和就行了</p>
<p>最后提醒一下：异或的优先级低于等于，博主因为这个被卡的好惨</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 300100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> Case,n,m,cnt,now,value[MAXN],sum[MAXN],Vsum[MAXN],S[MAXN][<span class="number">3</span>];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">class</span> Link_Cut_Tree&#123;</div><div class="line">	<span class="keyword">private</span>:</div><div class="line">		<span class="keyword">int</span> f[MAXN],rev[MAXN],st[MAXN],son[MAXN][<span class="number">2</span>];</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">1</span>]==x;&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">isroot</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">0</span>]!=x&amp;&amp;son[f[x]][<span class="number">1</span>]!=x;&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> y=f[x],z=f[y],which=get(x);</div><div class="line">			<span class="keyword">if</span>(!isroot(y)) son[z][son[z][<span class="number">1</span>]==y]=x;</div><div class="line">			son[y][which]=son[x][which^<span class="number">1</span>];  f[son[y][which]]=y;</div><div class="line">			son[x][which^<span class="number">1</span>]=y;  f[y]=x;  f[x]=z;</div><div class="line">			updata(y);  updata(x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">if</span>(rev[x])&#123;</div><div class="line">				swap(son[x][<span class="number">0</span>],son[x][<span class="number">1</span>]);</div><div class="line">				rev[son[x][<span class="number">0</span>]]^=<span class="number">1</span>;  rev[son[x][<span class="number">1</span>]]^=<span class="number">1</span>;</div><div class="line">				rev[x]=<span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">public</span>:</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			sum[x]=Vsum[x]^value[x];</div><div class="line">			<span class="keyword">if</span>(son[x][<span class="number">0</span>]) sum[x]^=sum[son[x][<span class="number">0</span>]];</div><div class="line">			<span class="keyword">if</span>(son[x][<span class="number">1</span>]) sum[x]^=sum[son[x][<span class="number">1</span>]];</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">(<span class="number">0</span>)</span></span>;  st[++top]=x;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=x;!isroot(i);i=f[i]) st[++top]=f[i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=top;i;--i) pushdown(st[i]);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> y=f[x];!isroot(x);rotate(x),y=f[x])</div><div class="line">				<span class="keyword">if</span>(!isroot(y)) rotate(get(x)==get(y)?y:x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> last=<span class="number">0</span>;</div><div class="line">			<span class="keyword">while</span>(x)&#123;</div><div class="line">				splay(x);</div><div class="line">				<span class="keyword">if</span>(son[x][<span class="number">1</span>]) Vsum[x]^=sum[son[x][<span class="number">1</span>]];</div><div class="line">				<span class="keyword">if</span>(last) Vsum[x]^=sum[last];</div><div class="line">				son[x][<span class="number">1</span>]=last; updata(x);</div><div class="line">				last=x; x=f[x];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			access(x); splay(x); rev[x]^=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">linkk</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			<span class="comment">//access(x); splay(x);</span></div><div class="line">			reverse(x);  reverse(y);</div><div class="line">			f[y]=x; Vsum[x]^=sum[y];</div><div class="line">			updata(x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Cut</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			reverse(x); access(y); splay(y);</div><div class="line">			f[x]=son[y][<span class="number">0</span>]=<span class="number">0</span>; updata(y); updata(x);</div><div class="line">		&#125;</div><div class="line">&#125;T;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	srand(time(<span class="number">0</span>));</div><div class="line">	Case=read();  n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		T.linkk(x,y);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> opt=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=read(),y=read();  T.Cut(x,y);</div><div class="line">			x=read(),y=read();  T.linkk(x,y);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>)&#123;</div><div class="line">			S[++cnt][<span class="number">0</span>]=read(); S[cnt][<span class="number">1</span>]=read(); S[cnt][<span class="number">2</span>]=rand()*rand();</div><div class="line">			T.reverse(S[cnt][<span class="number">0</span>]); value[S[cnt][<span class="number">0</span>]]^=S[cnt][<span class="number">2</span>]; T.updata(S[cnt][<span class="number">0</span>]); </div><div class="line">			T.reverse(S[cnt][<span class="number">1</span>]); value[S[cnt][<span class="number">1</span>]]^=S[cnt][<span class="number">2</span>]; T.updata(S[cnt][<span class="number">1</span>]); </div><div class="line">			now^=S[cnt][<span class="number">2</span>];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">3</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=read();  now^=S[x][<span class="number">2</span>];</div><div class="line">			T.reverse(S[x][<span class="number">0</span>]); value[S[x][<span class="number">0</span>]]^=S[x][<span class="number">2</span>]; T.updata(S[x][<span class="number">0</span>]);</div><div class="line">			T.reverse(S[x][<span class="number">1</span>]); value[S[x][<span class="number">1</span>]]^=S[x][<span class="number">2</span>]; T.updata(S[x][<span class="number">1</span>]);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">4</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=read(),y=read();</div><div class="line">			T.reverse(x); T.access(y); T.splay(x); </div><div class="line">			<span class="keyword">if</span>((sum[x]^Vsum[y]^value[y])==now&amp;&amp;(Vsum[y]^value[y])==now) <span class="built_in">puts</span>(<span class="string">"YES"</span>);</div><div class="line">			<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> uoj </tag>
            
            <tag> LCT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3510】首都]]></title>
      <url>/2017/07/01/3510/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3510" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>要求动态维护树的重心</p>
<p>考虑启发式合并做法：</p>
<p>每次将size较小的子树接到大的子树中，每加入一个叶节点，就判断一下重心是否往叶节点所在子树移动</p>
<p>至于子树大小的维护，见<a href="https://chty.coding.me/2017/06/30/4530/" target="_blank" rel="external">bzoj4530</a></p>
<p>这道题启示我们在写lct时要注重考虑细节，时刻考虑当前的根的位置情况</p>
<p>鸣谢chad_lzx大神帮忙查错</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,now;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">class</span> Link_Cut_Tree&#123;</div><div class="line">	<span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line">	<span class="keyword">int</span> len,Link[MAXN],f[MAXN],rev[MAXN],st[MAXN],size[MAXN],Vsize[MAXN],son[MAXN][<span class="number">2</span>];</div><div class="line">	<span class="keyword">private</span>:</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">1</span>]==x;&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">isroot</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">0</span>]!=x&amp;&amp;son[f[x]][<span class="number">1</span>]!=x;&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			e[++len].next=Link[x];Link[x]=len;e[len].y=y;</div><div class="line">			e[++len].next=Link[y];Link[y]=len;e[len].y=x;	</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			size[x]=Vsize[x]+<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(son[x][<span class="number">0</span>]) size[x]+=size[son[x][<span class="number">0</span>]];</div><div class="line">			<span class="keyword">if</span>(son[x][<span class="number">1</span>]) size[x]+=size[son[x][<span class="number">1</span>]];	</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> y=f[x],z=f[y],which=get(x);</div><div class="line">			<span class="keyword">if</span>(!isroot(y)) son[z][son[z][<span class="number">1</span>]==y]=x;</div><div class="line">			son[y][which]=son[x][which^<span class="number">1</span>];  f[son[y][which]]=y;</div><div class="line">			son[x][which^<span class="number">1</span>]=y;  f[y]=x;  f[x]=z;</div><div class="line">			updata(y);  updata(x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">if</span>(rev[x])&#123;</div><div class="line">				swap(son[x][<span class="number">0</span>],son[x][<span class="number">1</span>]);</div><div class="line">				rev[son[x][<span class="number">0</span>]]^=<span class="number">1</span>;  rev[son[x][<span class="number">1</span>]]^=<span class="number">1</span>;</div><div class="line">				rev[x]=<span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">(<span class="number">0</span>)</span></span>;  st[++top]=x;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=x;!isroot(i);i=f[i]) st[++top]=f[i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=top;i;--i) pushdown(st[i]);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> y=f[x];!isroot(x);rotate(x),y=f[x])</div><div class="line">				<span class="keyword">if</span>(!isroot(y)) rotate(get(x)==get(y)?y:x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> last=<span class="number">0</span>;</div><div class="line">			<span class="keyword">while</span>(x)&#123;</div><div class="line">				splay(x);</div><div class="line">				<span class="keyword">if</span>(son[x][<span class="number">1</span>]) Vsize[x]+=size[son[x][<span class="number">1</span>]];</div><div class="line">				<span class="keyword">if</span>(last) Vsize[x]-=size[last];</div><div class="line">				son[x][<span class="number">1</span>]=last;  updata(x);</div><div class="line">				last=x;  x=f[x];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			access(x); splay(x); rev[x]^=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">linkk</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> root=find(x);</div><div class="line">			access(x); splay(x);  f[y]=x;</div><div class="line">			Vsize[x]+=size[y];  updata(x);</div><div class="line">			access(y); splay(root);  <span class="keyword">int</span> root_size=size[root];</div><div class="line">			<span class="keyword">int</span> temp=son[root][<span class="number">1</span>];</div><div class="line">			<span class="keyword">while</span>(son[temp][<span class="number">0</span>]) temp=son[temp][<span class="number">0</span>];</div><div class="line">			access(temp);  splay(temp);</div><div class="line">			<span class="keyword">if</span>((Vsize[temp]+<span class="number">1</span>)*<span class="number">2</span>&gt;root_size||((Vsize[temp]+<span class="number">1</span>)*<span class="number">2</span>==root_size&amp;&amp;temp&lt;root))</div><div class="line">				now^=root,now^=temp,reverse(temp);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">			son[x][<span class="number">0</span>]=son[x][<span class="number">1</span>]=f[x]=rev[x]=Vsize[x]=<span class="number">0</span>; size[x]=<span class="number">1</span>;</div><div class="line">			linkk(fa,x);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">				<span class="keyword">if</span>(e[i].y!=fa) dfs(e[i].y,x);</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">public</span>:</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) size[i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) now^=i;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			access(x); splay(x);</div><div class="line">			<span class="keyword">while</span>(son[x][<span class="number">0</span>]) x=son[x][<span class="number">0</span>];</div><div class="line">			splay(x);</div><div class="line">			<span class="keyword">return</span> x;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			<span class="keyword">if</span>(size[find(x)]&lt;size[find(y)])  swap(x,y);</div><div class="line">			now^=find(y);</div><div class="line">			dfs(y,x);</div><div class="line">			insert(x,y);</div><div class="line">		&#125;</div><div class="line">&#125;Tree;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  Tree.pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">char</span> opt[<span class="number">5</span>]; <span class="built_in">scanf</span>(<span class="string">"%s"</span>,opt); </div><div class="line">		<span class="keyword">if</span>(opt[<span class="number">0</span>]==<span class="string">'A'</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=read(),y=read();</div><div class="line">			Tree.merge(x,y);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt[<span class="number">0</span>]==<span class="string">'Q'</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Tree.find(read()));</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,now);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> LCT </tag>
            
            <tag> 启发式合并 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4530】大融合]]></title>
      <url>/2017/06/30/4530/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4530" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>用link_cut_tree维护子树信息的经典例题</p>
<p>这是一种套路：将子树信息分为实子树和虚子树，分别维护</p>
<p>在access和linkk时维护虚边和实边的贡献</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,m,size[MAXN],Vsize[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">class</span> Link_Cut_Tree&#123;</div><div class="line">	<span class="keyword">int</span> st[MAXN],f[MAXN],rev[MAXN],son[MAXN][<span class="number">2</span>];</div><div class="line">	<span class="keyword">private</span>:</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">1</span>]==x;&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">isroot</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">0</span>]!=x&amp;&amp;son[f[x]][<span class="number">1</span>]!=x;&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			size[x]=Vsize[x]+<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(son[x][<span class="number">0</span>]) size[x]+=size[son[x][<span class="number">0</span>]];</div><div class="line">			<span class="keyword">if</span>(son[x][<span class="number">1</span>]) size[x]+=size[son[x][<span class="number">1</span>]];</div><div class="line">			<span class="comment">//size[x]=size[son[x][0]]+size[son[x][1]]+1+Vsize[x];</span></div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> y=f[x],z=f[y],which=get(x);</div><div class="line">			<span class="keyword">if</span>(!isroot(y))  son[z][son[z][<span class="number">1</span>]==y]=x;</div><div class="line">			son[y][which]=son[x][which^<span class="number">1</span>];  f[son[y][which]]=y;</div><div class="line">			son[x][which^<span class="number">1</span>]=y;  f[y]=x;  f[x]=z;</div><div class="line">			updata(y);  updata(x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">if</span>(rev[x])&#123;</div><div class="line">				swap(son[x][<span class="number">0</span>],son[x][<span class="number">1</span>]);</div><div class="line">				rev[son[x][<span class="number">0</span>]]^=<span class="number">1</span>;  rev[son[x][<span class="number">1</span>]]^=<span class="number">1</span>;</div><div class="line">				rev[x]=<span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">public</span>:</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">(<span class="number">0</span>)</span></span>;  st[++top]=x;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=x;!isroot(i);i=f[i]) st[++top]=f[i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=top;i;--i) pushdown(st[i]);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> y=f[x];!isroot(x);rotate(x),y=f[x])</div><div class="line">				<span class="keyword">if</span>(!isroot(y)) rotate(get(x)==get(y)?y:x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> last=<span class="number">0</span>;</div><div class="line">			<span class="keyword">while</span>(x)&#123;</div><div class="line">				splay(x);</div><div class="line">				<span class="keyword">if</span>(son[x][<span class="number">1</span>]) Vsize[x]+=size[son[x][<span class="number">1</span>]];</div><div class="line">				<span class="keyword">if</span>(last)  Vsize[x]-=size[last];</div><div class="line">				son[x][<span class="number">1</span>]=last; updata(x);</div><div class="line">				last=x; x=f[x];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			access(x);splay(x);rev[x]^=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">linkk</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			reverse(x);reverse(y);f[x]=y;</div><div class="line">			Vsize[y]+=size[x];updata(y);</div><div class="line">		&#125;</div><div class="line">&#125;Tree;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) size[i]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">char</span> opt[<span class="number">3</span>];  <span class="built_in">scanf</span>(<span class="string">"%s"</span>,opt);  <span class="keyword">int</span> x=read(),y=read();</div><div class="line">		<span class="keyword">if</span>(opt[<span class="number">0</span>]==<span class="string">'A'</span>)  Tree.linkk(x,y);</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			Tree.reverse(x);</div><div class="line">			Tree.access(y);</div><div class="line">			Tree.splay(x);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ll)(Vsize[y]+<span class="number">1</span>)*(size[x]-Vsize[y]<span class="number">-1</span>));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> LCT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4916】神犇和蒟蒻]]></title>
      <url>/2017/06/28/4916/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4916" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>第一问答案是1…….</p>
<p>第二问题中$\phi(i^2)=i\phi(i)$(根据欧拉函数定义可以得到)</p>
<p>构造$g(n)=n$使得$f*g(n)=n\sum_{d|n}\phi(d)=n^2$</p>
<p>所以$S(n)=n^2-\sum_{i=2}^{n} iS(\frac{n}{i})$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2000100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</div><div class="line"><span class="keyword">int</span> n,N,cnt,inv[<span class="number">10</span>],value[<span class="number">1010</span>],vis[<span class="number">1010</span>],check[MAXN],phi[MAXN],prime[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">fast</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">ret</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=mul(a,a))<span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=mul(ret,a);<span class="keyword">return</span> ret;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;<span class="keyword">return</span> mul(mul(add(l,r),add(sub(r,l),<span class="number">1</span>)),inv[<span class="number">2</span>]);&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	N=<span class="number">2000000</span>;  phi[<span class="number">1</span>]=<span class="number">1</span>;  inv[<span class="number">2</span>]=fast(<span class="number">2</span>,mod<span class="number">-2</span>);  inv[<span class="number">6</span>]=fast(<span class="number">6</span>,mod<span class="number">-2</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i]) prime[++cnt]=i,phi[i]=i<span class="number">-1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=N;++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) &#123;phi[prime[j]*i]=phi[i]*prime[j]; <span class="keyword">break</span>;&#125;</div><div class="line">			phi[prime[j]*i]=phi[i]*phi[prime[j]];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i) phi[i]=add(phi[i<span class="number">-1</span>],mul(i,phi[i]));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> pos=n/x;</div><div class="line">	<span class="keyword">if</span>(x&lt;=N) <span class="keyword">return</span> phi[x];</div><div class="line">	<span class="keyword">if</span>(vis[pos])  <span class="keyword">return</span> value[pos];</div><div class="line">	vis[pos]=<span class="number">1</span>;  value[pos]=mul(mul(x,mul(add(x,<span class="number">1</span>),add(mul(x,<span class="number">2</span>),<span class="number">1</span>))),inv[<span class="number">6</span>]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>,last=<span class="number">0</span>;i&lt;=x;i=last+<span class="number">1</span>)&#123;</div><div class="line">		last=x/(x/i);</div><div class="line">		value[pos]=sub(value[pos],mul(solve(x/i),getsum(i,last)));</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> value[pos];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  pre();</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>,<span class="number">1</span>,solve(n));</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 杜教筛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3944】Sum]]></title>
      <url>/2017/06/28/3944/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3944" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>两个板子合在一起就行了</p>
<p>时限非常的卡</p>
<p>放板子</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXM 100100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 4000100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> N,cnt,check[MAXN],prime[MAXN],vis_phi[MAXM],vis_mu[MAXM];</div><div class="line">ll n,mu[MAXN],phi[MAXN],value_phi[MAXM],value_mu[MAXM];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	N=<span class="number">4000000</span>; mu[<span class="number">1</span>]=<span class="number">1</span>; phi[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i]) prime[++cnt]=i,phi[i]=i<span class="number">-1</span>,mu[i]=<span class="number">-1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;i*prime[j]&lt;=N;++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) &#123;phi[prime[j]*i]=phi[i]*prime[j]; mu[prime[j]*i]=<span class="number">0</span>; <span class="keyword">break</span>;&#125;</div><div class="line">			phi[prime[j]*i]=phi[i]*phi[prime[j]]; mu[prime[j]*i]=-mu[i];  </div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i) phi[i]+=phi[i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i) mu[i]+=mu[i<span class="number">-1</span>];</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">solve1</span><span class="params">(ll x)</span></span>&#123;</div><div class="line">	ll pos=n/x;</div><div class="line">	<span class="keyword">if</span>(x&lt;=N) <span class="keyword">return</span> phi[x];</div><div class="line">	<span class="keyword">if</span>(vis_phi[pos])  <span class="keyword">return</span> value_phi[pos];</div><div class="line">	value_phi[pos]=(ll)x*(x+<span class="number">1</span>)/<span class="number">2</span>;  vis_phi[pos]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">2</span>,last=<span class="number">0</span>;i&lt;=x;i=last+<span class="number">1</span>)&#123;</div><div class="line">		last=x/(x/i);</div><div class="line">		value_phi[pos]-=solve1(x/i)*(last-i+<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> value_phi[pos];</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">solve2</span><span class="params">(ll x)</span></span>&#123;</div><div class="line">	ll pos=n/x;</div><div class="line">	<span class="keyword">if</span>(x&lt;=N) <span class="keyword">return</span> mu[x];</div><div class="line">	<span class="keyword">if</span>(vis_mu[pos]) <span class="keyword">return</span> value_mu[pos];</div><div class="line">	value_mu[pos]=<span class="number">1</span>;  vis_mu[pos]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">2</span>,last=<span class="number">0</span>;i&lt;=x;i=last+<span class="number">1</span>)&#123;</div><div class="line">		last=x/(x/i);  </div><div class="line">		value_mu[pos]-=solve2(x/i)*(last-i+<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> value_mu[pos];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read(); </div><div class="line">	<span class="built_in">memset</span>(vis_mu,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis_mu));</div><div class="line">	<span class="built_in">memset</span>(vis_phi,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis_phi));</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,solve1(n),solve2(n));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre(); <span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="comment">//printf("%d\n",clock());</span></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 杜教筛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】count]]></title>
      <url>/2017/06/27/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91count/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p><img src="http://i1.buimg.com/591838/f4a16a252d77a032.png"></p>
<hr>
<p>首先朴素的dp式非常简单：$f[i]=\sum f[j]\times (i-j)^2$</p>
<p>然后考虑优化</p>
<p>首先看一下转移一步的情况：</p>
<p>$f[i+1]=\sum f[j]\times (i+1-j)^2$</p>
<p>$f[i+1]\sum f[j]\times (i-j)^2+2\sum f[j]\times (i-j)+\sum f[j]+f[i]$</p>
<p>所以我们维护向量$[\sum f[j],\sum f[j]\times (i-j),\sum f[j]\times (i-j)^2]$</p>
<p>然后分步转移即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</div><div class="line"><span class="keyword">int</span> n,m,a[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">	<span class="keyword">int</span> a[<span class="number">4</span>][<span class="number">4</span>];</div><div class="line">	node()&#123;<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));&#125;</div><div class="line">	<span class="keyword">inline</span> node <span class="keyword">operator</span>* (<span class="keyword">const</span> node &amp;b)&#123;</div><div class="line">		node c;  <span class="built_in">memset</span>(c.a,<span class="number">0</span>,<span class="keyword">sizeof</span>(c.a));</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;++i)</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">3</span>;++j)</div><div class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=<span class="number">3</span>;++k)</div><div class="line">					c.a[i][j]=add(c.a[i][j],mul(a[i][k],b.a[k][j]));</div><div class="line">		<span class="keyword">return</span> c;</div><div class="line">	&#125;</div><div class="line">&#125;zhuan[<span class="number">2</span>],ans;</div><div class="line"><span class="function"><span class="keyword">inline</span> node <span class="title">fast</span><span class="params">(node a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">	node ret; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;++i) ret.a[i][i]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=a*a)<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ret=ret*a;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) a[i]=read();  a[++m]=n;</div><div class="line">	zhuan[<span class="number">0</span>].a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;  zhuan[<span class="number">0</span>].a[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">0</span>;  zhuan[<span class="number">0</span>].a[<span class="number">1</span>][<span class="number">3</span>]=<span class="number">1</span>;</div><div class="line">	zhuan[<span class="number">0</span>].a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;  zhuan[<span class="number">0</span>].a[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">1</span>;  zhuan[<span class="number">0</span>].a[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">1</span>;</div><div class="line">	zhuan[<span class="number">0</span>].a[<span class="number">3</span>][<span class="number">1</span>]=<span class="number">1</span>;  zhuan[<span class="number">0</span>].a[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">2</span>;  zhuan[<span class="number">0</span>].a[<span class="number">3</span>][<span class="number">3</span>]=<span class="number">2</span>;</div><div class="line">	zhuan[<span class="number">1</span>].a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;  zhuan[<span class="number">1</span>].a[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">0</span>;  zhuan[<span class="number">1</span>].a[<span class="number">1</span>][<span class="number">3</span>]=<span class="number">0</span>;</div><div class="line">	zhuan[<span class="number">1</span>].a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;  zhuan[<span class="number">1</span>].a[<span class="number">2</span>][<span class="number">2</span>]=<span class="number">1</span>;  zhuan[<span class="number">1</span>].a[<span class="number">2</span>][<span class="number">3</span>]=<span class="number">0</span>;</div><div class="line">	zhuan[<span class="number">1</span>].a[<span class="number">3</span>][<span class="number">1</span>]=<span class="number">1</span>;  zhuan[<span class="number">1</span>].a[<span class="number">3</span>][<span class="number">2</span>]=<span class="number">2</span>;  zhuan[<span class="number">1</span>].a[<span class="number">3</span>][<span class="number">3</span>]=<span class="number">1</span>;</div><div class="line">	ans.a[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;  ans.a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;  ans.a[<span class="number">3</span>][<span class="number">1</span>]=<span class="number">1</span>;  <span class="keyword">int</span> now=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		ans=fast(zhuan[<span class="number">0</span>],a[i]-now<span class="number">-1</span>)*ans;</div><div class="line">		<span class="keyword">if</span>(i!=m) ans=zhuan[<span class="number">1</span>]*ans;</div><div class="line">		now=a[i];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans.a[<span class="number">3</span>][<span class="number">1</span>]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> dp </tag>
            
            <tag> 矩阵乘法 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】spread]]></title>
      <url>/2017/06/27/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91spread/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p><img src="http://i1.buimg.com/591838/a4d6f1067e5c2410.png"></p>
<hr>
<p>分析：设f[x]表示x为根子树的答案，考虑每个儿子可以选也可以不选</p>
<p>那么儿子y的贡献就是f[y]+1</p>
<p>这样dp一遍可以求出根节点的答案</p>
<p>然后再dp一遍乘上父亲的贡献，就能求出所有点为根的答案</p>
<p>考试时脑残了，没有去掉clock()，好惨啊</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,len,Link[MAXN],f[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">fast</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">ret</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=mul(a,a))<span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=mul(ret,a);<span class="keyword">return</span> ret;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Ni</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;<span class="keyword">return</span> fast(a,mod<span class="number">-2</span>);&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	f[x]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		dfs1(e[i].y,x);</div><div class="line">		f[x]=mul(f[x],add(f[e[i].y],<span class="number">1</span>));</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		f[e[i].y]=mul(f[e[i].y],add(mul(f[x],Ni(add(f[e[i].y],<span class="number">1</span>))),<span class="number">1</span>));</div><div class="line">		dfs2(e[i].y,x);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y);  insert(y,x);</div><div class="line">	&#125;</div><div class="line">	dfs1(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	dfs2(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">printf</span>(<span class="string">"%d "</span>,f[i]); <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 树形dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4260】REBXOR]]></title>
      <url>/2017/06/27/4260/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4260" target="_blank" rel="external">传送门</a></li>
</ul>
<hr>
<p>从右往左枚举r1，在左边找最优的l1（可持久化字典树实现）</p>
<p>同时维护右边l2和r2的最优值，这样就能包含所有情况</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 400100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,Rmax,ans,cnt,a[MAXN],root[MAXN],sum[MAXN*<span class="number">35</span>],son[MAXN*<span class="number">35</span>][<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> &amp;root,<span class="keyword">int</span> last,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	root=++cnt;  <span class="keyword">int</span> now=root;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		son[now][<span class="number">0</span>]=son[last][<span class="number">0</span>];</div><div class="line">		son[now][<span class="number">1</span>]=son[last][<span class="number">1</span>];</div><div class="line">		<span class="keyword">int</span> x=(v&amp;(<span class="number">1</span>&lt;&lt;i))&gt;&gt;i;</div><div class="line">		son[now][x]=++cnt;</div><div class="line">		now=son[now][x];</div><div class="line">		last=son[last][x];</div><div class="line">		sum[now]=sum[last]+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> ret=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		<span class="keyword">int</span> x=(v&amp;(<span class="number">1</span>&lt;&lt;i))&gt;&gt;i;</div><div class="line">		<span class="keyword">if</span>(sum[son[r][x^<span class="number">1</span>]]-sum[son[l][x^<span class="number">1</span>]])&#123;</div><div class="line">			ret+=(<span class="number">1</span>&lt;&lt;i);</div><div class="line">			l=son[l][x^<span class="number">1</span>],r=son[r][x^<span class="number">1</span>];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> l=son[l][x],r=son[r][x];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read()+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i) a[i]=a[i<span class="number">-1</span>]^read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) insert(root[i],root[i<span class="number">-1</span>],a[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		cmax(Rmax,query(root[i],root[n],a[i]));</div><div class="line">		cmax(ans,Rmax+query(root[<span class="number">0</span>],root[i],a[i]));</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 可持久化字典树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3166】Alo]]></title>
      <url>/2017/06/26/3166/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>这道题的做法值得借鉴</p>
<p>是这样的一个套路：遇到次大值的时候，从大到小枚举数，然后确定能选的区间，计算答案</p>
<p>这个用set维护就行了</p>
<p>然后就是用可持久化字典树处理区间最大异或和问题了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> v,id;&#125;a[MAXN];</div><div class="line"><span class="keyword">int</span> n,cnt,ans,root[MAXN],sum[MAXN*<span class="number">30</span>],son[MAXN*<span class="number">30</span>][<span class="number">2</span>];</div><div class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;pos;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.v&gt;b.v;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> &amp;root,<span class="keyword">int</span> last,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	root=++cnt; <span class="keyword">int</span> now=root;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		son[now][<span class="number">0</span>]=son[last][<span class="number">0</span>];</div><div class="line">		son[now][<span class="number">1</span>]=son[last][<span class="number">1</span>];</div><div class="line">		<span class="keyword">int</span> x=(v&amp;(<span class="number">1</span>&lt;&lt;i))&gt;&gt;i;</div><div class="line">		son[now][x]=++cnt;</div><div class="line">		now=son[now][x];</div><div class="line">		last=son[last][x];</div><div class="line">		sum[now]=sum[last]+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		<span class="keyword">int</span> x=(v&amp;(<span class="number">1</span>&lt;&lt;i))&gt;&gt;i;</div><div class="line">		<span class="keyword">if</span>(sum[son[r][x^<span class="number">1</span>]]-sum[son[l][x^<span class="number">1</span>]])&#123;</div><div class="line">			ans+=(<span class="number">1</span>&lt;&lt;i);</div><div class="line">			l=son[l][x^<span class="number">1</span>];</div><div class="line">			r=son[r][x^<span class="number">1</span>];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> l=son[l][x],r=son[r][x];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=(node)&#123;read(),i&#125;;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) insert(root[i],root[i<span class="number">-1</span>],a[i].v);</div><div class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp);</div><div class="line">	pos.insert(<span class="number">-1</span>); pos.insert(<span class="number">-2</span>); pos.insert(INF); pos.insert(INF+<span class="number">1</span>); pos.insert(a[<span class="number">1</span>].id);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=pos.lower_bound(a[i].id); --it;</div><div class="line">		<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator is=pos.lower_bound(a[i].id);</div><div class="line">		<span class="keyword">int</span> l=*(--it)+<span class="number">1</span>,r=*(++is)<span class="number">-1</span>;</div><div class="line">		cmax(l,<span class="number">1</span>);  cmin(r,n);</div><div class="line">		cmax(ans,query(root[l<span class="number">-1</span>],root[r],a[i].v));</div><div class="line">		pos.insert(a[i].id);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 可持久化字典树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3261】最大异或和]]></title>
      <url>/2017/06/26/3261/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>放板子</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 600100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,Q,cnt,a[MAXN],pre[MAXN],root[MAXN],sum[MAXN*<span class="number">25</span>],son[MAXN*<span class="number">25</span>][<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> &amp;root,<span class="keyword">int</span> last,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	root=++cnt;  <span class="keyword">int</span> now=root;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">25</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		son[now][<span class="number">0</span>]=son[last][<span class="number">0</span>]; </div><div class="line">		son[now][<span class="number">1</span>]=son[last][<span class="number">1</span>];</div><div class="line">		<span class="keyword">int</span> x=(v&amp;(<span class="number">1</span>&lt;&lt;i))&gt;&gt;i;</div><div class="line">		son[now][x]=++cnt;</div><div class="line">		now=son[now][x]; </div><div class="line">		last=son[last][x];</div><div class="line">		sum[now]=sum[last]+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">25</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		<span class="keyword">int</span> x=(v&amp;(<span class="number">1</span>&lt;&lt;i))&gt;&gt;i;</div><div class="line">		<span class="keyword">if</span>(sum[son[r][x^<span class="number">1</span>]]-sum[son[l][x^<span class="number">1</span>]])&#123;</div><div class="line">			ans+=(<span class="number">1</span>&lt;&lt;i);  </div><div class="line">			l=son[l][x^<span class="number">1</span>];</div><div class="line">			r=son[r][x^<span class="number">1</span>];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> l=son[l][x],r=son[r][x];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read()+<span class="number">1</span>;  Q=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i) a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) pre[i]=pre[i<span class="number">-1</span>]^a[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) insert(root[i],root[i<span class="number">-1</span>],pre[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Q;++i)&#123;</div><div class="line">		<span class="keyword">char</span> opt[<span class="number">3</span>]; <span class="built_in">scanf</span>(<span class="string">"%s"</span>,opt);</div><div class="line">		<span class="keyword">if</span>(opt[<span class="number">0</span>]==<span class="string">'A'</span>)&#123;</div><div class="line">			a[++n]=read(); pre[n]=pre[n<span class="number">-1</span>]^a[n];</div><div class="line">			insert(root[n],root[n<span class="number">-1</span>],pre[n]);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> l=read(),r=read(),x=read();</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(root[l<span class="number">-1</span>],root[r],x^pre[n]));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 可持久化字典树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】青青草原播种计划]]></title>
      <url>/2017/06/26/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91%E9%9D%92%E9%9D%92%E8%8D%89%E5%8E%9F%E6%92%AD%E7%A7%8D%E8%AE%A1%E5%88%92/</url>
      <content type="html"><![CDATA[<ul>
<li>题目来源：湖师大附中集训Day10T3</li>
</ul>
<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p><img src="http://i4.piimg.com/591838/8d16669c654bb73d.png"></p>
<hr>
<p>分析：</p>
<p>首先考虑神秘数的求法：</p>
<p>初始时神秘数为1，然后往里面添加元素</p>
<p>加入一个新数后，如果这个数不超过原神秘数，那么新神秘数就等于当前所有数之和+1</p>
<p>否则，神秘数就不再改变了</p>
<p>所以我们使用权值线段树来维护每一个集合，我们知道权值线段树维护mex很容易实现</p>
<p>考虑线段树如何求神秘数呢</p>
<p>我们发现，如果对于一个子集，这个子集的神秘数等于这个子集的所有元素的和+1，那么我们添加任意的不超过这个神秘数的数，都能保证这个性质仍然被满足</p>
<p>于是我们动态维护神秘数，每次在线段树上查询值小于等于神秘数的元素的和，于是这个和+1就是新的神秘数</p>
<p>由于每2次更新神秘数都至少会使其翻倍，所以最多更新O(logn)次</p>
<p>每次询问神秘数的复杂度是O(log^2n)的</p>
<p>至于操作三就是线段树合并</p>
<p>由于操作5的存在，需要将线段树可持久化</p>
<p>因为所有版本的线段树的根有NQ个，所以不能直接保存根的位置</p>
<p>我们的做法是只保存有修改的根，回答操作5时二分查找</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 500000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,Q,cnt,ans,root[MAXN],mex[MAXN*<span class="number">40</span>],son[MAXN*<span class="number">40</span>][<span class="number">2</span>];</div><div class="line">ll sum[MAXN*<span class="number">40</span>];</div><div class="line"><span class="built_in">vector</span>&lt;pii&gt;data[MAXN];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (read()+ans<span class="number">-1</span>)%n+<span class="number">1</span>;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">save_root</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> T)</span></span>&#123;data[x].push_back(make_pair(T,root[x]));&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">relord</span><span class="params">(<span class="keyword">int</span> root,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">int</span> lmex=son[root][<span class="number">0</span>]?mex[son[root][<span class="number">0</span>]]:l;</div><div class="line">	<span class="keyword">int</span> rmex=son[root][<span class="number">1</span>]?mex[son[root][<span class="number">1</span>]]:mid+<span class="number">1</span>;</div><div class="line">	mex[root]=min(lmex,rmex);</div><div class="line">	sum[root]=sum[son[root][<span class="number">0</span>]]+sum[son[root][<span class="number">1</span>]];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">newnode</span><span class="params">(<span class="keyword">int</span> &amp;root)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> p=++cnt;</div><div class="line">	son[p][<span class="number">0</span>]=son[root][<span class="number">0</span>];</div><div class="line">	son[p][<span class="number">1</span>]=son[root][<span class="number">1</span>];</div><div class="line">	sum[p]=sum[root];</div><div class="line">	mex[p]=mex[root];</div><div class="line">	root=p;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;root,<span class="keyword">int</span> pos)</span></span>&#123;</div><div class="line">	newnode(root);</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		sum[root]+=l;</div><div class="line">		<span class="keyword">if</span>(sum[root]) mex[root]=INF;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(pos&lt;=mid) insert(l,mid,son[root][<span class="number">0</span>],pos);</div><div class="line">	<span class="keyword">else</span> insert(mid+<span class="number">1</span>,r,son[root][<span class="number">1</span>],pos);</div><div class="line">	relord(root,l,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;root,<span class="keyword">int</span> pos)</span></span>&#123;</div><div class="line">	newnode(root);</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		sum[root]-=l;</div><div class="line">		<span class="keyword">if</span>(sum[root]&lt;<span class="number">0</span>) sum[root]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(sum[root]==<span class="number">0</span>) mex[root]=l;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(pos&lt;=mid) del(l,mid,son[root][<span class="number">0</span>],pos);</div><div class="line">	<span class="keyword">else</span> del(mid+<span class="number">1</span>,r,son[root][<span class="number">1</span>],pos);</div><div class="line">	relord(root,l,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==<span class="number">0</span>||y==<span class="number">0</span>) &#123;x=x+y;<span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		sum[++cnt]=sum[x]+sum[y];</div><div class="line">		mex[cnt]=sum[cnt]?INF:l;</div><div class="line">		x=cnt; <span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; newnode(x);</div><div class="line">	merge(l,mid,son[x][<span class="number">0</span>],son[y][<span class="number">0</span>]);</div><div class="line">	merge(mid+<span class="number">1</span>,r,son[x][<span class="number">1</span>],son[y][<span class="number">1</span>]);</div><div class="line">	relord(x,l,r);</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> root,<span class="keyword">int</span> pos)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(!root||l&gt;r) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(r&lt;=pos) <span class="keyword">return</span> sum[root];</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; <span class="function">ll <span class="title">ret</span><span class="params">(<span class="number">0</span>)</span></span>;</div><div class="line">	ret+=getsum(l,mid,son[root][<span class="number">0</span>],pos);</div><div class="line">	ret+=getsum(mid+<span class="number">1</span>,r,son[root][<span class="number">1</span>],pos);</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> root)</span></span>&#123;</div><div class="line">	ll now=getsum(<span class="number">1</span>,N,root,<span class="number">1</span>),last=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(now&gt;=last)&#123;</div><div class="line">		last=now+<span class="number">1</span>;</div><div class="line">		now=getsum(<span class="number">1</span>,N,root,last);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d %lld\n"</span>,mex[root],last);</div><div class="line">	<span class="keyword">return</span> mex[root];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> root)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(!root) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=sum[root]/l;++i) <span class="built_in">printf</span>(<span class="string">"%d "</span>,l);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	dfs(l,mid,son[root][<span class="number">0</span>]); </div><div class="line">	dfs(mid+<span class="number">1</span>,r,son[root][<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  Q=read();  mex[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Q;++i)&#123;</div><div class="line">		<span class="keyword">int</span> opt=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=get(),v=read(); save_root(x,i);</div><div class="line">			insert(<span class="number">1</span>,N,root[x],v);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=get(),v=read(); save_root(x,i);</div><div class="line">			del(<span class="number">1</span>,N,root[x],v);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">3</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=get(),y=get(); <span class="keyword">if</span>(x==y) <span class="keyword">continue</span>;</div><div class="line">			save_root(x,i);  save_root(y,i);</div><div class="line">			merge(<span class="number">1</span>,N,root[x],root[y]);  root[y]=<span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">4</span>)&#123;<span class="keyword">int</span> x=get();ans=query(root[x]);&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> x=get(),T=read();</div><div class="line">			<span class="built_in">vector</span>&lt;pii&gt;::iterator it=lower_bound(data[x].begin(),data[x].end(),make_pair(T,<span class="number">0</span>));</div><div class="line">			<span class="keyword">int</span> temp=(it==data[x].end()?root[x]:it-&gt;second);</div><div class="line">			ans=query(temp);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)dfs(<span class="number">1</span>,N,root[i]),<span class="built_in">puts</span>(<span class="string">"0"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 主席树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】小J真爱粉交流群]]></title>
      <url>/2017/06/26/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91%E5%B0%8FJ%E7%9C%9F%E7%88%B1%E7%B2%89%E4%BA%A4%E6%B5%81%E7%BE%A4/</url>
      <content type="html"><![CDATA[<ul>
<li>题目来源：湖师大附中集训Day10T2</li>
</ul>
<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p><img src="http://i4.piimg.com/591838/497e17a09e825ab3.png"></p>
<hr>
<p>分析：首先有一些性质：</p>
<p>DDD每走一步，YJQ最多放一个墙</p>
<p>如果YJQ要放墙，一定放在DDD下面</p>
<p>如果YJQ没有放墙，DDD一定要走下去</p>
<p>任意时刻，DDD所在的当前行下面的墙一定是一段连续的区间</p>
<p>所以我们f[i][l][r][0/1/2/3]表示到达第i行，墙的位置是[l,r]</p>
<p>0代表DDD在位置l（即墙的左侧</p>
<p>1代表DDD在位置r（即墙的右侧</p>
<p>2代表DDD在位置l-1（即墙的左外侧</p>
<p>3代表DDD在位置r+1（即墙的右外侧</p>
<p>然后记忆化搜索转移，跑得飞快</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,ans,a[<span class="number">105</span>][<span class="number">105</span>],pre[<span class="number">105</span>][<span class="number">105</span>],f[<span class="number">105</span>][<span class="number">105</span>][<span class="number">105</span>][<span class="number">4</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(f[i][l][r][k]!=<span class="number">-1</span>) <span class="keyword">return</span> f[i][l][r][k];</div><div class="line">	<span class="keyword">if</span>(i==n) <span class="keyword">return</span> f[i][l][r][k]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</div><div class="line">		f[i][l][r][k]=INF;</div><div class="line">		<span class="keyword">if</span>(l<span class="number">-1</span>&gt;=<span class="number">1</span>) cmin(f[i][l][r][k],solve(i,l,r,<span class="number">2</span>)+a[i][l<span class="number">-1</span>]);</div><div class="line">		<span class="keyword">if</span>(r+<span class="number">1</span>&lt;=m) cmin(f[i][l][r][k],solve(i,l,r,<span class="number">3</span>)+pre[i][r+<span class="number">1</span>]-pre[i][l]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="number">1</span>)&#123;</div><div class="line">		f[i][l][r][k]=INF;</div><div class="line">		<span class="keyword">if</span>(l<span class="number">-1</span>&gt;=<span class="number">1</span>) cmin(f[i][l][r][k],solve(i,l,r,<span class="number">2</span>)+pre[i][r<span class="number">-1</span>]-pre[i][l<span class="number">-2</span>]);</div><div class="line">		<span class="keyword">if</span>(r+<span class="number">1</span>&lt;=m) cmin(f[i][l][r][k],solve(i,l,r,<span class="number">3</span>)+a[i][r+<span class="number">1</span>]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="number">2</span>)&#123;</div><div class="line">		cmax(f[i][l][r][k],solve(i+<span class="number">1</span>,l<span class="number">-1</span>,l<span class="number">-2</span>,<span class="number">3</span>)+a[i+<span class="number">1</span>][l<span class="number">-1</span>]);</div><div class="line">		<span class="keyword">if</span>(!(l==<span class="number">2</span>&amp;&amp;r==m)) cmax(f[i][l][r][k],solve(i,l<span class="number">-1</span>,r,<span class="number">0</span>));</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(k==<span class="number">3</span>)&#123;</div><div class="line">		cmax(f[i][l][r][k],solve(i+<span class="number">1</span>,r+<span class="number">1</span>,r,<span class="number">3</span>)+a[i+<span class="number">1</span>][r+<span class="number">1</span>]);</div><div class="line">		<span class="keyword">if</span>(!(l==<span class="number">1</span>&amp;&amp;r==m<span class="number">-1</span>)) cmax(f[i][l][r][k],solve(i,l,r+<span class="number">1</span>,<span class="number">1</span>));</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> f[i][l][r][k];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</div><div class="line">	ans=INF;</div><div class="line">	<span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">	<span class="built_in">memset</span>(pre,<span class="number">0</span>,<span class="keyword">sizeof</span>(pre));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();  clear();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)a[i][j]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)pre[i][j]=pre[i][j<span class="number">-1</span>]+a[i][j];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)cmin(ans,solve(<span class="number">1</span>,i,i<span class="number">-1</span>,<span class="number">3</span>)+a[<span class="number">1</span>][i]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】小Y增员操直播群]]></title>
      <url>/2017/06/26/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91%E5%B0%8FY%E5%A2%9E%E5%91%98%E6%93%8D%E7%9B%B4%E6%92%AD%E7%BE%A4/</url>
      <content type="html"><![CDATA[<ul>
<li>题目来源：湖师大附中集训Day10T1</li>
</ul>
<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p><img src="http://i4.piimg.com/591838/21f6fbf96101cd17.png"></p>
<hr>
<p>分析：考虑一个图，想办法把它拆成两个图</p>
<p>只需要关注编号最小的点连出去的编号最大的点，就能计算出左边图的大小</p>
<p>然后处理一下删边就行了</p>
<p>这样不断拆分下去就能算出最终图的答案，应该算是分治的思想</p>
<p>注意无解的判断</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;edge[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">getlen</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(!edge[l].size())  <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	<span class="keyword">if</span>(edge[l].size()==<span class="number">1</span>) <span class="keyword">return</span> edge[l][<span class="number">0</span>]-l;</div><div class="line">	<span class="keyword">int</span> mid=(l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(edge[l][edge[l].size()<span class="number">-1</span>]==mid) <span class="keyword">return</span> mid-l;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> edge[l][edge[l].size()<span class="number">-1</span>]-edge[l][edge[l].size()<span class="number">-2</span>];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> len=getlen(l,r); <span class="keyword">if</span>(len&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=l+len<span class="number">-1</span>;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=(r-i)/len*len+i;j&gt;=l+len;j-=len)&#123;</div><div class="line">			<span class="keyword">if</span>(edge[i].size()&amp;&amp;edge[i].back()==j) edge[i].erase(edge[i].end()<span class="number">-1</span>);</div><div class="line">			<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> Lans=solve(l,l+len<span class="number">-1</span>);</div><div class="line">	<span class="keyword">int</span> Rans=solve(l+len,r);</div><div class="line">	<span class="keyword">if</span>(Lans==<span class="number">-1</span>||Rans==<span class="number">-1</span>) <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> max(Lans,Rans)+<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> n=read(),m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) edge[i].clear();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		<span class="keyword">if</span>(x&gt;y)  swap(x,y);</div><div class="line">		edge[x].push_back(y);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) sort(edge[i].begin(),edge[i].end(),less&lt;<span class="keyword">int</span>&gt;());</div><div class="line">	<span class="keyword">int</span> ans=solve(<span class="number">0</span>,n<span class="number">-1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)<span class="keyword">if</span>(edge[i].size())&#123;<span class="built_in">puts</span>(<span class="string">"-1"</span>);<span class="keyword">return</span>;&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 分治 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】杨柳]]></title>
      <url>/2017/06/26/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91%E6%9D%A8%E6%9F%B3/</url>
      <content type="html"><![CDATA[<ul>
<li>题目来源：湖师大附中集训Day9T1</li>
</ul>
<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p><img src="http://i4.piimg.com/591838/51630da5709b4b7f.png"></p>
<hr>
<p>分析：我们发现棋子不能重叠这个限制是没有用的，因为我们总能调整走的顺序使得棋子不重叠</p>
<p>所以只需要建立源点和汇点，源点连出发点，汇点连终点，然后能达到的格子连边跑费用流即可</p>
<p>但是出题人特地卡了一下费用流做法，正解是转成二分图做最大权完美匹配，然而我并不会KM算法，精神AC吧</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 10100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">-1</span>&#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,w;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> R,C,n,A,B,S,T,cnt,ans,flag,len(<span class="number">1</span>),Link[MAXN],vis[MAXN],dis[MAXN],flow[MAXN],LN[MAXN],LE[MAXN],Id[<span class="number">105</span>][<span class="number">105</span>];</div><div class="line"><span class="keyword">char</span> ch[<span class="number">105</span>][<span class="number">105</span>];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>) &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].w=w;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;e[len].w=-w;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">	<span class="built_in">memset</span>(dis,<span class="number">10</span>,<span class="keyword">sizeof</span>(dis));</div><div class="line">	<span class="keyword">int</span> oo=dis[<span class="number">0</span>]; vis[S]=<span class="number">1</span>; dis[S]=<span class="number">0</span>; q.push(S); flow[S]=INF;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front(); q.pop(); vis[x]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(dis[x]+e[i].w&lt;dis[e[i].y]&amp;&amp;e[i].v)&#123;</div><div class="line">			dis[e[i].y]=dis[x]+e[i].w;  </div><div class="line">			flow[e[i].y]=min(flow[x],e[i].v);</div><div class="line">			LN[e[i].y]=x;  LE[e[i].y]=i;</div><div class="line">			<span class="keyword">if</span>(!vis[e[i].y]) q.push(e[i].y),vis[e[i].y]=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(dis[T]==oo) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	ans+=flow[T]*dis[T];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=T;i!=S;i=LN[i]) e[LE[i]].v-=flow[T],e[LE[i]^<span class="number">1</span>].v+=flow[T];</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	R=read(); C=read(); n=read(); A=read(); B=read(); S=++cnt; T=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=R;++i) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch[i]+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=R;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=C;++j)Id[i][j]=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(S,Id[x][y],<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(Id[x][y],T,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=R;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=C;++j)<span class="keyword">if</span>(ch[i][j]==<span class="string">'.'</span>)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;++k)&#123;</div><div class="line">			<span class="keyword">int</span> x=i+A*dx[k],y=j+B*dy[k];</div><div class="line">			<span class="keyword">if</span>(x&lt;=<span class="number">0</span>||y&lt;=<span class="number">0</span>||x&gt;R||y&gt;C||ch[x][y]==<span class="string">'*'</span>) <span class="keyword">continue</span>;</div><div class="line">			insert(Id[i][j],Id[x][y],INF,<span class="number">1</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;++k)&#123;</div><div class="line">			<span class="keyword">int</span> x=i+B*dx[k],y=j+A*dy[k];</div><div class="line">			<span class="keyword">if</span>(x&lt;=<span class="number">0</span>||y&lt;=<span class="number">0</span>||x&gt;R||y&gt;C||ch[x][y]==<span class="string">'*'</span>) <span class="keyword">continue</span>;</div><div class="line">			insert(Id[i][j],Id[x][y],INF,<span class="number">1</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(spfa());</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[T];i;i=e[i].next)<span class="keyword">if</span>(!e[i].v)flag=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(flag) <span class="built_in">puts</span>(<span class="string">"-1"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 费用流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】String]]></title>
      <url>/2017/06/22/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91String/</url>
      <content type="html"><![CDATA[<ul>
<li>题目来源：湖师大附中集训Day4T1</li>
</ul>
<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="http://i4.piimg.com/591838/0aef6a3646af132f.png"></p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>首先把字符串集合建成AC自动机，那么如果不考虑重复的话，答案就是结点个数的平方，现在考虑去重问题</p>
<p>为了避免重复去重，我们定义一个串是重复的当且仅当它的某个后缀可以切掉一个前缀移动到前面的划分</p>
<p>这样我们就可以在AC自动机上跑，那么当前节点在fail树上的父亲所代表的串就是最长后缀</p>
<p>只需要统计切掉这个后缀后的前缀能接到几个串上就行了，随便维护一下就能做到</p>
<p>考虑一个问题：为什么要取最长后缀？</p>
<p>这是为了避免重复计算（画个图就知道了）</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"string"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> Case,n,cnt,pos[MAXN],deep[MAXN],fail[MAXN],q[MAXN],size[MAXN],tr[MAXN][<span class="number">26</span>];</div><div class="line">ll ans;</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> len=<span class="built_in">strlen</span>(ch+<span class="number">1</span>),now=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!tr[now][ch[i]-<span class="string">'a'</span>])  tr[now][ch[i]-<span class="string">'a'</span>]=++cnt,deep[cnt]=i;</div><div class="line">		now=tr[now][ch[i]-<span class="string">'a'</span>];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)<span class="keyword">if</span>(tr[<span class="number">0</span>][i])q[++tail]=tr[<span class="number">0</span>][i];</div><div class="line">	<span class="keyword">while</span>(++head&lt;=tail)&#123;</div><div class="line">		<span class="keyword">int</span> x=q[head];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)<span class="keyword">if</span>(tr[x][i])&#123;</div><div class="line">			q[++tail]=tr[x][i];</div><div class="line">			<span class="keyword">int</span> temp=fail[x];</div><div class="line">			<span class="keyword">while</span>(temp&amp;&amp;!tr[temp][i])temp=fail[temp];</div><div class="line">			fail[tr[x][i]]=tr[temp][i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=tail;i;--i) size[fail[q[i]]]+=(++size[q[i]]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> depth)</span></span>&#123;</div><div class="line">	pos[depth]=x;</div><div class="line">	<span class="keyword">if</span>(fail[x]) ans+=size[pos[depth-deep[fail[x]]]]<span class="number">-1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)<span class="keyword">if</span>(tr[x][i])dfs(tr[x][i],depth+<span class="number">1</span>);</div><div class="line">	<span class="keyword">return</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> __size__=<span class="number">256</span>&lt;&lt;<span class="number">20</span>;</div><div class="line">	<span class="keyword">char</span> *__p__=(<span class="keyword">char</span>*)<span class="built_in">malloc</span>(__size__)+__size__;</div><div class="line">	__asm__(<span class="string">"movl %0, %%esp\n"</span>::<span class="string">"r"</span>(__p__));</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;Case,&amp;n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);</div><div class="line">		insert();</div><div class="line">	&#125;</div><div class="line">	build(); dfs(<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ll)cnt*cnt-ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> AC自动机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】没有上司的舞会]]></title>
      <url>/2017/06/22/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91%E6%B2%A1%E6%9C%89%E4%B8%8A%E5%8F%B8%E7%9A%84%E8%88%9E%E4%BC%9A/</url>
      <content type="html"><![CDATA[<ul>
<li>题目来源：湖师大附中集训Day1T2</li>
</ul>
<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><img src="http://i4.piimg.com/591838/fce2638a8d5f1c1e.png"></p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>题目要求动态维护最大独立集</p>
<p>我们给每个点黑白染色：</p>
<p>（1）叶子是黑色的</p>
<p>（2）若一个点是黑色的，则它的父亲是白色的</p>
<p>（3）若一个点的所有孩子都是白色的，则它本身是黑色的</p>
<p>答案即为黑色点数</p>
<p>从匹配或者独立集问题入手，考虑问题在树上的贪心性质，都能发现上述结论</p>
<p>显然每加入一个新的叶子，会翻转一条链的颜色</p>
<p>考虑用Link_Cut_Tree维护颜色，保证重链上的点的颜色黑白交替</p>
<p>加入一个叶子后，对该叶子进行特殊的access操作，得到一条尽可能长的链</p>
<p>翻转链的颜色（打标记实现），然后根据链顶颜色判断是否ans++</p>
<p>好妙的动态树操作啊（第一见到这种操作</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 300100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,type;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">class</span> Link_Cut_Tree&#123;</div><div class="line">	<span class="keyword">private</span>:</div><div class="line">		<span class="keyword">int</span> tot,f[MAXN],col[MAXN],cnt[MAXN],tag[MAXN],st[MAXN],son[MAXN][<span class="number">2</span>];</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">isroot</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">0</span>]!=x&amp;&amp;son[f[x]][<span class="number">1</span>]!=x;&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">1</span>]==x;&#125;</div><div class="line">		<span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">if</span>(tag[x])&#123;</div><div class="line">				<span class="keyword">if</span>(son[x][<span class="number">0</span>]) tag[son[x][<span class="number">0</span>]]^=<span class="number">1</span>,col[son[x][<span class="number">0</span>]]^=<span class="number">1</span>;</div><div class="line">				<span class="keyword">if</span>(son[x][<span class="number">1</span>]) tag[son[x][<span class="number">1</span>]]^=<span class="number">1</span>,col[son[x][<span class="number">1</span>]]^=<span class="number">1</span>;</div><div class="line">				tag[x]=<span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> y=f[x],z=f[y],which=get(x);</div><div class="line">			<span class="keyword">if</span>(!isroot(y))  son[z][son[z][<span class="number">1</span>]==y]=x;</div><div class="line">			son[y][which]=son[x][which^<span class="number">1</span>];  f[son[y][which]]=y;</div><div class="line">			son[x][which^<span class="number">1</span>]=y;  f[y]=x;  f[x]=z;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> top=<span class="number">0</span>;  st[++top]=x;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=x;!isroot(i);i=f[i]) st[++top]=f[i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=top;i;--i) pushdown(st[i]);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> y=f[x];!isroot(x);rotate(x),y=f[x])</div><div class="line">				<span class="keyword">if</span>(!isroot(y))  rotate(get(x)==get(y)?y:x);</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">			<span class="keyword">while</span>(son[x][<span class="number">0</span>])  x=son[x][<span class="number">0</span>];</div><div class="line">			splay(x);  <span class="keyword">return</span> x;</div><div class="line">		&#125;</div><div class="line">		<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			<span class="keyword">while</span>(x)&#123;</div><div class="line">				splay(x);</div><div class="line">				<span class="keyword">int</span> z=son[x][<span class="number">1</span>];</div><div class="line">				<span class="keyword">if</span>(z) son[x][<span class="number">1</span>]=<span class="number">0</span>,cnt[x]+=(col[find(z)]==<span class="number">0</span>);</div><div class="line">				<span class="keyword">if</span>(col[y]==<span class="number">1</span>) &#123;<span class="keyword">if</span>(col[x]==<span class="number">1</span>) <span class="keyword">break</span>;&#125;</div><div class="line">				<span class="keyword">else</span>&#123;</div><div class="line">					<span class="keyword">if</span>(cnt[x]&gt;<span class="number">1</span>) <span class="keyword">break</span>;</div><div class="line">					--cnt[x];</div><div class="line">				&#125;</div><div class="line">				son[x][<span class="number">1</span>]=y;  f[y]=x;</div><div class="line">				y=find(x);  x=f[y];</div><div class="line">			&#125;</div><div class="line">			tag[y]^=<span class="number">1</span>;  col[y]^=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(col[y])&#123;</div><div class="line">				cnt[f[y]]--;</div><div class="line">				<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				cnt[f[y]]++;</div><div class="line">				<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">public</span>:</div><div class="line">		<span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;tot=<span class="number">1</span>; col[<span class="number">0</span>]=<span class="number">1</span>;&#125;</div><div class="line">		<span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">			<span class="keyword">int</span> x=++tot;</div><div class="line">			f[x]=y;  col[x]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">return</span> access(y,x);</div><div class="line">		&#125;</div><div class="line">&#125;Tree;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  type=read();  Tree.init();  <span class="keyword">int</span> ans=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(); <span class="keyword">if</span>(type&amp;&amp;i&gt;<span class="number">1</span>) x^=ans;</div><div class="line">		ans+=Tree.insert(x+<span class="number">1</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> LCT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[湖师大附中游记]]></title>
      <url>/2017/06/16/%E3%80%90%E6%B8%B8%E8%AE%B0%E3%80%91%E5%B8%88%E5%A4%A7%E9%99%84%E4%B8%AD%E6%95%85%E5%9C%B0%E9%87%8D%E6%B8%B8/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><ul>
<li><a href="http://pan.baidu.com/s/1c2iYtuo" target="_blank" rel="external">考试包</a></li>
</ul>
<hr>
<p>本场考试70+8+0=78，总体不错，但是略有遗憾</p>
<p>读完题面之后，我直接去肛第一题，成果还是挺不错的</p>
<p>一个半小时之后我便过了大样例，成功写出70分算法</p>
<p>之后的一个小时，我写出了T2的暴力，预计36分，但是最终只有8分（不知道什么原因</p>
<p>此时已经10点半了，吾辈就此打出gg，开始各种颓废（睡觉、看小说等。。。。。。</p>
<p>总的来说此次考试算是T1大战，很庆幸写出了T1（离正解只差一步，但是70分足矣了</p>
<p>下午的讲题异常困倦，于是睡了过去。。。但是其间还是听懂了几道题目的</p>
<p>今日出师挺顺，明日加油</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h2><ul>
<li><a href="http://pan.baidu.com/s/1dFnGcH7" target="_blank" rel="external">考试包</a></li>
</ul>
<hr>
<p>本场考试0+0+10，十分爆炸</p>
<p>前2~3个小时我都在肛第一题，然而题中的“祖先—后代链”我理解成了可以拐弯的那种，顺利被坑5555</p>
<p>然后肛不出来，后面就只好匆忙写完了后两题的暴力，结果T2过于暴力，T掉了…….</p>
<p>只有T3的暴力拿到了十分</p>
<p>这启示着我们读题是多么的重要</p>
<p>Cydiater大神帅气A掉了T3，无限膜拜orz…</p>
<p>PS:晚上老师带队，我们去了小吃一条街（比开封的逼格低到不知道哪里去了），回来累的半死，看来要锻炼一波了</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h2><ul>
<li><a href="http://pan.baidu.com/s/1skQXdcp" target="_blank" rel="external">考试包</a></li>
</ul>
<hr>
<p>本场考试20+0+20</p>
<p>看到题目的第一眼，“挑战NPC”，卧槽这么劲的嘛，结果是一道SB构造题</p>
<p>考试时没能构造出来，只拿到了暴力（不懂构造题的套路</p>
<p>第二题仙人掌计数，怎么这么鬼畜啊！！！</p>
<p>一脸懵逼，完全不懂啊，果断跳过</p>
<p>第三题一眼看去，似乎是LCT的样子，由于昨天刚练习了LCT的板子，果断写了一发</p>
<p>然后就GG了，我发现这玩意我不会维护啊，只能拿了暴力20分</p>
<p>正解居然是ETT（另一种动态树），std居然500行，出题人写了整整12天才写完。。。。。。</p>
<p>这次考试好鬼畜啊，基本上是T1大战，懂构造套路的人都A了。。。我也无话可说</p>
<p>晚上回去之后和柳志轩讨论了一下LCT，然后发现我似乎学的是假的LCT。。。一些操作完全理解错了</p>
<p>和大爷讨论果然长知识</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h2><ul>
<li><a href="http://pan.baidu.com/s/1nvJTRbr" target="_blank" rel="external">考试包</a></li>
</ul>
<hr>
<p>本场考试属于暴力大赛（当然cydiater怒A一题也是非常帅气的</p>
<p>20+10+20，三道题的暴力分都拿到了，没有什么遗憾</p>
<p>T1的AC自动机做法好妙啊，我从没想过AC自动机还能这么乱搞</p>
<p>T2我曾经做过一道类似的题目，但是不记得做法了，今晚得复习一下</p>
<p>T3又是冷门知识，只能弃坑了。。。</p>
<p>今天的题目好没意思啊，拿稳暴力就rank5了。。。</p>
<p>可能是吾辈比较naive，只能打暴力吧</p>
<p>晚上获得孟教练的网线一根，网络终于恢复正常了（好开森啊</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day5"><a href="#Day5" class="headerlink" title="Day5"></a>Day5</h2><ul>
<li><a href="http://pan.baidu.com/s/1o7Rdmh8" target="_blank" rel="external">考试包</a></li>
</ul>
<hr>
<p>这一场是子祯的题目，0+0+96</p>
<p>提答贪心草标算，生成树一发94，岂不是出的好失败</p>
<p>另外第二个测试点使用tarjan可以过去</p>
<p>第3个测试点是一条链，可是特殊处理</p>
<p>第5个测试点颜色数很少，可以暴力枚举</p>
<p>于是乎我花了2个多小时写了这4个程序，成功比贪心选手多获得2分。。。（无力吐槽</p>
<p>搞完提答后全程去肛T2，然后就打错文件名了。。。。。。</p>
<p>一眼看去T2是一个并不简单的线段树，我去搞了一发吉司机线段树，一个小时过了样例</p>
<p>然后对拍。。。卧槽有错误</p>
<p>然后我意识到思路出现了问题</p>
<p>此时已经12点了，匆忙之下，我赶紧写了一个分段交了上去</p>
<p>结果提交时有些匆忙，由于对拍需要输出文件名多了一个2，然后就GG了</p>
<p><img src="http://i4.piimg.com/591838/6c8d4fed2b5b9c6a.png"></p>
<p>重测后T2获得了55分，然后看了看数据发现有2组输入数据不全（卧槽，这不是卡read吗</p>
<p>PS：晚上在B站学习微积分，推荐一套很好的视频：<a href="http://space.bilibili.com/58819405/#!/favlist?fid=66953374" target="_blank" rel="external">传送门</a></p>
<p>　　</p>
<p>　　</p>
<h2 id="Day6"><a href="#Day6" class="headerlink" title="Day6"></a>Day6</h2><ul>
<li><a href="http://pan.baidu.com/s/1hsqrWDA" target="_blank" rel="external">考试包</a></li>
</ul>
<hr>
<p>10+20+55，有点惨啊</p>
<p>看完题面之后，我选择先搞提答</p>
<p>第一组数据可以手玩出来，得到了10分</p>
<p>但是其他点的数据居然超过了long long范围，我不想写高精度，于是弃坑</p>
<p>接下来我去做T1，基于平时玩魔塔的经验，我知道一定是先加攻击再加防御比较优越</p>
<p>所以直接枚举加攻击的次数计算答案就行了</p>
<p>为了降低复杂度，我大力猜想这东西是个单峰函数，于是把枚举改成了三分</p>
<p>然后对拍发现三分是错的。。。。。。</p>
<p>我只好去写了一个滚动dp拿到了20</p>
<p>事实上这个枚举可以分块维护降至根号，我没想到分块实在是智商捉急</p>
<p>柳志轩写的分块拿到了80，</p>
<p>于是转而去写T2，n^2的算法是很显然的，一个小时搞定，得到55分</p>
<p>PS：晚上去改那道AC自动机的题目，然后fail指针的构造写挂了，查了一下午555555</p>
<p>　　</p>
<p>　　</p>
<h2 id="Day7"><a href="#Day7" class="headerlink" title="Day7"></a>Day7</h2><ul>
<li><a href="http://pan.baidu.com/s/1hsqYaqC" target="_blank" rel="external">考试包</a></li>
</ul>
<hr>
<p>20+40+0，今天的考试遗憾很大</p>
<p>T1本来搞了一发上下界有源汇费用流，但是后来发现建图方法错了</p>
<p>实则正解是线性规划（现场大佬都A掉了，怎么就我不会线性规划啊）</p>
<p>T2暴力做法非常显然，40分挺稳的（把数组开大点能拿45</p>
<p>然而李嘉图使用暴力做法+有理有据的底层优化跑过去了（比std还快</p>
<p>看来深得wys的真传</p>
<p>还有罗旭琨的循环展开大法拿到了80……（我也是很无奈啊</p>
<p>写完暴力之后，我脑补了一个分块算法，用map套bitset统计答案</p>
<p>然而写完之后编译不过。。。（没写过这玩意，stl的编译错误根本不知道怎么整</p>
<p>然后就gg了，事后焦景辉告诉我map里套bitset的时候的重载运算符定义大小关系（我果然是naive</p>
<p>至于T3完全不知道怎么入手（场上只有mjl拿到了暴力分</p>
<p>PS：晚上深入探究了泰勒展开的原理，至此B站视频微积分系列全部搞定，明晚开坑线性代数</p>
<p>　　</p>
<p>　　</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[【解题报告】UOJ-Round泛做]]></title>
      <url>/2017/06/12/%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91UOJrand%E6%B3%9B%E5%81%9A/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<h3 id="【UR-1】缩进优化"><a href="#【UR-1】缩进优化" class="headerlink" title="【UR #1】缩进优化"></a>【UR #1】缩进优化</h3><p>首先将问题转化为求最多能缩掉多少空格</p>
<p>考虑对于一个$x$，每个$a_i$的贡献是$\left[\frac{a_i}{x} \right] (x-1)$</p>
<p>所以我们的做法就是枚举x，然后对$\left[\frac{a_i}{x} \right]$使用下底分块统计贡献</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e6</span>;</div><div class="line"><span class="keyword">int</span> n,a[MAXN],cnt[MAXN];</div><div class="line">ll ans,sum;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read(); </div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) sum+=a[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cnt[a[i]]++;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=N;i;--i)  cnt[i]+=cnt[i+<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</div><div class="line">		<span class="keyword">int</span> temp=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=N;j+=i)</div><div class="line">			temp+=cnt[j];</div><div class="line">		cmax(ans,(ll)temp*(i<span class="number">-1</span>));</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,sum-ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【UR-1】外星人"><a href="#【UR-1】外星人" class="headerlink" title="【UR #1】外星人"></a>【UR #1】外星人</h3><p>看到这类问题考虑$dp$</p>
<p>设$f[j]$表示答案为j时的方案数</p>
<p>那么考虑一个小于等于$j$的$a_k$，$f[j]$可以转移到$f[j mod a_k]$</p>
<p>转移时搞一波组合数，具体见题解</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 5050</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</div><div class="line"><span class="keyword">int</span> n,m,N,a[MAXN],inv[MAXN],fac[MAXN],cnt[MAXN],f[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">fast</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">ret</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=mul(a,a))<span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=mul(ret,a);<span class="keyword">return</span> ret;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	N=<span class="number">5000</span>;  fac[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)  fac[i]=mul(fac[i<span class="number">-1</span>],i);</div><div class="line">	inv[N]=fast(fac[N],mod<span class="number">-2</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=N<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)  inv[i]=mul(inv[i+<span class="number">1</span>],i+<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read();  m=read();  pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  cnt[a[i]]++;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)  cnt[i]+=cnt[i<span class="number">-1</span>];</div><div class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);  f[m]=mul(fac[n],inv[cnt[m]]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=m;j&gt;=<span class="number">0</span>;--j)<span class="keyword">if</span>(f[j])&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n&amp;&amp;a[k]&lt;=j;++k)&#123;</div><div class="line">			f[j%a[k]]=add(f[j%a[k]],mul(f[j],mul(fac[cnt[j]<span class="number">-1</span>],inv[cnt[j%a[k]]])));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> ans=a[<span class="number">1</span>]<span class="number">-1</span>;</div><div class="line">	<span class="keyword">while</span>(!f[ans]) --ans;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>,ans,f[ans]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="【UR-2】猪猪侠再战括号序列"><a href="#【UR-2】猪猪侠再战括号序列" class="headerlink" title="【UR #2】猪猪侠再战括号序列"></a>【UR #2】猪猪侠再战括号序列</h3><p>从左到右扫描，遇到右括号就和离他最近的左括号交换</p>
<p>这样既能保证扫描过的地方都是左括号，又能保证每次翻转时只交换端点的括号，妙哉</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> cnt,L[MAXN],R[MAXN];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  <span class="keyword">int</span> n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>)/<span class="number">2</span>,cur=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(ch[i]==<span class="string">')'</span>)&#123;</div><div class="line">		<span class="keyword">if</span>(!cur)  cur=i;  ++cur;</div><div class="line">		<span class="keyword">while</span>(ch[cur]!=<span class="string">'('</span>) ++cur;</div><div class="line">		L[++cnt]=i;  R[cnt]=cur;  swap(ch[i],ch[cur]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,cnt);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i) <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,L[i],R[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> dp </tag>
            
            <tag> uoj </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】浅色床单]]></title>
      <url>/2017/06/11/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91%E6%B5%85%E8%89%B2%E5%BA%8A%E5%8D%95/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p><img src="http://i1.buimg.com/591838/5a8e516863ba74aa.png"></p>
<hr>
<p>分析：</p>
<p>首先我们发现题目给出的n是没有用的，于是大力离散一波暴力分就到手了</p>
<p>然后考虑如果本质可以相同怎么做</p>
<p>首先区间里的每个数都是1，考虑每进行一次操作，如果1的个数小于K，说明本次操作不在答案中，K减去1的个数，并把区间中所有的数置为0</p>
<p>如果1的个数大于等于K，说明K在答案中，记录一下答案，然后把区间的补集置为0</p>
<p>现在要求的本质不同，我们得考虑去重</p>
<p>如何判断两个数集是相同的呢？</p>
<p>我们考虑hash算法，将每个数的hash值异或起来作为数集的hash值，这样容错率比较高，为$\frac{n^2}{2^{64}}$</p>
<p>然后就是线段树的事情了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"sheet"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 400100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> ull;</div><div class="line"><span class="keyword">int</span> n,m,K,cnt,tot,nowHash,L[MAXN],R[MAXN],a[MAXN],ans[MAXN],hash[MAXN],num[MAXN],tr[MAXN&lt;&lt;<span class="number">2</span>],flag[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line">ull H[MAXN],Hash[MAXN];</div><div class="line"><span class="built_in">map</span>&lt;ull,<span class="keyword">bool</span>&gt;vis;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> l=<span class="number">1</span>,r=tot;</div><div class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(hash[mid]&lt;=x) l=mid;</div><div class="line">		<span class="keyword">else</span> r=mid;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> hash[l]==x?l:r;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">relord</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;tr[p]=tr[p&lt;&lt;<span class="number">1</span>]+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(flag[p])&#123;</div><div class="line">		flag[p&lt;&lt;<span class="number">1</span>]=<span class="number">1</span>;  flag[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">		tr[p&lt;&lt;<span class="number">1</span>]=<span class="number">0</span>;  tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">		flag[p]=<span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r) &#123;tr[p]=a[l]; <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid);  build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) <span class="keyword">return</span> tr[p];</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>,ret=<span class="number">0</span>;  pushdown(p);</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) ret+=query(p&lt;&lt;<span class="number">1</span>,l,mid,x,y);</div><div class="line">	<span class="keyword">if</span>(y&gt;mid)  ret+=query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) &#123;flag[p]=<span class="number">1</span>; tr[p]=<span class="number">0</span>;  <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;  pushdown(p);</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y);</div><div class="line">	<span class="keyword">if</span>(y&gt;mid) updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	srand(time(<span class="number">0</span>));</div><div class="line">	n=read();  m=read();  K=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		L[i]=read(); R[i]=read();</div><div class="line">		num[++cnt]=L[i]; num[++cnt]=R[i];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">10</span>;++j) H[i]=(H[i]&lt;&lt;<span class="number">15</span>)^rand();</div><div class="line">	&#125;</div><div class="line">	sort(num+<span class="number">1</span>,num+cnt+<span class="number">1</span>);  hash[++tot]=num[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=cnt;++i)<span class="keyword">if</span>(num[i]!=num[i<span class="number">-1</span>])hash[++tot]=num[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) L[i]=find(L[i]),R[i]=find(R[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) Hash[L[i]]^=H[i],Hash[R[i]]^=H[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;++i) Hash[i]^=Hash[i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(vis[Hash[i]]) <span class="keyword">continue</span>;</div><div class="line">		vis[Hash[i]]=<span class="number">1</span>,a[i]=<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	build(<span class="number">1</span>,<span class="number">1</span>,tot);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(K&lt;=<span class="number">0</span>)  <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">int</span> temp=query(<span class="number">1</span>,<span class="number">1</span>,tot,L[i],R[i]<span class="number">-1</span>);</div><div class="line">		<span class="keyword">if</span>(K&gt;temp)&#123;</div><div class="line">			updata(<span class="number">1</span>,<span class="number">1</span>,tot,L[i],R[i]<span class="number">-1</span>);</div><div class="line">			K-=temp;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			ans[++ans[<span class="number">0</span>]]=i;</div><div class="line">			nowHash^=Hash[i];</div><div class="line">			<span class="keyword">if</span>(vis[nowHash]) --K;</div><div class="line">			<span class="keyword">if</span>(L[i]<span class="number">-1</span>&gt;<span class="number">0</span>) updata(<span class="number">1</span>,<span class="number">1</span>,tot,<span class="number">1</span>,L[i]<span class="number">-1</span>);</div><div class="line">			updata(<span class="number">1</span>,<span class="number">1</span>,tot,R[i],tot);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[<span class="number">0</span>]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ans[<span class="number">0</span>];++i) <span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 哈希 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】三进制计数]]></title>
      <url>/2017/06/11/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91%E4%B8%89%E8%BF%9B%E5%88%B6%E8%AE%A1%E6%95%B0/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p><img src="http://i1.buimg.com/591838/ba2107f9c458bcdd.png"></p>
<hr>
<p>分析：</p>
<p>设f[i][j][k]表示最近的0在位置i，1在位置j，2在位置k</p>
<p>然后大力讨论当前位置上的数字进行转移就行了</p>
<p>考试时没有想到如何设置状态gg</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"three"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</div><div class="line"><span class="keyword">int</span> n,m,ans,f[<span class="number">305</span>][<span class="number">305</span>][<span class="number">305</span>];</div><div class="line"><span class="built_in">vector</span>&lt;pii&gt;Point[<span class="number">305</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> r=max(i,max(j,k));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;Point[r].size();++x)&#123;</div><div class="line">		<span class="keyword">int</span> l=Point[r][x].first,c=Point[r][x].second;</div><div class="line">		c-=(i&gt;=l)+(j&gt;=l)+(k&gt;=l);</div><div class="line">		<span class="keyword">if</span>(c!=<span class="number">0</span>)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> l=read(),r=read(),c=read();</div><div class="line">		Point[r].push_back(make_pair(l,c));</div><div class="line">	&#125;</div><div class="line">	f[<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>]=f[<span class="number">0</span>][<span class="number">1</span>][<span class="number">0</span>]=f[<span class="number">0</span>][<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;++j)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;i;++k)&#123;</div><div class="line">		<span class="keyword">if</span>(!check(i,j,k)) f[i][j][k]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(!check(j,i,k)) f[j][i][k]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(!check(j,k,i)) f[j][k][i]=<span class="number">0</span>;</div><div class="line">		f[i+<span class="number">1</span>][j][k]=add(f[i+<span class="number">1</span>][j][k],f[i][j][k]);</div><div class="line">		f[i][i+<span class="number">1</span>][k]=add(f[i][i+<span class="number">1</span>][k],f[i][j][k]);</div><div class="line">		f[i][j][i+<span class="number">1</span>]=add(f[i][j][i+<span class="number">1</span>],f[i][j][k]);</div><div class="line">		f[j][i+<span class="number">1</span>][k]=add(f[j][i+<span class="number">1</span>][k],f[j][i][k]);</div><div class="line">		f[i+<span class="number">1</span>][i][k]=add(f[i+<span class="number">1</span>][i][k],f[j][i][k]);</div><div class="line">		f[j][i][i+<span class="number">1</span>]=add(f[j][i][i+<span class="number">1</span>],f[j][i][k]);</div><div class="line">		f[j][k][i+<span class="number">1</span>]=add(f[j][k][i+<span class="number">1</span>],f[j][k][i]);</div><div class="line">		f[j][i+<span class="number">1</span>][i]=add(f[j][i+<span class="number">1</span>][i],f[j][k][i]);</div><div class="line">		f[i+<span class="number">1</span>][k][i]=add(f[i+<span class="number">1</span>][k][i],f[j][k][i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;++j)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;++k)&#123;</div><div class="line">		ans=add(ans,f[n][j][k]);</div><div class="line">		ans=add(ans,f[j][n][k]);</div><div class="line">		ans=add(ans,f[j][k][n]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【ZJOI2017】仙人掌]]></title>
      <url>/2017/06/11/%E3%80%90ZJOI2017%E3%80%91%E4%BB%99%E4%BA%BA%E6%8E%8C/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://uoj.ac/problem/290" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>这题非常的神奇</p>
<p>首先如果原图不是仙人掌，那么答案显然是0</p>
<p>然后我们发现原图中的环对答案没有贡献，所以把环删掉之后，原图变成了森林</p>
<p>我们只需要算出每棵树的答案，然后乘起来就行了</p>
<p>那么现在问题就变成了给你一棵树，用边不相交的路径覆盖这颗树，求方案数（这个模型转换要仔细考虑清楚）</p>
<p>设f[x]表示以x为根且没有路径可以往上扩展的子树的答案</p>
<p>g[x]表示路径可以往上扩展的答案</p>
<p>h[x]表示儿子之间的匹配方案</p>
<blockquote>
<p>$h[i]=h[i-1]+h[i-2] \times (i-1)$</p>
<hr>
<p>$f[x]=h[cnt] \prod g[y]$</p>
<hr>
<p>$g[x]=f[x]+h[cnt-1] \times cnt \prod g[y]$</p>
<hr>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXM 1000100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXM&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,dfs_clock,len,top,No_Cactus,bcnt,Link[MAXN],dfn[MAXN],low[MAXN],vis[MAXN],st[MAXN],belong[MAXN],h[MAXN],f[MAXN],g[MAXN],check[MAXM&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	dfn[x]=low[x]=++dfs_clock;  </div><div class="line">	st[++top]=x;  vis[x]=<span class="number">1</span>; <span class="keyword">int</span> cnt=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		<span class="keyword">if</span>(!dfn[e[i].y])&#123;</div><div class="line">			tarjan(e[i].y,x);</div><div class="line">			cmin(low[x],low[e[i].y]);</div><div class="line">			<span class="keyword">if</span>(low[e[i].y]&lt;dfn[x]) ++cnt;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(vis[e[i].y])&#123;</div><div class="line">			cmin(low[x],dfn[e[i].y]);</div><div class="line">			<span class="keyword">if</span>(low[e[i].y]&lt;dfn[x]) ++cnt;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(cnt&gt;=<span class="number">2</span>) No_Cactus=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(dfn[x]==low[x])&#123;</div><div class="line">		<span class="keyword">int</span> y;  bcnt++;</div><div class="line">		<span class="keyword">do</span>&#123;</div><div class="line">			y=st[top--];</div><div class="line">			vis[y]=<span class="number">0</span>;</div><div class="line">			belong[y]=bcnt;</div><div class="line">		&#125;<span class="keyword">while</span>(x!=y);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> cnt=<span class="number">0</span>;  f[x]=<span class="number">1</span>;  vis[x]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(!check[i]&amp;&amp;e[i].y!=fa)&#123;</div><div class="line">		dfs(e[i].y,x);  ++cnt;</div><div class="line">		f[x]=mul(f[x],g[e[i].y]);</div><div class="line">	&#125;</div><div class="line">	g[x]=mul(mul(f[x],h[cnt<span class="number">-1</span>]),cnt);</div><div class="line">	f[x]=mul(f[x],h[cnt]);</div><div class="line">	g[x]=add(g[x],f[x]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</div><div class="line">	dfs_clock=len=bcnt=top=No_Cactus=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) Link[i]=dfn[i]=low[i]=vis[i]=belong[i]=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();  clear();  <span class="keyword">int</span> ans=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y);  insert(y,x);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i)check[i]=<span class="number">0</span>;</div><div class="line">	tarjan(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	<span class="keyword">if</span>(No_Cactus) &#123;<span class="built_in">puts</span>(<span class="string">"0"</span>);  <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)vis[i]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=Link[i];j;j=e[j].next)</div><div class="line">		<span class="keyword">if</span>(belong[i]==belong[e[j].y])check[j]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(!vis[i])&#123;</div><div class="line">		dfs(i,<span class="number">0</span>);</div><div class="line">		ans=mul(ans,f[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	h[<span class="number">0</span>]=<span class="number">1</span>;  h[<span class="number">1</span>]=<span class="number">1</span>;  <span class="keyword">int</span> N=<span class="number">500000</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;++i)&#123;</div><div class="line">		h[i]=add(h[i],h[i<span class="number">-1</span>]);</div><div class="line">		h[i]=add(h[i],mul(h[i<span class="number">-2</span>],i<span class="number">-1</span>));</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre();<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 树形dp </tag>
            
            <tag> 仙人掌 </tag>
            
            <tag> uoj </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【uoj#228】基础数据结构练习题]]></title>
      <url>/2017/06/05/228/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://uoj.ac/problem/228" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>看到区间开根的时候我懵逼了，这tm怎么做</p>
<p>然后查看题解恍然大悟</p>
<p>把区间开根转化为区间减法就行了</p>
<p>具体做法：</p>
<p>如果当前区间满足$maxx-minn=\sqrt{maxx} - \sqrt{minn}$</p>
<p>那么当前区间满足区间减法的性质，直接打标记，否则递归左右子树</p>
<p>这种做法应该叫做吉司机线段树，时间复杂度$O(7mlogn)$</p>
<p>我也不会证明复杂度QAQ</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node&#123;ll maxx,minn,delta,sum;&#125;tr[MAXN&lt;&lt;<span class="number">3</span>];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">relord</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	tr[p].sum=tr[p&lt;&lt;<span class="number">1</span>].sum+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum;</div><div class="line">	tr[p].maxx=max(tr[p&lt;&lt;<span class="number">1</span>].maxx,tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].maxx);</div><div class="line">	tr[p].minn=min(tr[p&lt;&lt;<span class="number">1</span>].minn,tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].minn);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(tr[p].delta)&#123;</div><div class="line">		ll temp=tr[p].delta;</div><div class="line">		tr[p&lt;&lt;<span class="number">1</span>].delta+=temp;  tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].delta+=temp;</div><div class="line">		tr[p&lt;&lt;<span class="number">1</span>].maxx+=temp;   tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].maxx+=temp;</div><div class="line">		tr[p&lt;&lt;<span class="number">1</span>].minn+=temp;   tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].minn+=temp;</div><div class="line">		tr[p&lt;&lt;<span class="number">1</span>].sum+=temp*(mid-l+<span class="number">1</span>);  tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum+=temp*(r-mid);</div><div class="line">		tr[p].delta=<span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;tr[p].sum=tr[p].maxx=tr[p].minn=read(); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid);  build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	pushdown(p,l,r);</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</div><div class="line">		tr[p].delta+=v; </div><div class="line">		tr[p].maxx+=v;</div><div class="line">		tr[p].minn+=v;</div><div class="line">		tr[p].sum+=(ll)v*(r-l+<span class="number">1</span>); </div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;  </div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) add(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,v);  </div><div class="line">	<span class="keyword">if</span>(y&gt;mid)  add(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,v);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	pushdown(p,l,r);</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r&amp;&amp;tr[p].maxx-tr[p].minn==(ll)<span class="built_in">sqrt</span>(tr[p].maxx)-(ll)<span class="built_in">sqrt</span>(tr[p].minn))&#123;</div><div class="line">		ll v=(ll)<span class="built_in">sqrt</span>(tr[p].maxx)-tr[p].maxx;</div><div class="line">		tr[p].sum+=v*(r-l+<span class="number">1</span>);</div><div class="line">		tr[p].maxx+=v;</div><div class="line">		tr[p].minn+=v;</div><div class="line">		tr[p].delta+=v;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;  </div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y);  </div><div class="line">	<span class="keyword">if</span>(y&gt;mid)  updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	pushdown(p,l,r);</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) <span class="keyword">return</span> tr[p].sum;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; ll ret=<span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) ret+=query(p&lt;&lt;<span class="number">1</span>,l,mid,x,y);</div><div class="line">	<span class="keyword">if</span>(y&gt;mid)  ret+=query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> n=read(),m=read();  build(<span class="number">1</span>,<span class="number">1</span>,n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> opt=read(),l=read(),r=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;<span class="keyword">int</span> x=read();add(<span class="number">1</span>,<span class="number">1</span>,n,l,r,x);&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>)updata(<span class="number">1</span>,<span class="number">1</span>,n,l,r);</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(<span class="number">1</span>,<span class="number">1</span>,n,l,r));</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> uoj </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CF#613D】Messenger]]></title>
      <url>/2017/06/05/CF-613D/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://codeforces.com/problemset/problem/631/D" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>题目大意：</p>
<p>给出两个字符串长度为n,m的S,T的压缩形式(x,ch)，询问一个串在另一个串里的出现次数</p>
<hr>
<p>分析：</p>
<p>忽略匹配串的开头和结尾，做kmp，然后O(1)判断是否合法</p>
<p>注意特判m=1和m=2的情况</p>
<p>代码实现细节繁多，调了一个下午</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 600100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line">ll n,m,ans,cnt1,cnt2,next[MAXN],PA[MAXN],PB[MAXN],a[MAXN],b[MAXN];</div><div class="line"><span class="keyword">char</span> A[MAXN],B[MAXN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(m==<span class="number">1</span>)&#123;</div><div class="line">		<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(A[i]==B[<span class="number">1</span>]&amp;&amp;PA[i]&gt;=PB[<span class="number">1</span>])ans+=PA[i]-PB[<span class="number">1</span>]+<span class="number">1</span>;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;n;++i)<span class="keyword">if</span>(A[i]==B[<span class="number">1</span>]&amp;&amp;PA[i]&gt;=PB[<span class="number">1</span>]&amp;&amp;A[i+<span class="number">1</span>]==B[<span class="number">2</span>]&amp;&amp;PA[i+<span class="number">1</span>]&gt;=PB[<span class="number">2</span>])++ans;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);  ll tot=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">scanf</span>(<span class="string">"%d-%c"</span>,&amp;PA[i],&amp;A[i]);</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=m;++i) <span class="built_in">scanf</span>(<span class="string">"%d-%c"</span>,&amp;PB[i],&amp;B[i]);</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		ll t=i;  PA[++tot]=PA[i];  A[tot]=A[i];</div><div class="line">		<span class="keyword">while</span>(A[i]==A[t+<span class="number">1</span>]&amp;&amp;t&lt;n)  PA[tot]+=PA[t+<span class="number">1</span>],++t;</div><div class="line">		i=t;</div><div class="line">	&#125;n=tot; tot=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		ll t=i;  PB[++tot]=PB[i];  B[tot]=B[i];</div><div class="line">		<span class="keyword">while</span>(B[i]==B[t+<span class="number">1</span>]&amp;&amp;t&lt;m)  PB[tot]+=PB[t+<span class="number">1</span>],++t;</div><div class="line">		i=t;</div><div class="line">	&#125;m=tot; tot=<span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(m&lt;=<span class="number">2</span>) &#123;solve(); <span class="keyword">return</span> <span class="number">0</span>;&#125;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)a[++cnt1]=PA[i]+<span class="number">300</span>,a[++cnt1]=(ll)A[i];</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;m;++i) b[++cnt2]=PB[i]+<span class="number">300</span>,b[++cnt2]=(ll)B[i];</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=cnt2;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(j&amp;&amp;b[j+<span class="number">1</span>]!=b[i]) j=next[j];</div><div class="line">		<span class="keyword">if</span>(b[j+<span class="number">1</span>]==b[i]) ++j;  next[i]=j;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;=cnt1;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(j&amp;&amp;b[j+<span class="number">1</span>]!=a[i]) j=next[j];</div><div class="line">		<span class="keyword">if</span>(b[j+<span class="number">1</span>]==a[i]) ++j;</div><div class="line">		<span class="keyword">if</span>(j==cnt2)&#123;</div><div class="line">			ll temp=i-cnt2+<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(a[temp<span class="number">-1</span>]==B[<span class="number">1</span>]&amp;&amp;a[temp<span class="number">-2</span>]<span class="number">-300</span>&gt;=PB[<span class="number">1</span>]&amp;&amp;a[i+<span class="number">2</span>]==B[m]&amp;&amp;a[i+<span class="number">1</span>]<span class="number">-300</span>&gt;=PB[m]) ++ans;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> kmp </tag>
            
            <tag> CF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CF#739E】Gosha is hunting]]></title>
      <url>/2017/06/05/CF-739E/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://codeforces.com/problemset/problem/739/E" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>题目大意：</p>
<p>现在有$n$个神奇宝贝，而你有$a$个普通球和$b$个高级球</p>
<p>每个神奇宝贝可以用一个普通球或一个高级球或两个球同时使用，成功概率为$p[i]$,$u[i]$,$p[i]+u[i]−p[i]\times u[i]$</p>
<p>不能对一个神奇宝贝多次尝试捕捉，求期望最大捕捉数</p>
<hr>
<p>解析：</p>
<p>费用流建图即可</p>
<p>费用流复杂度好像是n^3</p>
<p>事实上n^3的dp过了……</p>
<p>注意：建图时要把边权乘上一个大常数，以避免小数带来的误差</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> chty=<span class="number">1000000</span>;<span class="comment">//常数</span></div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,w;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,A,B,S,T,IdA,IdB,IdC,cnt,ans,len(<span class="number">1</span>),Id[MAXN],Link[MAXN],dis[MAXN],flow[MAXN],vis[MAXN],LE[MAXN],LN[MAXN];</div><div class="line"><span class="keyword">double</span> P[MAXN],u[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].w=w;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;e[len].w=-w;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i) vis[i]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i) dis[i]=INF;</div><div class="line">	q.push(S);  vis[S]=<span class="number">1</span>;  dis[S]=<span class="number">0</span>;  flow[S]=INF;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front();  q.pop();  vis[x]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(dis[x]+e[i].w&lt;dis[e[i].y]&amp;&amp;e[i].v)&#123;</div><div class="line">			dis[e[i].y]=dis[x]+e[i].w;</div><div class="line">			flow[e[i].y]=min(flow[x],e[i].v);</div><div class="line">			LN[e[i].y]=x;  LE[e[i].y]=i;</div><div class="line">			<span class="keyword">if</span>(!vis[e[i].y])  vis[e[i].y]=<span class="number">1</span>,q.push(e[i].y);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(dis[T]==INF) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	ans-=flow[T]*dis[T];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=T;i!=S;i=LN[i]) e[LE[i]].v-=flow[T],e[LE[i]^<span class="number">1</span>].v+=flow[T];</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read();  A=read();  B=read();</div><div class="line">	S=++cnt;  T=++cnt;  IdA=++cnt;  IdB=++cnt;  IdC=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  Id[i]=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;P[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;u[i]);</div><div class="line">	insert(S,IdA,A,<span class="number">0</span>);  insert(S,IdB,B,<span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		insert(IdA,Id[i],<span class="number">1</span>,-P[i]*chty);</div><div class="line">		insert(IdB,Id[i],<span class="number">1</span>,-u[i]*chty);</div><div class="line">		insert(Id[i],IdC,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">		insert(Id[i],IdC,<span class="number">1</span>,P[i]*u[i]*chty);</div><div class="line">	&#125;</div><div class="line">	insert(IdC,T,INF,<span class="number">0</span>);</div><div class="line">	<span class="keyword">while</span>(spfa());</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.18lf\n"</span>,(<span class="keyword">double</span>)ans/chty);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 费用流 </tag>
            
            <tag> CF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【Codeforces】Rand#417解题报告]]></title>
      <url>/2017/06/05/%E3%80%90Codeforces%E3%80%91Rand-417%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<h3 id="Sagheer-and-Crossroads"><a href="#Sagheer-and-Crossroads" class="headerlink" title="Sagheer and Crossroads"></a>Sagheer and Crossroads</h3><p>if大判断即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> flag[<span class="number">10</span>],a[<span class="number">10</span>][<span class="number">10</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;++j)<span class="built_in">cin</span>&gt;&gt;a[i][j];</div><div class="line">	<span class="keyword">if</span>(a[<span class="number">1</span>][<span class="number">1</span>]||a[<span class="number">1</span>][<span class="number">2</span>]||a[<span class="number">1</span>][<span class="number">3</span>]||a[<span class="number">2</span>][<span class="number">1</span>]||a[<span class="number">3</span>][<span class="number">2</span>]||a[<span class="number">4</span>][<span class="number">3</span>]) flag[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(a[<span class="number">2</span>][<span class="number">1</span>]||a[<span class="number">2</span>][<span class="number">2</span>]||a[<span class="number">2</span>][<span class="number">3</span>]||a[<span class="number">3</span>][<span class="number">1</span>]||a[<span class="number">4</span>][<span class="number">2</span>]||a[<span class="number">1</span>][<span class="number">3</span>]) flag[<span class="number">2</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(a[<span class="number">3</span>][<span class="number">1</span>]||a[<span class="number">3</span>][<span class="number">2</span>]||a[<span class="number">3</span>][<span class="number">3</span>]||a[<span class="number">4</span>][<span class="number">1</span>]||a[<span class="number">1</span>][<span class="number">2</span>]||a[<span class="number">2</span>][<span class="number">3</span>]) flag[<span class="number">3</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(a[<span class="number">4</span>][<span class="number">1</span>]||a[<span class="number">4</span>][<span class="number">2</span>]||a[<span class="number">4</span>][<span class="number">3</span>]||a[<span class="number">1</span>][<span class="number">1</span>]||a[<span class="number">2</span>][<span class="number">2</span>]||a[<span class="number">3</span>][<span class="number">3</span>]) flag[<span class="number">4</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;++i) <span class="keyword">if</span>(a[i][<span class="number">4</span>]&amp;&amp;flag[i]) flag[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(flag[<span class="number">0</span>])  <span class="built_in">puts</span>(<span class="string">"YES"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="Sagheer-the-Hausmeister"><a href="#Sagheer-the-Hausmeister" class="headerlink" title="Sagheer the Hausmeister"></a>Sagheer the Hausmeister</h3><p>暴力搜索上楼顺序，赛场上写的dp居然挂了，死活过不去5555</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,maxx,ans,L[<span class="number">25</span>],R[<span class="number">25</span>];</div><div class="line"><span class="keyword">char</span> ch[<span class="number">25</span>][<span class="number">105</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> S)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">0</span>,ret=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxx;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(now==<span class="number">0</span>)   now=R[i],ret+=R[i];</div><div class="line">		<span class="keyword">else</span>         now=L[i],ret+=m+<span class="number">1</span>-L[i];</div><div class="line">		<span class="keyword">if</span>(i==maxx) <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;i)&amp;S) ret+=m+<span class="number">1</span>-now,now=m+<span class="number">1</span>;</div><div class="line">		<span class="keyword">else</span>         ret+=now,now=<span class="number">0</span>;</div><div class="line">		ret++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read();  m=read();  ans=INF;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;--i) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)L[i]=m+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=m+<span class="number">1</span>;++j)<span class="keyword">if</span>(ch[i][j]==<span class="string">'1'</span>)&#123;</div><div class="line">		cmin(L[i],j);</div><div class="line">		cmax(R[i],j);</div><div class="line">		maxx=i;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;(maxx+<span class="number">1</span>));++i)cmin(ans,solve(i));</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="Sagheer-and-Nubian-Market"><a href="#Sagheer-and-Nubian-Market" class="headerlink" title="Sagheer and Nubian Market"></a>Sagheer and Nubian Market</h3><p>本场比赛最水的题目，二分即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line">ll n,S,a[MAXN],b[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">get</span><span class="params">(ll mid)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i) b[i]=a[i]+mid*i;</div><div class="line">	sort(b+<span class="number">1</span>,b+n+<span class="number">1</span>);</div><div class="line">	ll ret=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=mid;++i)  ret+=b[i];</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll mid)</span></span>&#123;</div><div class="line">	ll ret=get(mid);</div><div class="line">	<span class="keyword">return</span> ret&lt;=S;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read();  S=read();</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</div><div class="line">	ll l=<span class="number">0</span>,r=n;</div><div class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</div><div class="line">		ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(check(mid)) l=mid;</div><div class="line">		<span class="keyword">else</span> r=mid;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(check(r)) <span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,r,get(r));</div><div class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,l,get(l));</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="Sagheer-and-Apple-Tree"><a href="#Sagheer-and-Apple-Tree" class="headerlink" title="Sagheer and Apple Tree"></a>Sagheer and Apple Tree</h3><p>阶梯博弈，后手必胜的条件是所有偶数层的异或和为0</p>
<p>随便维护一下就好了</p>
<p>注意特判当前状态已经合法的情况</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line">ll n,cnt,vout,ans,a[MAXN],f[MAXN],P[MAXN],st[MAXN],degree[MAXN],vis[<span class="number">10000100</span>];</div><div class="line"><span class="built_in">queue</span>&lt;ll&gt;q;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read();  <span class="built_in">memset</span>(P,<span class="number">-1</span>,<span class="keyword">sizeof</span>(P));</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=n;++i) f[i]=read(),degree[f[i]]++;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(degree[i]==<span class="number">0</span>)q.push(i),P[i]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		ll x=q.front(); q.pop();</div><div class="line">		<span class="keyword">if</span>(--degree[f[x]]==<span class="number">0</span>) q.push(f[x]);</div><div class="line">		P[f[x]]=P[x]^<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(P[i]==<span class="number">0</span>) st[++cnt]=a[i],ans^=a[i];</div><div class="line">		<span class="keyword">else</span> vis[a[i]]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</div><div class="line">		ll temp=ans^st[i];</div><div class="line">		<span class="keyword">if</span>(temp&gt;<span class="number">10000000</span>) <span class="keyword">continue</span>;</div><div class="line">		vout+=vis[temp];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(ans==<span class="number">0</span>) vout+=(cnt<span class="number">-1</span>)*cnt/<span class="number">2</span>+(n-cnt)*(n-cnt<span class="number">-1</span>)/<span class="number">2</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,vout);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 二分 </tag>
            
            <tag> 模拟 </tag>
            
            <tag> 博弈论 </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2338】数矩形]]></title>
      <url>/2017/05/29/2338/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>找矩形的方法是找对角线：两条长度相等且中点相同的线段</p>
<p>所以我们的做法就很显然了</p>
<p>处理出所有的线段，按照长度排序</p>
<p>然后求出所有矩形，更新面积即可</p>
<p>注意：不要用double，尽量避免精度误差</p>
<p>还有一定要用long long</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1510</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	ll x,y;</div><div class="line">	Point(ll a=<span class="number">0</span>,ll b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> ll p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> ll p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x==b.x&amp;&amp;y==b.y;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">Lenth</span><span class="params">(Point A)</span></span>&#123;<span class="keyword">return</span> Dot(A,A);&#125;<span class="comment">//避免精度误差，不开根号</span></div><div class="line"><span class="keyword">struct</span> Line&#123;</div><div class="line">	Point A,B,mid;  </div><div class="line">	ll len;</div><div class="line">	Line()&#123;&#125;</div><div class="line">	Line(Point A,Point B):A(A),B(B)&#123;mid=Point(A.x+B.x,A.y+B.y); len=Lenth(A-B);&#125;<span class="comment">//避免精度误差，不除以2</span></div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Line &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> mid==b.mid&amp;&amp;len==b.len;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Line &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> len&lt;b.len||(len==b.len&amp;&amp;mid&lt;b.mid);&#125;</div><div class="line">&#125;L[MAXN*MAXN];</div><div class="line">ll n,cnt,ans;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">"1.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;++j)L[++cnt]=Line(A[i],A[j]);</div><div class="line">	sort(L+<span class="number">1</span>,L+cnt+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&amp;&amp;L[i]==L[j];--j)</div><div class="line">		cmax(ans,<span class="built_in">abs</span>(Cross(L[i].A-L[j].A,L[i].B-L[j].A)));</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 计算几何 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1027】合金]]></title>
      <url>/2017/05/28/1027/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<ul>
<li>贴个题解：<a href="http://blog.csdn.net/popoqqq/article/details/40539273" target="_blank" rel="external">http://blog.csdn.net/popoqqq/article/details/40539273</a></li>
</ul>
<p>好有趣的题目</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 510</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">    <span class="keyword">double</span> x,y;</div><div class="line">    Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf%*lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">    <span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">    <span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">    <span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">    <span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">&#125;A[MAXN],B[MAXN];</div><div class="line"><span class="keyword">int</span> n,m,ans,f[MAXN][MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dcmp</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">fabs</span>(x)&lt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">return</span> x&lt;<span class="number">0</span>?<span class="number">-1</span>:<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m); ans=INF;  <span class="built_in">memset</span>(f,<span class="number">10</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) B[i].read();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</div><div class="line">        <span class="keyword">bool</span> flag=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=m;++k)&#123;</div><div class="line">            <span class="keyword">if</span>(dcmp(Cross(A[i]-B[k],A[j]-B[k]))&gt;<span class="number">0</span>)&#123;flag=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</div><div class="line">            <span class="keyword">if</span>(dcmp(Cross(A[i]-B[k],A[j]-B[k]))==<span class="number">0</span>&amp;&amp;dcmp(Dot(A[i]-B[k],A[j]-B[k]))&gt;<span class="number">0</span>)&#123;flag=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(flag) f[i][j]=<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;++k)<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">        cmin(f[i][j],f[i][k]+f[k][j]);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)cmin(ans,f[i][i]);</div><div class="line">    <span class="keyword">if</span>(ans&gt;n) <span class="built_in">puts</span>(<span class="string">"-1"</span>);</div><div class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 计算几何 </tag>
            
            <tag> floyed </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CF#8D】Two Friends]]></title>
      <url>/2017/05/28/CF-8D/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p>设$L1=t1+dis(A,B)$，$L2=t2+dis(A,C)+dis(B,C)$</p>
<p>如果$L1&gt;=dis(A,C)+dis(B,C)$，那么答案显然就是$min(L1,L2)$</p>
<p>否则，我们可以二分一个$mid$，设分离点为$P$</p>
<p>那么$mid$合法的条件如下：</p>
<blockquote>
<p>$dis(A,P)&lt;=mid$</p>
<p>$dis(B,P)+dis(B,C)+mid&lt;=L2$</p>
<p>$dis(C,P)+mid&lt;=L1$</p>
</blockquote>
<p>这实际上是三个圆</p>
<p>只需要判断这三个圆有没有公共部分即可</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define FILE "read"</div><div class="line">#define eps 1e-10</div><div class="line">#define INF 1e9</div><div class="line">using namespace std;</div><div class="line">const double pi=acos(-1);</div><div class="line">struct Point&#123;</div><div class="line">	double x,y;</div><div class="line">	Point(double a=0,double b=0):x(a),y(b)&#123;&#125;</div><div class="line">	inline void read()&#123;scanf("%lf%lf",&amp;x,&amp;y);&#125;</div><div class="line">	inline void print()&#123;printf("%.2lf %.2lf\n",x,y);&#125;</div><div class="line">	inline Point operator+(const Point &amp;b)&#123;return Point(x+b.x,y+b.y);&#125;</div><div class="line">	inline Point operator-(const Point &amp;b)&#123;return Point(x-b.x,y-b.y);&#125;</div><div class="line">	inline Point operator*(const double p)&#123;return Point(x*p,y*p);&#125;</div><div class="line">	inline Point operator/(const double p)&#123;return Point(x/p,y/p);&#125;</div><div class="line">	inline Point operator==(const Point &amp;b)&#123;return fabs(x-b.x)&lt;eps&amp;&amp;fabs(y-b.y)&lt;eps;&#125;</div><div class="line">	inline Point operator&lt; (const Point &amp;b)&#123;return x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">	inline double ang()&#123;return atan2(y,x);&#125;</div><div class="line">&#125;A,B,C;</div><div class="line">struct Interval&#123;</div><div class="line">	double l,r;</div><div class="line">	Interval(double a=0,double b=0):l(a),r(b)&#123;&#125;</div><div class="line">	inline bool In_Interval(double x)&#123;return x&gt;=l&amp;&amp;x&lt;=r;&#125;</div><div class="line">&#125;;</div><div class="line">struct Circle&#123;</div><div class="line">	Point O; double r; </div><div class="line">	Circle()&#123;&#125;</div><div class="line">	Circle(Point O,double r):O(O),r(r)&#123;&#125;</div><div class="line">	inline Point point(double rad)&#123;return Point(O.x+r*cos(rad),O.y+r*sin(rad));&#125;</div><div class="line">&#125;;</div><div class="line">double t1,t2,L1,L2;</div><div class="line">inline double Dot(Point A,Point B)&#123;return A.x*B.x+A.y*B.y;&#125;</div><div class="line">inline double Lenth(Point A)&#123;return sqrt(Dot(A,A));&#125;</div><div class="line">Interval Circle_Jiao(Circle c1,Circle c2)&#123;</div><div class="line">	double a=c1.r;</div><div class="line">	double b=c2.r;</div><div class="line">	double c=Lenth(c1.O-c2.O);</div><div class="line">	double temp=(c1.O-c2.O).ang();</div><div class="line">	double delta=acos((a*a+c*c-b*b)/(2*a*c));</div><div class="line">	return Interval(temp-delta,temp+delta);</div><div class="line">&#125;</div><div class="line">bool Separate(Circle c1,Circle c2)&#123;</div><div class="line">	return Lenth(c1.O-c2.O)&gt;c1.r+c2.r+eps;</div><div class="line">&#125;</div><div class="line">bool Contain(Circle c1,Circle c2)&#123;</div><div class="line">	return Lenth(c1.O-c2.O)&lt;fabs(c1.r-c2.r);</div><div class="line">&#125;</div><div class="line">bool Interval_Jiao(Interval l1,Interval l2)&#123;</div><div class="line">	return l1.In_Interval(l2.l)||l1.In_Interval(l2.r)||l2.In_Interval(l1.l)||l2.In_Interval(l1.r);</div><div class="line">&#125;</div><div class="line">bool Judge(Circle c1,Circle c2,Circle c3)&#123;</div><div class="line">	Interval l1=Circle_Jiao(c1,c2);</div><div class="line">	Interval l2=Circle_Jiao(c1,c3);</div><div class="line">	if(Interval_Jiao(l1,l2)) return 1;</div><div class="line">	return 0;</div><div class="line">&#125;</div><div class="line">bool check(double mid)&#123;</div><div class="line">	Circle c1(A,mid);</div><div class="line">	Circle c2(B,L1-mid);</div><div class="line">	Circle c3(C,L2-Lenth(B-C)-mid);</div><div class="line">	if(Separate(c1,c2)||Separate(c1,c3)||Separate(c2,c3)) return 0;</div><div class="line">	if(Contain(c1,c2)||Contain(c1,c3)||Contain(c2,c3))  return 1;</div><div class="line">	if(Judge(c1,c2,c3)||Judge(c2,c1,c3)||Judge(c3,c1,c2)) return 1;</div><div class="line">	return 0;</div><div class="line">&#125;</div><div class="line">void solve()&#123;</div><div class="line">	double l=0,r=min(L1,L2-Lenth(B-C));</div><div class="line">	while(l+eps&lt;r)&#123;</div><div class="line">		double mid=(l+r)/2;</div><div class="line">		if(check(mid)) l=mid;</div><div class="line">		else r=mid;</div><div class="line">	&#125;</div><div class="line">	printf("%.10lf\n",check(r)?r:l);</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	freopen(FILE".in","r",stdin);</div><div class="line">	freopen(FILE".out","w",stdout);</div><div class="line">	scanf("%lf%lf",&amp;t2,&amp;t1);</div><div class="line">	A.read();  B.read();  C.read();</div><div class="line">	L1=t1+Lenth(A-B);</div><div class="line">	L2=t2+Lenth(A-C)+Lenth(B-C);</div><div class="line">	if(L1&gt;=Lenth(A-C)+Lenth(B-C)) printf("%.10lf\n",min(L1,L2));</div><div class="line">	else solve();</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 计算几何 </tag>
            
            <tag> 二分 </tag>
            
            <tag> CF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3630】镜面通道]]></title>
      <url>/2017/05/28/3630/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>根据物理上的费马小定理，只要水能通过，光就能通过</p>
<p>所以我们的做法就很显然了</p>
<p>如果两个图形相交，就连一条边</p>
<p>问题就成了删去最少的点使得S与T不连通</p>
<p>拆点最小割即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> opt,x,y,r,x1,y1,x2,y2;&#125;A[MAXN];</div><div class="line"><span class="keyword">struct</span> edge&#123;<span class="keyword">int</span> y,next,v;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,C,R,len(<span class="number">1</span>),S,T,cnt,Link[MAXN],In[MAXN],Out[MAXN],level[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">    e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">    e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">Lenth</span><span class="params">(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> opt=A[i].opt+A[j].opt;</div><div class="line">    <span class="keyword">if</span>(opt==<span class="number">2</span>) <span class="keyword">return</span> Lenth(A[i].x,A[i].y,A[j].x,A[j].y)&lt;=A[i].r+A[j].r?<span class="number">1</span>:<span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span>(opt==<span class="number">3</span>)&#123;</div><div class="line">        <span class="keyword">if</span>(A[i].opt==<span class="number">1</span>) swap(i,j);</div><div class="line">        <span class="keyword">if</span>(Lenth(A[i].x1,A[i].y1,A[j].x,A[j].y)&lt;=A[j].r) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(Lenth(A[i].x1,A[i].y2,A[j].x,A[j].y)&lt;=A[j].r) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(Lenth(A[i].x2,A[i].y1,A[j].x,A[j].y)&lt;=A[j].r) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(Lenth(A[i].x2,A[i].y2,A[j].x,A[j].y)&lt;=A[j].r) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(A[i].x1&lt;A[j].x&amp;&amp;A[i].x2&gt;A[j].x&amp;&amp;(<span class="built_in">abs</span>(A[i].y1-A[j].y)&lt;=A[j].r||<span class="built_in">abs</span>(A[i].y2-A[j].y)&lt;=A[j].r)) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(A[i].y1&lt;A[j].y&amp;&amp;A[i].y2&gt;A[j].y&amp;&amp;(<span class="built_in">abs</span>(A[i].x1-A[j].x)&lt;=A[j].r||<span class="built_in">abs</span>(A[i].x2-A[j].x)&lt;=A[j].r)) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(A[i].x1&lt;=A[j].x&amp;&amp;A[i].x2&gt;=A[j].x&amp;&amp;A[i].y1&lt;=A[j].y&amp;&amp;A[i].y2&gt;=A[j].y) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(opt==<span class="number">4</span>)&#123;</div><div class="line">        <span class="keyword">if</span>(A[j].x1&gt;=A[i].x1&amp;&amp;A[j].x1&lt;=A[i].x2&amp;&amp;A[j].y1&gt;=A[i].y1&amp;&amp;A[j].y1&lt;=A[i].y2) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(A[j].x1&gt;=A[i].x1&amp;&amp;A[j].x1&lt;=A[i].x2&amp;&amp;A[j].y2&gt;=A[i].y1&amp;&amp;A[j].y2&lt;=A[i].y2) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(A[j].x2&gt;=A[i].x1&amp;&amp;A[j].x2&lt;=A[i].x2&amp;&amp;A[j].y1&gt;=A[i].y1&amp;&amp;A[j].y1&lt;=A[i].y2) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(A[j].x2&gt;=A[i].x1&amp;&amp;A[j].x2&lt;=A[i].x2&amp;&amp;A[j].y2&gt;=A[i].y1&amp;&amp;A[j].y2&lt;=A[i].y2) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        swap(i,j);</div><div class="line">        <span class="keyword">if</span>(A[j].x1&gt;=A[i].x1&amp;&amp;A[j].x1&lt;=A[i].x2&amp;&amp;A[j].y1&gt;=A[i].y1&amp;&amp;A[j].y1&lt;=A[i].y2) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(A[j].x1&gt;=A[i].x1&amp;&amp;A[j].x1&lt;=A[i].x2&amp;&amp;A[j].y2&gt;=A[i].y1&amp;&amp;A[j].y2&lt;=A[i].y2) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(A[j].x2&gt;=A[i].x1&amp;&amp;A[j].x2&lt;=A[i].x2&amp;&amp;A[j].y1&gt;=A[i].y1&amp;&amp;A[j].y1&lt;=A[i].y2) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span>(A[j].x2&gt;=A[i].x1&amp;&amp;A[j].x2&lt;=A[i].x2&amp;&amp;A[j].y2&gt;=A[i].y1&amp;&amp;A[j].y2&lt;=A[i].y2) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">    q.push(S); level[S]=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">        <span class="keyword">int</span> x=q.front(); q.pop();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)&#123;</div><div class="line">            level[e[i].y]=level[x]+<span class="number">1</span>; q.push(e[i].y);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(x==T) <span class="keyword">return</span> flow;</div><div class="line">    <span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">        <span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">            <span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(flow-maxflow,e[i].v)))&#123;</div><div class="line">                e[i].v-=d; e[i^<span class="number">1</span>].v+=d; maxflow+=d;</div><div class="line">            &#125;</div><div class="line">    <span class="keyword">if</span>(!maxflow) level[x]=<span class="number">-1</span>;</div><div class="line">    <span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">    C=read();  R=read();</div><div class="line">    n=read(); S=++cnt;  T=++cnt;</div><div class="line">    A[<span class="number">0</span>]=(node)&#123;<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,R,C,R&#125;;</div><div class="line">    A[n+<span class="number">1</span>]=(node)&#123;<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,C,<span class="number">0</span>&#125;;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        In[i]=++cnt;</div><div class="line">        Out[i]=++cnt;</div><div class="line">        insert(In[i],Out[i],<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        <span class="keyword">int</span> opt=read();</div><div class="line">        <span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;</div><div class="line">            <span class="keyword">int</span> x=read(),y=read(),r=read();</div><div class="line">            A[i]=(node)&#123;opt,x,y,r,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">int</span> x1=read(),y1=read(),x2=read(),y2=read();</div><div class="line">            A[i]=(node)&#123;opt,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,x1,y1,x2,y2&#125;;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;++j) <span class="keyword">if</span>(check(i,j)) insert(Out[i],In[j],INF),insert(Out[j],In[i],INF);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(check(<span class="number">0</span>,i)) insert(S,In[i],INF);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(check(i,n+<span class="number">1</span>)) insert(Out[i],T,INF);</div><div class="line">    <span class="keyword">int</span> d=<span class="number">0</span>,ans=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans+=d;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 计算几何 </tag>
            
            <tag> 网络流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【NOI2014】随机数生成器]]></title>
      <url>/2017/05/28/3671/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>NOI居然有这么水的题目</p>
<p>按照题目要求生成地图之后，从小到大枚举数，判断能不能选并更新每行选数的范围</p>
<p>注意此题卡空间，只够开2个5000*5000的数组，所以要循环利用</p>
<p>时间复杂度$O(n^2)$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 5010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,m,Q,Up[MAXN],Dn[MAXN],ans[MAXN*<span class="number">2</span>],x[MAXN*MAXN],T[MAXN*MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(i&lt;a) cmin(Up[i],b);</div><div class="line">        <span class="keyword">if</span>(i&gt;a) cmax(Dn[i],b);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    x[<span class="number">0</span>]=read(); ll a=read(),b=read(),c=read(),d=read();</div><div class="line">    n=read();  m=read();  Q=read();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) Up[i]=m;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m;++i)&#123;</div><div class="line">        x[i]=x[i<span class="number">-1</span>]*(a*x[i<span class="number">-1</span>]+b)%d+c;</div><div class="line">        x[i]%=d;</div><div class="line">        T[i]=i;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m;++i) swap(T[i],T[(x[i]%i)+<span class="number">1</span>]);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Q;++i)&#123;</div><div class="line">        <span class="keyword">int</span> u=read(),v=read();</div><div class="line">        swap(T[u],T[v]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m;++i) x[T[i]]=i;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m;++i)&#123;</div><div class="line">        <span class="keyword">int</span> a=x[i]/m,b=x[i]%m;</div><div class="line">        <span class="keyword">if</span>(x[i]%m) a++;</div><div class="line">        <span class="keyword">if</span>(!b) b+=m;</div><div class="line">        <span class="keyword">if</span>(b&lt;=Up[a]&amp;&amp;b&gt;=Dn[a])&#123;</div><div class="line">            updata(a,b);</div><div class="line">            ans[++ans[<span class="number">0</span>]]=i;</div><div class="line">            <span class="keyword">if</span>(ans[<span class="number">0</span>]==n+m<span class="number">-1</span>) <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ans[<span class="number">0</span>];++i)&#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans[i]);</div><div class="line">        <span class="keyword">if</span>(i!=ans[<span class="number">0</span>]) <span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【Codeforces】Rand#416解题报告]]></title>
      <url>/2017/05/28/%E3%80%90Codeforces%E3%80%91Rand416%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<h3 id="Vladik-and-Courtesy"><a href="#Vladik-and-Courtesy" class="headerlink" title="Vladik and Courtesy"></a>Vladik and Courtesy</h3><p>题目大意：给你两个数A、B，和一个计数器cnt，cnt初始值为1，A、B轮流减去cnt，且cnt每减一次后加1，问A、B谁先为负</p>
<p>分析：直接模拟即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	<span class="keyword">int</span> A,B;  <span class="built_in">cin</span>&gt;&gt;A&gt;&gt;B;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(i&amp;<span class="number">1</span>)  A-=i;</div><div class="line">		<span class="keyword">else</span>     B-=i;</div><div class="line">		<span class="keyword">if</span>(A&lt;<span class="number">0</span>) &#123;<span class="built_in">puts</span>(<span class="string">"Vladik"</span>); <span class="keyword">break</span>;&#125;</div><div class="line">		<span class="keyword">if</span>(B&lt;<span class="number">0</span>) &#123;<span class="built_in">puts</span>(<span class="string">"Valera"</span>); <span class="keyword">break</span>;&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="Vladik-and-Complicated-Book"><a href="#Vladik-and-Complicated-Book" class="headerlink" title="Vladik and Complicated Book"></a>Vladik and Complicated Book</h3><p>题目大意：给你一个序列，每次讲[l,r]排序，问第x个数是否发生变化</p>
<p>分析：每次统计[l,r]内比a[x]小的数的个数，然后判断一下就好了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">int</span> n,m,a[<span class="number">10010</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> l=read(),r=read(),x=read();</div><div class="line">		<span class="keyword">int</span> temp=a[x],cnt=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=l;j&lt;=r;++j) <span class="keyword">if</span>(a[j]&lt;=temp) ++cnt;</div><div class="line">		<span class="keyword">if</span>(cnt==x-l+<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</div><div class="line">		<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="Vladik-and-Memorable-Trip"><a href="#Vladik-and-Memorable-Trip" class="headerlink" title="Vladik and Memorable Trip"></a>Vladik and Memorable Trip</h3><p>题目大意：给你一个序列，要求你用满足以下条件的子序列去覆盖它：</p>
<p>1、子序列不能相交</p>
<p>2、所有相同的数必须在同一个子序列中，或者不选他们</p>
<p>3、所有子序列的异或之和最大（一个子序列中，相同的数只异或一次）</p>
<p>求最大的子序列的和</p>
<p>分析：先预处理出每个数的开头位置和结束位置，然后dp解决</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 5010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,a[MAXN],L[MAXN],R[MAXN],vis[MAXN],f[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!L[a[i]])  L[a[i]]=i;</div><div class="line">		cmax(R[a[i]],i);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		f[i]=f[i<span class="number">-1</span>];  <span class="keyword">int</span> temp=<span class="number">0</span>;</div><div class="line">		<span class="keyword">int</span> l=i,r=i;  <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j;--j)&#123;</div><div class="line">			cmin(l,L[a[j]]);</div><div class="line">			cmax(r,R[a[j]]);</div><div class="line">			<span class="keyword">if</span>(!vis[a[j]])  temp^=a[j],vis[a[j]]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(l&gt;=j&amp;&amp;r&lt;=i) cmax(f[i],f[j<span class="number">-1</span>]+temp);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[n]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="Vladik-and-Favorite-Game"><a href="#Vladik-and-Favorite-Game" class="headerlink" title="Vladik and Favorite Game"></a>Vladik and Favorite Game</h3><p>题目大意：给你一张地图，你需要找到一条从(1,1)到终点的路径并输出</p>
<p>分析：此题为交互题，按钮的功能可能改变，你需要去试出按钮的功能，然后决定路径</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; pii;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">char</span> D[<span class="number">5</span>]=&#123;<span class="string">'R'</span>,<span class="string">'D'</span>,<span class="string">'L'</span>,<span class="string">'U'</span>&#125;;</div><div class="line"><span class="keyword">int</span> n,m,dis[<span class="number">105</span>][<span class="number">105</span>];</div><div class="line"><span class="keyword">char</span> ch[<span class="number">105</span>][<span class="number">105</span>];</div><div class="line"><span class="built_in">queue</span>&lt;pii&gt;q;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front().first,y=q.front().second; q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;++k)&#123;</div><div class="line">			<span class="keyword">int</span> xx=x+dx[k],yy=y+dy[k];</div><div class="line">			<span class="keyword">if</span>(xx&lt;=<span class="number">0</span>||yy&lt;=<span class="number">0</span>||xx&gt;n||yy&gt;m||ch[xx][yy]==<span class="string">'*'</span>||dis[xx][yy]) <span class="keyword">continue</span>;</div><div class="line">			dis[xx][yy]=dis[x][y]+<span class="number">1</span>;  q.push(make_pair(xx,yy));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> temp;</div><div class="line">	<span class="keyword">if</span>(ch[x][y]==<span class="string">'F'</span>) <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;++k)&#123;</div><div class="line">		<span class="keyword">int</span> xx=x+dx[k],yy=y+dy[k];</div><div class="line">		<span class="keyword">if</span>(dis[xx][yy]+<span class="number">1</span>==dis[x][y]) &#123;temp=k; <span class="keyword">break</span>;&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%c\n"</span>,D[temp]);</div><div class="line">	fflush(<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> a,b;  <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</div><div class="line">	<span class="keyword">if</span>(a==x+dx[temp]&amp;&amp;b==y+dy[temp]) dfs(a,b);</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">if</span>(temp==<span class="number">0</span>||temp==<span class="number">2</span>) swap(D[<span class="number">0</span>],D[<span class="number">2</span>]);</div><div class="line">		<span class="keyword">if</span>(temp==<span class="number">1</span>||temp==<span class="number">3</span>) swap(D[<span class="number">1</span>],D[<span class="number">3</span>]);</div><div class="line">		dfs(a,b);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch[i]+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)<span class="keyword">if</span>(ch[i][j]==<span class="string">'F'</span>)&#123;</div><div class="line">		q.push(make_pair(i,j)); dis[i][j]=<span class="number">1</span>; bfs();</div><div class="line">	&#125;</div><div class="line">	dfs(<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="Vladik-and-Entertaining-Flags"><a href="#Vladik-and-Entertaining-Flags" class="headerlink" title="Vladik and Entertaining Flags"></a>Vladik and Entertaining Flags</h3><p>题目大意：看样例解释就能看懂</p>
<p>分析：直接上线段树就行了，但是不太好写的样子</p>
<p>注意区间合并时用并查集维护连通性</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,Q,cnt,f[MAXN*<span class="number">20</span>],A[<span class="number">15</span>][MAXN];</div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">	<span class="keyword">int</span> sum,L,R,l[<span class="number">15</span>],r[<span class="number">15</span>];</div><div class="line">	node()&#123;sum=<span class="number">0</span>;&#125;</div><div class="line">&#125;tr[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> f[x]==x?x:f[x]=find(f[x]);&#125;</div><div class="line"><span class="keyword">inline</span> node <span class="keyword">operator</span> +(node a,node b)&#123;</div><div class="line">	<span class="keyword">if</span>(!a.sum) <span class="keyword">return</span> b;</div><div class="line">	<span class="keyword">if</span>(!b.sum) <span class="keyword">return</span> a;</div><div class="line">	node c;  c.sum=a.sum+b.sum;  </div><div class="line">	c.L=a.L;  c.R=b.R;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		f[a.l[i]]=a.l[i];</div><div class="line">		f[a.r[i]]=a.r[i];</div><div class="line">		f[b.l[i]]=b.l[i];</div><div class="line">		f[b.r[i]]=b.r[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(A[i][a.R]==A[i][b.L])&#123;</div><div class="line">		<span class="keyword">int</span> p=find(a.r[i]),q=find(b.l[i]);</div><div class="line">		<span class="keyword">if</span>(p==q) <span class="keyword">continue</span>;</div><div class="line">		c.sum--;  f[p]=q;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		c.l[i]=find(a.l[i]);</div><div class="line">		c.r[i]=find(b.r[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">			<span class="keyword">if</span>(A[i][l]==A[i<span class="number">-1</span>][l]) tr[p].l[i]=tr[p].r[i]=tr[p].l[i<span class="number">-1</span>];</div><div class="line">			<span class="keyword">else</span> tr[p].l[i]=tr[p].r[i]=++cnt,tr[p].sum++;</div><div class="line">		&#125;</div><div class="line">		tr[p].L=l;  tr[p].R=r;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid); build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">	tr[p]=tr[p&lt;&lt;<span class="number">1</span>]+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</div><div class="line">&#125;</div><div class="line"><span class="function">node <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  <span class="keyword">return</span> tr[p];</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;  node ret;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) ret=ret+query(p&lt;&lt;<span class="number">1</span>,l,mid,x,y);</div><div class="line">	<span class="keyword">if</span>(y&gt;mid)  ret=ret+query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read(); m=read(); Q=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)A[i][j]=read();</div><div class="line">	build(<span class="number">1</span>,<span class="number">1</span>,m);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Q;++i)&#123;</div><div class="line">		<span class="keyword">int</span> l=read(),r=read();</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(<span class="number">1</span>,<span class="number">1</span>,m,l,r).sum);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> dp </tag>
            
            <tag> 模拟 </tag>
            
            <tag> CF </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【NOI2014】购票]]></title>
      <url>/2017/05/27/7/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>首先推出状态转移方程：f[y]=f[x]+(dis[y]-dis[x])*p[y]+q[y]</p>
<p>然后这玩意可以斜率优化</p>
<p>我能说这道题是斜率优化上树吗？</p>
<p>然后用树分治解决</p>
<p>我感觉这玩意算得上是中序树分治</p>
<p>反正比以前写的后序树分治要奇怪</p>
<p>然后分治时维护斜率的凸包，更新答案时二分查找即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	ll dis,f;</div><div class="line">	Point(ll a=<span class="number">0</span>,ll b=<span class="number">0</span>):dis(a),f(b)&#123;&#125;</div><div class="line">&#125;st[MAXN];</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;ll v;<span class="keyword">bool</span> flag;&#125;e[MAXN];</div><div class="line"><span class="keyword">int</span> n,opt,cg,top,len,fa[MAXN],Link[MAXN],cnt[MAXN],size[MAXN],F[MAXN];</div><div class="line">ll p[MAXN],q[MAXN],lim[MAXN],dis[MAXN],f[MAXN];</div><div class="line"><span class="keyword">double</span> slop[MAXN];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,ll v)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;&#125;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">Slop</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> (<span class="keyword">double</span>)(A.f-B.f)/(A.dis-B.dis);&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> dis[x]-lim[x]&gt;dis[y]-lim[y];&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="function">Point <span class="title">A</span><span class="params">(dis[x],f[x])</span></span>;</div><div class="line">	<span class="keyword">double</span> s=top?Slop(A,st[top]):<span class="number">1e18</span>;</div><div class="line">	<span class="keyword">while</span>(top&gt;<span class="number">1</span>&amp;&amp;s&gt;=slop[top]) s=Slop(A,st[--top]);</div><div class="line">	st[++top]=A;</div><div class="line">	slop[top]=s;</div><div class="line">&#125;</div><div class="line"><span class="function">Point <span class="title">find</span><span class="params">(<span class="keyword">double</span> s)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> l=<span class="number">1</span>,r=top,temp;</div><div class="line">	<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(slop[mid]&gt;=s) temp=mid,l=mid+<span class="number">1</span>;</div><div class="line">		<span class="keyword">else</span> r=mid<span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> st[temp];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)&#123;</div><div class="line">		dis[e[i].y]=dis[x]+e[i].v;</div><div class="line">		dfs(e[i].y);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">getcg</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> Size,<span class="keyword">int</span> &amp;cg)</span></span>&#123;</div><div class="line">	size[x]=<span class="number">1</span>;  F[x]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(!e[i].flag)&#123;</div><div class="line">		getcg(e[i].y,Size,cg);</div><div class="line">		size[x]+=size[e[i].y];</div><div class="line">		cmax(F[x],size[e[i].y]);</div><div class="line">	&#125;</div><div class="line">	cmax(F[x],Size-size[x]);</div><div class="line">	<span class="keyword">if</span>(F[x]&lt;=F[cg])  cg=x;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">getpoints</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	cnt[++cnt[<span class="number">0</span>]]=x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(!e[i].flag) getpoints(e[i].y);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> root,<span class="keyword">int</span> Size)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(Size==<span class="number">1</span>) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">int</span> cg=<span class="number">0</span>; getcg(root,Size,cg);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[cg];i;i=e[i].next)e[i].flag=<span class="number">1</span>;</div><div class="line">	solve(root,Size-size[cg]+<span class="number">1</span>);</div><div class="line">	cnt[<span class="number">0</span>]=<span class="number">0</span>; top=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[cg];i;i=e[i].next)getpoints(e[i].y);</div><div class="line">	sort(cnt+<span class="number">1</span>,cnt+cnt[<span class="number">0</span>]+<span class="number">1</span>,cmp);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=cg;i&lt;=cnt[<span class="number">0</span>];++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=cnt[i];</div><div class="line">		<span class="keyword">while</span>(j!=fa[root]&amp;&amp;dis[j]&gt;=dis[x]-lim[x]) add(j),j=fa[j];</div><div class="line">		<span class="keyword">if</span>(top)&#123;</div><div class="line">			Point y=find(p[x]);</div><div class="line">			cmin(f[x],y.f+(dis[x]-y.dis)*p[x]+q[x]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[cg];i;i=e[i].next)  solve(e[i].y,size[e[i].y]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  opt=read();  F[<span class="number">0</span>]=<span class="number">1e9</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</div><div class="line">		ll x=read(),v=read(); insert(x,i,v);</div><div class="line">		fa[i]=x;  p[i]=read();  q[i]=read();  lim[i]=read();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) f[i]=<span class="number">1e18</span>;</div><div class="line">	f[<span class="number">1</span>]=<span class="number">0</span>;  dfs(<span class="number">1</span>);   solve(<span class="number">1</span>,n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,f[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 斜率优化 </tag>
            
            <tag> 凸包 </tag>
            
            <tag> 点分治 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【51nod1804】小C的多边形]]></title>
      <url>/2017/05/26/1804/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>首先我们发现所以三角形的边权之和是$\frac{3n(n+1)}{2}$</p>
<p>那么每个三角形的边权之和就是$\frac{3(n+1)}{2}$</p>
<p>显然，n必须是奇数时才有解</p>
<p>我们采用这样的方法构造：先给内部的边钦定权值</p>
<p>每隔一条边权值相差1</p>
<p>然后根据总权值计算外边的边权</p>
<p>人生第一道自己yy出来的构造题，好开心啊</p>
<p>吐槽一下：为什么cout比printf快</p>
<p>我用printf居然超时了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> cnt,a[MAXN],b[MAXN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d\n"</span>,&amp;n); n--;</div><div class="line">	<span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)  &#123;<span class="built_in">puts</span>(<span class="string">"0"</span>);  <span class="keyword">return</span> <span class="number">0</span>;&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i+=<span class="number">2</span>) b[i]=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i+=<span class="number">2</span>) b[i]=++cnt;</div><div class="line">	b[n+<span class="number">1</span>]=b[<span class="number">1</span>]; <span class="keyword">int</span> sum=(n+<span class="number">1</span>)*<span class="number">3</span>/<span class="number">2</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=sum-b[i]-b[i+<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">cout</span>&lt;&lt;a[i]&lt;&lt;<span class="string">' '</span>; <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">cout</span>&lt;&lt;b[i]&lt;&lt;<span class="string">' '</span>; <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> 构造 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【清华集训2015】V]]></title>
      <url>/2017/05/26/164/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>思路很妙的一道题</p>
<p>我们定义一种新的标记：(a,b)表示先加上a后对b取max</p>
<p>那么两个标记(a,b)(c,d)的合并就是(a+c,max(b+c,d))</p>
<p>然后就是维护历史最大值那一套理论</p>
<p>用pair维护标记很爽啊</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt; pii;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF (ll)1e18</span></div><div class="line">pii A[MAXN&lt;&lt;<span class="number">2</span>],B[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)  &#123;A[p].first=A[p].second=B[p].first=B[p].second=read(); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid); </div><div class="line">	build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">&#125;</div><div class="line"><span class="function">pii <span class="title">merge</span><span class="params">(pii A,pii B)</span></span>&#123;</div><div class="line">	ll a=A.first,b=A.second,c=B.first,d=B.second;</div><div class="line">	<span class="keyword">return</span> make_pair(max(a+c,-INF),max(b+c,d));</div><div class="line">&#125;</div><div class="line"><span class="function">pii <span class="title">getmax</span><span class="params">(pii A,pii B)</span></span>&#123;</div><div class="line">	ll a=A.first,b=A.second,c=B.first,d=B.second;</div><div class="line">	<span class="keyword">return</span> make_pair(max(a,c),max(b,d));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	B[p&lt;&lt;<span class="number">1</span>]=getmax(B[p&lt;&lt;<span class="number">1</span>],merge(A[p&lt;&lt;<span class="number">1</span>],B[p]));</div><div class="line">	B[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]=getmax(B[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>],merge(A[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>],B[p]));</div><div class="line">	A[p&lt;&lt;<span class="number">1</span>]=merge(A[p&lt;&lt;<span class="number">1</span>],A[p]);</div><div class="line">	A[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]=merge(A[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>],A[p]);</div><div class="line">	A[p]=make_pair(<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">	B[p]=make_pair(<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,pii v)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</div><div class="line">		A[p]=merge(A[p],v);</div><div class="line">		B[p]=getmax(B[p],A[p]);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,v);  </div><div class="line">	<span class="keyword">if</span>(y&gt;mid)  updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,v);</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> opt)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">4</span>) <span class="keyword">return</span> max(A[p].first,A[p].second);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">return</span> max(B[p].first,B[p].second);</div><div class="line">	&#125;</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) <span class="keyword">return</span> query(p&lt;&lt;<span class="number">1</span>,l,mid,x,opt);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,opt);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  build(<span class="number">1</span>,<span class="number">1</span>,n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> opt=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">int</span> l=read(),r=read(),x=read();</div><div class="line">			updata(<span class="number">1</span>,<span class="number">1</span>,n,l,r,make_pair(x,-INF));</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>)&#123;</div><div class="line">			<span class="keyword">int</span> l=read(),r=read(),x=read();</div><div class="line">			updata(<span class="number">1</span>,<span class="number">1</span>,n,l,r,make_pair(-x,<span class="number">0</span>));</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">3</span>)&#123;</div><div class="line">			<span class="keyword">int</span> l=read(),r=read(),x=read();</div><div class="line">			updata(<span class="number">1</span>,<span class="number">1</span>,n,l,r,make_pair(-INF,x));</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> x=read();</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(<span class="number">1</span>,<span class="number">1</span>,n,x,opt));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> uoj </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【tyvj1518】CPU监控]]></title>
      <url>/2017/05/26/1518/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>有关线段树历史最大值的题目</p>
<p>具体做法参照吉司机的论文</p>
<p>居然1A了，好开心啊</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> v[<span class="number">2</span>],delta[<span class="number">2</span>],cover[<span class="number">2</span>];&#125;tr[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">relord</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	tr[p].v[<span class="number">0</span>]=max(tr[p&lt;&lt;<span class="number">1</span>].v[<span class="number">0</span>],tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].v[<span class="number">0</span>]);</div><div class="line">	cmax(tr[p].v[<span class="number">1</span>],tr[p&lt;&lt;<span class="number">1</span>].v[<span class="number">1</span>]);</div><div class="line">	cmax(tr[p].v[<span class="number">1</span>],tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].v[<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> value)</span></span>&#123;</div><div class="line">	cmax(tr[p].v[<span class="number">1</span>],tr[p].v[<span class="number">0</span>]+=value);</div><div class="line">	<span class="keyword">if</span>(tr[p].cover[<span class="number">0</span>]!=(<span class="number">1</span>&lt;&lt;<span class="number">31</span>)) cmax(tr[p].cover[<span class="number">1</span>],tr[p].cover[<span class="number">0</span>]+=value);</div><div class="line">	<span class="keyword">else</span> cmax(tr[p].delta[<span class="number">1</span>],tr[p].delta[<span class="number">0</span>]+=value);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">cov</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> value)</span></span>&#123;</div><div class="line">	cmax(tr[p].cover[<span class="number">1</span>],tr[p].cover[<span class="number">0</span>]=value);</div><div class="line">	cmax(tr[p].v[<span class="number">1</span>],tr[p].v[<span class="number">0</span>]=value);</div><div class="line">	tr[p].delta[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">his_add</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> value)</span></span>&#123;</div><div class="line">	cmax(tr[p].v[<span class="number">1</span>],tr[p].v[<span class="number">0</span>]+value);</div><div class="line">	<span class="keyword">if</span>(tr[p].cover[<span class="number">0</span>]!=(<span class="number">1</span>&lt;&lt;<span class="number">31</span>)) cmax(tr[p].cover[<span class="number">1</span>],tr[p].cover[<span class="number">0</span>]+value);</div><div class="line">	<span class="keyword">else</span> cmax(tr[p].delta[<span class="number">1</span>],tr[p].delta[<span class="number">0</span>]+value);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">his_cov</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> value)</span></span>&#123;</div><div class="line">	cmax(tr[p].cover[<span class="number">1</span>],value);</div><div class="line">	cmax(tr[p].v[<span class="number">1</span>],value);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(tr[p].delta[<span class="number">1</span>])&#123;</div><div class="line">		his_add(p&lt;&lt;<span class="number">1</span>,tr[p].delta[<span class="number">1</span>]);</div><div class="line">		his_add(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,tr[p].delta[<span class="number">1</span>]);</div><div class="line">		tr[p].delta[<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(tr[p].cover[<span class="number">1</span>]!=(<span class="number">1</span>&lt;&lt;<span class="number">31</span>))&#123;</div><div class="line">		his_cov(p&lt;&lt;<span class="number">1</span>,tr[p].cover[<span class="number">1</span>]);</div><div class="line">		his_cov(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,tr[p].cover[<span class="number">1</span>]);</div><div class="line">		tr[p].cover[<span class="number">1</span>]=(<span class="number">1</span>&lt;&lt;<span class="number">31</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(tr[p].delta[<span class="number">0</span>])&#123;</div><div class="line">		add(p&lt;&lt;<span class="number">1</span>,tr[p].delta[<span class="number">0</span>]);</div><div class="line">		add(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,tr[p].delta[<span class="number">0</span>]);</div><div class="line">		tr[p].delta[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(tr[p].cover[<span class="number">0</span>]!=(<span class="number">1</span>&lt;&lt;<span class="number">31</span>))&#123;</div><div class="line">		cov(p&lt;&lt;<span class="number">1</span>,tr[p].cover[<span class="number">0</span>]);</div><div class="line">		cov(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,tr[p].cover[<span class="number">0</span>]);</div><div class="line">		tr[p].cover[<span class="number">0</span>]=(<span class="number">1</span>&lt;&lt;<span class="number">31</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	tr[p].cover[<span class="number">0</span>]=tr[p].cover[<span class="number">1</span>]=tr[p].v[<span class="number">1</span>]=(<span class="number">1</span>&lt;&lt;<span class="number">31</span>);</div><div class="line">	<span class="keyword">if</span>(l==r) &#123;tr[p].v[<span class="number">0</span>]=tr[p].v[<span class="number">1</span>]=read(); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid); build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask_max</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l) <span class="keyword">return</span> (<span class="number">1</span>&lt;&lt;<span class="number">31</span>);</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) <span class="keyword">return</span> tr[p].v[<span class="number">0</span>];</div><div class="line">	pushdown(p);  </div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">return</span> max(ask_max(p&lt;&lt;<span class="number">1</span>,l,mid,x,y),ask_max(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask_his_max</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l) <span class="keyword">return</span> (<span class="number">1</span>&lt;&lt;<span class="number">31</span>);</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) <span class="keyword">return</span> tr[p].v[<span class="number">1</span>];</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">return</span> max(ask_his_max(p&lt;&lt;<span class="number">1</span>,l,mid,x,y),ask_his_max(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata1</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> value)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) &#123;add(p,value); <span class="keyword">return</span>;&#125;</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	updata1(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,value); updata1(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,value);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata2</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> value)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) &#123;cov(p,value); <span class="keyword">return</span>;&#125;</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	updata2(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,value); updata2(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,value);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  build(<span class="number">1</span>,<span class="number">1</span>,n);</div><div class="line">	m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">char</span> ch[<span class="number">5</span>]; <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch); <span class="keyword">int</span> l=read(),r=read();</div><div class="line">		<span class="keyword">if</span>(ch[<span class="number">0</span>]==<span class="string">'Q'</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ask_max(<span class="number">1</span>,<span class="number">1</span>,n,l,r));</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(ch[<span class="number">0</span>]==<span class="string">'A'</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ask_his_max(<span class="number">1</span>,<span class="number">1</span>,n,l,r));</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(ch[<span class="number">0</span>]==<span class="string">'P'</span>) &#123;<span class="keyword">int</span> x=read(); updata1(<span class="number">1</span>,<span class="number">1</span>,n,l,r,x);&#125;</div><div class="line">		<span class="keyword">else</span> &#123;<span class="keyword">int</span> x=read(); updata2(<span class="number">1</span>,<span class="number">1</span>,n,l,r,x);&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【HDU5306】优美的序列]]></title>
      <url>/2017/05/26/5306/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>这道题的线段树做法非常的妙，似乎应该叫做吉司机线段树</p>
<p>感觉这个东西有一大堆套路</p>
<p>具体的做法就是维护最大值及其出现次数和次大值</p>
<p>修改时如果x大于最大值就退出</p>
<p>否则若大于次大值，则暴力修改</p>
<p>否则递归左右子树</p>
<p>时间复杂度是$O(m \log^2 n)$</p>
<p>我不会证明复杂度，好像要用到势能分析什么的</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> ma,se,t,flag;ll num;&#125;tr[MAXN&lt;&lt;<span class="number">3</span>];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">relord</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	tr[p].num=tr[p&lt;&lt;<span class="number">1</span>].num+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].num;</div><div class="line">	tr[p].ma=max(tr[p&lt;&lt;<span class="number">1</span>].ma,tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ma);</div><div class="line">	<span class="keyword">if</span>(tr[p&lt;&lt;<span class="number">1</span>].ma==tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ma)&#123;</div><div class="line">		tr[p].t=tr[p&lt;&lt;<span class="number">1</span>].t+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].t;</div><div class="line">		tr[p].se=max(tr[p&lt;&lt;<span class="number">1</span>].se,tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].se);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(tr[p&lt;&lt;<span class="number">1</span>].ma&gt;tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ma)&#123;</div><div class="line">		tr[p].t=tr[p&lt;&lt;<span class="number">1</span>].t;</div><div class="line">		tr[p].se=max(tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ma,tr[p&lt;&lt;<span class="number">1</span>].se);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		tr[p].t=tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].t;</div><div class="line">		tr[p].se=max(tr[p&lt;&lt;<span class="number">1</span>].ma,tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].se);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> value)</span></span>&#123;</div><div class="line">	tr[p].num+=(ll)tr[p].t*(value-tr[p].ma);</div><div class="line">	tr[p].ma=tr[p].flag=value;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> value=tr[p].flag;</div><div class="line">	<span class="keyword">if</span>(tr[p&lt;&lt;<span class="number">1</span>].ma&gt;value)   cal(p&lt;&lt;<span class="number">1</span>,value);</div><div class="line">	<span class="keyword">if</span>(tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].ma&gt;value) cal(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,value);</div><div class="line">	tr[p].flag=<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	tr[p].flag=<span class="number">-1</span>; tr[p].se=<span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(l==r) &#123;tr[p].num=tr[p].ma=read(); tr[p].t=<span class="number">1</span>; <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid); build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> value)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(tr[p].flag!=<span class="number">-1</span>) pushdown(p);</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</div><div class="line">		<span class="keyword">if</span>(value&gt;=tr[p].ma) <span class="keyword">return</span>;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(value&gt;tr[p].se) &#123;cal(p,value);<span class="keyword">return</span>;&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,value);</div><div class="line">			updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,value);</div><div class="line">			relord(p);</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,value); updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,value);</div><div class="line">	relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmax</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(tr[p].flag!=<span class="number">-1</span>) pushdown(p);</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) <span class="keyword">return</span> tr[p].ma;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">return</span> max(getmax(p&lt;&lt;<span class="number">1</span>,l,mid,x,y),getmax(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y));</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">getsum</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(tr[p].flag!=<span class="number">-1</span>) pushdown(p);</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) <span class="keyword">return</span> tr[p].num;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">return</span> getsum(p&lt;&lt;<span class="number">1</span>,l,mid,x,y)+getsum(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read(); m=read();</div><div class="line">	build(<span class="number">1</span>,<span class="number">1</span>,n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> opt=read(),l=read(),r=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">0</span>)&#123;<span class="keyword">int</span> x=read();updata(<span class="number">1</span>,<span class="number">1</span>,n,l,r,x);&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">1</span>)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,getmax(<span class="number">1</span>,<span class="number">1</span>,n,l,r));</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,getsum(<span class="number">1</span>,<span class="number">1</span>,n,l,r));</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】计算几何题目总结]]></title>
      <url>/2017/05/24/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E9%A2%98%E7%9B%AE%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<h2 id="入门题目"><a href="#入门题目" class="headerlink" title="入门题目"></a>入门题目</h2><h3 id="【UVa11178】Morley定理"><a href="#【UVa11178】Morley定理" class="headerlink" title="【UVa11178】Morley定理"></a>【UVa11178】Morley定理</h3><p>由于对称性，我们只需要知道如何求点D即可</p>
<p>首先计算角ABC的值a，然后把射线BC逆时针旋转a/3得到直线BD，同样的可得直线CD</p>
<p>然后计算BD和CD的交就行了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.6lf %.6lf "</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> Point <span class="title">rotate</span><span class="params">(<span class="keyword">double</span> rad)</span></span>&#123;<span class="keyword">return</span> Point(x*<span class="built_in">cos</span>(rad)-y*<span class="built_in">sin</span>(rad),x*<span class="built_in">sin</span>(rad)+y*<span class="built_in">cos</span>(rad));&#125;</div><div class="line">&#125;;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Lenth</span><span class="params">(Point A)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>(Dot(A,A));&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Angle</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">acos</span>(Dot(A,B)/Lenth(A)/Lenth(B));&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-B.x*A.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Intersection</span><span class="params">(Point P,Point v,Point Q,Point w)</span></span>&#123;<span class="keyword">return</span> P+v*(Cross(w,P-Q)/Cross(v,w));&#125;</div><div class="line"><span class="function">Point <span class="title">get</span><span class="params">(Point A,Point B,Point C)</span></span>&#123;</div><div class="line">	Point v1=C-B;</div><div class="line">	<span class="keyword">double</span> rad=Angle(A-B,v1);</div><div class="line">	v1=v1.rotate(rad/<span class="number">3</span>);</div><div class="line">	Point v2=B-C;</div><div class="line">	rad=Angle(A-C,v2);</div><div class="line">	v2=v2.rotate(-rad/<span class="number">3</span>);</div><div class="line">	<span class="keyword">return</span> Intersection(B,v1,C,v2);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	Point A,B,C;</div><div class="line">	A.read(); B.read(); C.read();</div><div class="line">	Point D=get(A,B,C);</div><div class="line">	Point E=get(B,C,A);</div><div class="line">	Point F=get(C,A,B);</div><div class="line">	D.print();E.print();F.print();</div><div class="line">	<span class="built_in">puts</span>(<span class="string">""</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【CF772-B】不稳定的风筝"><a href="#【CF772-B】不稳定的风筝" class="headerlink" title="【CF772#B】不稳定的风筝"></a>【CF772#B】不稳定的风筝</h3><p>我们先思考一个这样的问题：多边形在什么情况下会变相交？</p>
<p><img src="http://codeforces.com/predownloaded/0a/f7/0af7164cdd7f65c2ea530caaeba4d6d4d578733b.png" alt=""></p>
<p>如图所示，A、B、C是多边形上的连续顶点，我们看到，只要直径超过B到AC的距离，就会出现多边形自交的情况</p>
<p>所以我们只需要对于连续的三个顶点，求出其中一点到另外两点所成直线的距离，更新答案就行了</p>
<p>注意：INF不要开小</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e12</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">&#125;A[<span class="number">1050</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Lenth</span><span class="params">(Point A)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>(Dot(A,A));&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">dis</span><span class="params">(Point A,Point B,Point C)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(Cross(B-A,C-A))/Lenth(B-C);&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> n; <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n); <span class="keyword">double</span> ans=INF;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read(); A[++n]=A[<span class="number">1</span>]; A[++n]=A[<span class="number">2</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;++i)&#123;</div><div class="line">		cmin(ans,dis(A[i+<span class="number">1</span>],A[i],A[i<span class="number">-1</span>]));</div><div class="line">		cmin(ans,dis(A[i],A[i+<span class="number">1</span>],A[i<span class="number">-1</span>]));</div><div class="line">		cmin(ans,dis(A[i<span class="number">-1</span>],A[i],A[i+<span class="number">1</span>]));</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.10lf\n"</span>,ans/<span class="number">2</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【LA3263】好看的一笔画"><a href="#【LA3263】好看的一笔画" class="headerlink" title="【LA3263】好看的一笔画"></a>【LA3263】好看的一笔画</h3><p>首先介绍欧拉公式：设平面图的顶点数、边数、面数分别为$V$、$E$、$F$，则有$V+F-E=2$</p>
<p>所以我们只需要计算出顶点数和边数就行了</p>
<p>注意计算线交后要去重，因为可能出现多线共点的情况</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 90100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],P[MAXN];</div><div class="line"><span class="keyword">int</span> n,CASE,V,E;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-B.x*A.y;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">dcmp</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">fabs</span>(x)&lt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> x&lt;<span class="number">0</span>?<span class="number">-1</span>:<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Segment_Jiao</span><span class="params">(Point A,Point B,Point C,Point D)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> dcmp(Cross(B-A,C-A)*Cross(B-A,D-A))&lt;<span class="number">0</span>&amp;&amp;dcmp(Cross(D-C,A-C)*Cross(D-C,B-C))&lt;<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">On_Segment</span><span class="params">(Point P,Point A,Point B)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> dcmp(Cross(A-P,B-P))==<span class="number">0</span>&amp;&amp;dcmp(Dot(A-P,B-P))&lt;<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function">Point <span class="title">Line_Jiao</span><span class="params">(Point P,Point v,Point Q,Point w)</span></span>&#123;</div><div class="line">	Point u=P-Q;</div><div class="line">	<span class="keyword">double</span> t=Cross(w,u)/Cross(v,w);</div><div class="line">	<span class="keyword">return</span> P+v*t;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	V=<span class="number">0</span>; E=n<span class="number">-1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i) P[++V]=A[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;n;++j)<span class="keyword">if</span>(Segment_Jiao(A[i],A[i+<span class="number">1</span>],A[j],A[j+<span class="number">1</span>]))</div><div class="line">		P[++V]=Line_Jiao(A[i],A[i+<span class="number">1</span>]-A[i],A[j],A[j+<span class="number">1</span>]-A[j]);</div><div class="line">	sort(P+<span class="number">1</span>,P+V+<span class="number">1</span>);V=unique(P+<span class="number">1</span>,P+V+<span class="number">1</span>)-(P+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=V;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;n;++j)<span class="keyword">if</span>(On_Segment(P[i],A[j],A[j+<span class="number">1</span>]))++E;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"Case %d: There are %d pieces.\n"</span>,++CASE,E+<span class="number">2</span>-V);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF&amp;&amp;n)solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【UVa11796】狗的距离"><a href="#【UVa11796】狗的距离" class="headerlink" title="【UVa11796】狗的距离"></a>【UVa11796】狗的距离</h3><p>首先看一种简化的情况：甲和乙的线路都是直线，那么根据相对运动理论，可看成甲静止不动，乙沿着直线走，即计算点到直线的最大最小距离即可</p>
<p>然后我们只需要模拟整个过程，处理每个拐点的情况即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,CASE;</div><div class="line"><span class="keyword">double</span> v1,v2,maxx,minn;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dcmp</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">fabs</span>(x)&lt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> x&lt;<span class="number">0</span>?<span class="number">-1</span>:<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">&#125;A[<span class="number">55</span>],B[<span class="number">55</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Lenth</span><span class="params">(Point A)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>(Dot(A,A));&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Segment_Dis</span><span class="params">(Point P,Point A,Point B)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(A==B) <span class="keyword">return</span> Lenth(P-A);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(dcmp(Dot(B-A,P-A))&lt;<span class="number">0</span>) <span class="keyword">return</span> Lenth(P-A);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(dcmp(Dot(A-B,P-B))&lt;<span class="number">0</span>) <span class="keyword">return</span> Lenth(P-B);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">fabs</span>(Cross(A-B,P-B)/Lenth(A-B));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(Point P,Point A,Point B)</span></span>&#123;</div><div class="line">	cmin(minn,Segment_Dis(P,A,B));</div><div class="line">	cmax(maxx,Lenth(P-A));</div><div class="line">	cmax(maxx,Lenth(P-B));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();  v1=v2=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) B[i].read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i) v1+=Lenth(A[i+<span class="number">1</span>]-A[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;m;++i) v2+=Lenth(B[i+<span class="number">1</span>]-B[i]);</div><div class="line">	<span class="keyword">int</span> Sa=<span class="number">1</span>,Sb=<span class="number">1</span>;  Point Pa=A[<span class="number">1</span>],Pb=B[<span class="number">1</span>];</div><div class="line">	minn=INF;  maxx=-INF;</div><div class="line">	<span class="keyword">while</span>(Sa&lt;n&amp;&amp;Sb&lt;m)&#123;</div><div class="line">		<span class="keyword">double</span> La=Lenth(A[Sa+<span class="number">1</span>]-Pa);</div><div class="line">		<span class="keyword">double</span> Lb=Lenth(B[Sb+<span class="number">1</span>]-Pb);</div><div class="line">		<span class="keyword">double</span> T=min(La/v1,Lb/v2);</div><div class="line">		Point Va=(A[Sa+<span class="number">1</span>]-Pa)/La*T*v1;</div><div class="line">		Point Vb=(B[Sb+<span class="number">1</span>]-Pb)/Lb*T*v2;</div><div class="line">		updata(Pa,Pb,Pb+Vb-Va);</div><div class="line">		Pa=Pa+Va;</div><div class="line">		Pb=Pb+Vb;</div><div class="line">		<span class="keyword">if</span>(Pa==A[Sa+<span class="number">1</span>])  ++Sa;</div><div class="line">		<span class="keyword">if</span>(Pb==B[Sb+<span class="number">1</span>])  ++Sb;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"Case %d: %.0lf\n"</span>,++CASE,maxx-minn);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="凸包"><a href="#凸包" class="headerlink" title="凸包"></a>凸包</h2><h3 id="【UVa10652】包装木板"><a href="#【UVa10652】包装木板" class="headerlink" title="【UVa10652】包装木板"></a>【UVa10652】包装木板</h3><p>直接求凸包的面积即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2510</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi=<span class="built_in">acos</span>(<span class="number">-1</span>);</div><div class="line"><span class="keyword">int</span> n,cnt;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span> &#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span> &#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> Point <span class="title">rotate</span><span class="params">(<span class="keyword">double</span> rad)</span></span>&#123;<span class="keyword">return</span> Point(x*<span class="built_in">cos</span>(rad)-y*<span class="built_in">sin</span>(rad),x*<span class="built_in">sin</span>(rad)+y*<span class="built_in">cos</span>(rad));&#125;</div><div class="line">&#125;A[MAXN],q[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ConvexHull</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> tail=<span class="number">0</span>;</div><div class="line">	sort(A+<span class="number">1</span>,A+cnt+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;<span class="number">1</span>&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> lim=tail;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=cnt<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;lim&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> tail;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  <span class="keyword">double</span> area=<span class="number">0</span>,ans=<span class="number">0</span>;  cnt=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">double</span> x,y,w,h,j;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf%lf"</span>,&amp;x,&amp;y,&amp;w,&amp;h,&amp;j);</div><div class="line">		<span class="function">Point <span class="title">O</span><span class="params">(x,y)</span></span>;  <span class="keyword">double</span> rad=-j*pi/<span class="number">180</span>;</div><div class="line">		A[++cnt]=O+Point(w/<span class="number">2</span>,h/<span class="number">2</span>).rotate(rad);</div><div class="line">		A[++cnt]=O+Point(w/<span class="number">2</span>,-h/<span class="number">2</span>).rotate(rad);</div><div class="line">		A[++cnt]=O+Point(-w/<span class="number">2</span>,h/<span class="number">2</span>).rotate(rad);</div><div class="line">		A[++cnt]=O+Point(-w/<span class="number">2</span>,-h/<span class="number">2</span>).rotate(rad);</div><div class="line">		area+=w*h;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> tot=ConvexHull()<span class="number">-1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;tot;++i) ans+=Cross(q[i]-q[<span class="number">1</span>],q[i+<span class="number">1</span>]-q[<span class="number">1</span>])/<span class="number">2</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.1lf %%\n"</span>,area/ans*<span class="number">100</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【LA2453】围墙"><a href="#【LA2453】围墙" class="headerlink" title="【LA2453】围墙"></a>【LA2453】围墙</h3><p>先求凸包，然后答案就是凸包周长+$2\pi L$</p>
<p>为什么是$2\pi L$呢？这个问题留个读者画图思考</p>
<p>另外这题卡输出格式，23333</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi=<span class="built_in">acos</span>(<span class="number">-1</span>);</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],q[MAXN];</div><div class="line"><span class="keyword">int</span> n,L;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  L=read();  <span class="keyword">double</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read();</div><div class="line">	sort(A+<span class="number">1</span>,A+n+<span class="number">1</span>);  <span class="keyword">int</span> tail=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;<span class="number">1</span>&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> lim=tail;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;lim&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tail;++i) ans+=<span class="built_in">sqrt</span>(Dot(q[i+<span class="number">1</span>]-q[i],q[i+<span class="number">1</span>]-q[i]));</div><div class="line">	ans+=pi*L*<span class="number">2</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.0lf\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> T=read();</div><div class="line">	<span class="keyword">while</span>(T--)&#123;</div><div class="line">		solve();</div><div class="line">		<span class="keyword">if</span>(T) <span class="built_in">puts</span>(<span class="string">""</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【UVa11168】飞机场"><a href="#【UVa11168】飞机场" class="headerlink" title="【UVa11168】飞机场"></a>【UVa11168】飞机场</h3><p>求出点的凸包之后，我们不难发现，选择凸包的边所在的直线一定比选择其它直线更优</p>
<p>所以我们只需要枚举凸包上的直线，然后我们可以在$O(1)$的时间内求出总距离</p>
<p>设直线的一般式为$Ax+By+C$，然后使用公式$d=\frac{|Ax_0+By_0+C|}{\sqrt {A^2+B^2}}$</p>
<p>我们只需要预处理所有横坐标的和、所有纵坐标的和就行了</p>
<p>至于把两点式化为一般式，那就脑洞大开随便做了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 10100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">double</span> sumx,sumy,ans;</div><div class="line"><span class="keyword">int</span> n,CASE; </div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],q[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ConvexHull</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> tail=<span class="number">0</span>;</div><div class="line">	sort(A+<span class="number">1</span>,A+n+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;<span class="number">1</span>&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> lim=tail;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;lim&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> tail;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(Point A,Point B)</span></span>&#123;</div><div class="line">	<span class="keyword">double</span> a,b,c;</div><div class="line">	<span class="keyword">if</span>(A.x==B.x) cmin(ans,<span class="built_in">fabs</span>(sumx-n*A.x));</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">double</span> k=(A.y-B.y)/(A.x-B.x),temp=A.y-k*A.x;</div><div class="line">		a=k; b=<span class="number">-1</span>; c=temp;</div><div class="line">		<span class="keyword">double</span> ret=<span class="built_in">fabs</span>(a*sumx+b*sumy+c*n)/<span class="built_in">sqrt</span>(a*a+b*b);</div><div class="line">		cmin(ans,ret);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  ans=INF;  sumx=sumy=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) sumx+=A[i].x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) sumy+=A[i].y;</div><div class="line">	<span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">2</span>) &#123;<span class="built_in">printf</span>(<span class="string">"Case #%d: %.3lf\n"</span>,++CASE,(<span class="keyword">double</span>)<span class="number">0</span>);<span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> tot=ConvexHull();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tot;++i) updata(q[i],q[i+<span class="number">1</span>]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"Case #%d: %.3lf\n"</span>,++CASE,ans/n);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【UVa10256】点集划分"><a href="#【UVa10256】点集划分" class="headerlink" title="【UVa10256】点集划分"></a>【UVa10256】点集划分</h3><p>先求出红点的凸包和蓝点的凸包，那么我们判断这两个凸包是否相离即可</p>
<p>具体的话就是要判断：</p>
<p>(1)任取两凸包上的线段没有交点</p>
<p>(2)任取凸包上一点，该点不在另一凸包内</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 510</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span> &#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span> &#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],B[MAXN],q[<span class="number">5</span>][MAXN];</div><div class="line"><span class="keyword">int</span> n,m,tail[<span class="number">5</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dcmp</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">fabs</span>(x)&lt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> x&lt;<span class="number">0</span>?<span class="number">-1</span>:<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">Segment_Jiao</span><span class="params">(Point A,Point B,Point C,Point D)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> dcmp(Cross(B-A,C-A)*Cross(B-A,D-A))&lt;<span class="number">0</span>&amp;&amp;dcmp(Cross(D-C,A-C)*Cross(D-C,B-C))&lt;<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">On_Segment</span><span class="params">(Point P,Point A,Point B)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> dcmp(Cross(P-A,P-B))==<span class="number">0</span>&amp;&amp;dcmp(Dot(P-A,P-B))&lt;<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">Check1</span><span class="params">(Point P)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> wn=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tail[<span class="number">2</span>];++i)&#123;</div><div class="line">		<span class="keyword">if</span>(On_Segment(P,q[<span class="number">2</span>][i],q[<span class="number">2</span>][i+<span class="number">1</span>])) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		<span class="keyword">int</span> k=dcmp(Cross(q[<span class="number">2</span>][i+<span class="number">1</span>]-q[<span class="number">2</span>][i],P-q[<span class="number">2</span>][i]));</div><div class="line">		<span class="keyword">int</span> d1=dcmp(q[<span class="number">2</span>][i].y-P.y);</div><div class="line">		<span class="keyword">int</span> d2=dcmp(q[<span class="number">2</span>][i+<span class="number">1</span>].y-P.y);</div><div class="line">		<span class="keyword">if</span>(k&gt;<span class="number">0</span>&amp;&amp;d1&lt;=<span class="number">0</span>&amp;&amp;d2&gt;<span class="number">0</span>) ++wn;</div><div class="line">		<span class="keyword">if</span>(k&lt;<span class="number">0</span>&amp;&amp;d2&lt;=<span class="number">0</span>&amp;&amp;d1&gt;<span class="number">0</span>) --wn;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> wn?<span class="number">1</span>:<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">Check2</span><span class="params">(Point P)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> wn=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tail[<span class="number">1</span>];++i)&#123;</div><div class="line">		<span class="keyword">if</span>(On_Segment(P,q[<span class="number">1</span>][i],q[<span class="number">1</span>][i+<span class="number">1</span>])) <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">		<span class="keyword">int</span> k=dcmp(Cross(q[<span class="number">1</span>][i+<span class="number">1</span>]-q[<span class="number">1</span>][i],P-q[<span class="number">1</span>][i]));</div><div class="line">		<span class="keyword">int</span> d1=dcmp(q[<span class="number">1</span>][i].y-P.y);</div><div class="line">		<span class="keyword">int</span> d2=dcmp(q[<span class="number">1</span>][i+<span class="number">1</span>].y-P.y);</div><div class="line">		<span class="keyword">if</span>(k&gt;<span class="number">0</span>&amp;&amp;d1&lt;=<span class="number">0</span>&amp;&amp;d2&gt;<span class="number">0</span>) ++wn;</div><div class="line">		<span class="keyword">if</span>(k&lt;<span class="number">0</span>&amp;&amp;d2&lt;=<span class="number">0</span>&amp;&amp;d1&gt;<span class="number">0</span>) --wn;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> wn?<span class="number">1</span>:<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) B[i].read();</div><div class="line">	tail[<span class="number">1</span>]=tail[<span class="number">2</span>]=<span class="number">0</span>;  <span class="keyword">int</span> flag=<span class="number">1</span>;</div><div class="line">	sort(A+<span class="number">1</span>,A+n+<span class="number">1</span>);  sort(B+<span class="number">1</span>,B+m+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail[<span class="number">1</span>]&gt;<span class="number">1</span>&amp;&amp;Cross(q[<span class="number">1</span>][tail[<span class="number">1</span>]]-q[<span class="number">1</span>][tail[<span class="number">1</span>]<span class="number">-1</span>],A[i]-q[<span class="number">1</span>][tail[<span class="number">1</span>]<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail[<span class="number">1</span>];</div><div class="line">		q[<span class="number">1</span>][++tail[<span class="number">1</span>]]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> lim=tail[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail[<span class="number">1</span>]&gt;lim&amp;&amp;Cross(q[<span class="number">1</span>][tail[<span class="number">1</span>]]-q[<span class="number">1</span>][tail[<span class="number">1</span>]<span class="number">-1</span>],A[i]-q[<span class="number">1</span>][tail[<span class="number">1</span>]<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail[<span class="number">1</span>];</div><div class="line">		q[<span class="number">1</span>][++tail[<span class="number">1</span>]]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail[<span class="number">2</span>]&gt;<span class="number">1</span>&amp;&amp;Cross(q[<span class="number">2</span>][tail[<span class="number">2</span>]]-q[<span class="number">2</span>][tail[<span class="number">2</span>]<span class="number">-1</span>],B[i]-q[<span class="number">2</span>][tail[<span class="number">2</span>]<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail[<span class="number">2</span>];</div><div class="line">		q[<span class="number">2</span>][++tail[<span class="number">2</span>]]=B[i];</div><div class="line">	&#125;</div><div class="line">	lim=tail[<span class="number">2</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=m<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail[<span class="number">2</span>]&gt;lim&amp;&amp;Cross(q[<span class="number">2</span>][tail[<span class="number">2</span>]]-q[<span class="number">2</span>][tail[<span class="number">2</span>]<span class="number">-1</span>],B[i]-q[<span class="number">2</span>][tail[<span class="number">2</span>]<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail[<span class="number">2</span>];</div><div class="line">		q[<span class="number">2</span>][++tail[<span class="number">2</span>]]=B[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tail[<span class="number">1</span>];++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;tail[<span class="number">2</span>];++j)<span class="keyword">if</span>(Segment_Jiao(q[<span class="number">1</span>][i],q[<span class="number">1</span>][i+<span class="number">1</span>],q[<span class="number">2</span>][j],q[<span class="number">2</span>][j+<span class="number">1</span>]))flag=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tail[<span class="number">1</span>];++i)<span class="keyword">if</span>(Check1(q[<span class="number">1</span>][i]))flag=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;tail[<span class="number">2</span>];++i)<span class="keyword">if</span>(Check2(q[<span class="number">2</span>][i]))flag=<span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(flag) <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF&amp;&amp;n&amp;&amp;m) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="半平面交"><a href="#半平面交" class="headerlink" title="半平面交"></a>半平面交</h2><h3 id="【POJ3130】数学家的难题"><a href="#【POJ3130】数学家的难题" class="headerlink" title="【POJ3130】数学家的难题"></a>【POJ3130】数学家的难题</h3><p>半平面交经典应用：判断多线性核的存在性</p>
<p>把多边形的边看成半平面，只需要判断交是否为空就行了</p>
<p>吐个槽：POJ居然不支持bits库</p>
<p>这道题曾出现在Pku科技营上，当时naive不会计算几何没有做出来</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 105</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],P[MAXN];</div><div class="line"><span class="keyword">struct</span> Line&#123;</div><div class="line">	Point P,v;  <span class="keyword">double</span> ang;  Line()&#123;&#125;</div><div class="line">	Line(Point A,Point B):P(A),v(B)&#123;ang=<span class="built_in">atan2</span>(v.y,v.x);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Line &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> ang&lt;b.ang;&#125;</div><div class="line">&#125;L[MAXN],q[MAXN];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">On_Left</span><span class="params">(Point A,Line L)</span></span>&#123;<span class="keyword">return</span> Cross(L.v,A-L.P)&gt;<span class="number">0</span>;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Line_Jiao</span><span class="params">(Line A,Line B)</span></span>&#123;</div><div class="line">	Point u=A.P-B.P;</div><div class="line">	<span class="keyword">double</span> t=Cross(B.v,u)/Cross(A.v,B.v);</div><div class="line">	<span class="keyword">return</span> A.P+A.v*t;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</div><div class="line">	sort(L+<span class="number">1</span>,L+n);  <span class="keyword">int</span> head=<span class="number">1</span>,tail=<span class="number">0</span>;  q[++tail]=L[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],L[i])) --tail;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[head],L[i])) ++head;</div><div class="line">		q[++tail]=L[i];</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">fabs</span>(q[tail].ang-q[tail<span class="number">-1</span>].ang)&lt;eps)&#123;</div><div class="line">			--tail;</div><div class="line">			<span class="keyword">if</span>(On_Left(L[i].P,q[tail]))  q[tail]=L[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(head&lt;tail) P[tail<span class="number">-1</span>]=Line_Jiao(q[tail<span class="number">-1</span>],q[tail]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],q[head])) --tail;</div><div class="line">	<span class="keyword">return</span> tail-head&gt;<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read(); A[++n]=A[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)  L[i]=Line(A[i],A[i+<span class="number">1</span>]-A[i]);</div><div class="line">	<span class="keyword">if</span>(check()) <span class="built_in">puts</span>(<span class="string">"1"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"0"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF&amp;&amp;n) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【LA2512】艺术画廊"><a href="#【LA2512】艺术画廊" class="headerlink" title="【LA2512】艺术画廊"></a>【LA2512】艺术画廊</h3><p>半平面交经典应用：求多边形核的存在区域面积</p>
<p>求出半平面交后算面积就行了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],P[MAXN];</div><div class="line"><span class="keyword">struct</span> Line&#123;</div><div class="line">	Point P,v;  <span class="keyword">double</span> ang;  Line()&#123;&#125;</div><div class="line">	Line(Point A,Point B):P(A),v(B)&#123;ang=<span class="built_in">atan2</span>(v.y,v.x);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Line &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> ang&lt;b.ang;&#125;</div><div class="line">&#125;L[MAXN],q[MAXN];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">On_Left</span><span class="params">(Point A,Line L)</span></span>&#123;<span class="keyword">return</span> Cross(L.v,A-L.P)&gt;<span class="number">0</span>;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Line_Jiao</span><span class="params">(Line A,Line B)</span></span>&#123;</div><div class="line">	Point u=A.P-B.P;</div><div class="line">	<span class="keyword">double</span> t=Cross(B.v,u)/Cross(A.v,B.v);</div><div class="line">	<span class="keyword">return</span> A.P+A.v*t;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;--i)A[i].read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)L[i]=Line(A[i],A[i+<span class="number">1</span>]-A[i]);  L[n]=Line(A[n],A[<span class="number">1</span>]-A[n]);</div><div class="line">	<span class="keyword">int</span> head=<span class="number">1</span>,tail=<span class="number">0</span>; sort(L+<span class="number">1</span>,L+n+<span class="number">1</span>); q[++tail]=L[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],L[i])) --tail;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[head],L[i])) ++head;</div><div class="line">		q[++tail]=L[i];</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">fabs</span>(q[tail].ang-q[tail<span class="number">-1</span>].ang)&lt;eps)&#123;</div><div class="line">			--tail;</div><div class="line">			<span class="keyword">if</span>(On_Left(L[i].P,q[tail])) q[tail]=L[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(head&lt;tail) P[tail<span class="number">-1</span>]=Line_Jiao(q[tail],q[tail<span class="number">-1</span>]);</div><div class="line">	&#125;</div><div class="line">	P[tail]=Line_Jiao(q[tail],q[head]);</div><div class="line">	<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],q[head])) --tail;</div><div class="line">	<span class="keyword">double</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=head+<span class="number">1</span>;i&lt;tail;++i) ans+=Cross(P[i]-P[head],P[i+<span class="number">1</span>]-P[head])/<span class="number">2</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【UVa10084】更冷更热"><a href="#【UVa10084】更冷更热" class="headerlink" title="【UVa10084】更冷更热"></a>【UVa10084】更冷更热</h3><p>首先很显然的是：如果出现了“Same”，之后的答案就是0，这个要记得特判掉</p>
<p>然后没加入一个条件，就相当于增加了一个半平面：它的中垂线</p>
<p>求一下半平面交，然后计算面积即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi=<span class="built_in">acos</span>(<span class="number">-1</span>);</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> Point <span class="title">rotate</span><span class="params">(<span class="keyword">double</span> rad)</span></span>&#123;<span class="keyword">return</span> Point(x*<span class="built_in">cos</span>(rad)-y*<span class="built_in">sin</span>(rad),x*<span class="built_in">sin</span>(rad)+y*<span class="built_in">cos</span>(rad));&#125;</div><div class="line">&#125;A[MAXN],P[MAXN];</div><div class="line"><span class="keyword">struct</span> Line&#123;</div><div class="line">	Point P,v; <span class="keyword">double</span> ang; Line()&#123;&#125;</div><div class="line">	Line(Point A,Point B):P(A),v(B)&#123;ang=<span class="built_in">atan2</span>(v.y,v.x);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Line &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> ang&lt;b.ang;&#125;</div><div class="line">&#125;L[MAXN],q[MAXN];</div><div class="line"><span class="keyword">int</span> n,cnt,tot,flag;</div><div class="line"><span class="keyword">char</span> ch[<span class="number">10</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">On_Left</span><span class="params">(Point A,Line L)</span></span>&#123;<span class="keyword">return</span> Cross(L.v,A-L.P)&gt;<span class="number">0</span>;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Half</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> Point((A.x+B.x)/<span class="number">2</span>,(A.y+B.y)/<span class="number">2</span>);&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Line_Jiao</span><span class="params">(Line A,Line B)</span></span>&#123;</div><div class="line">	Point u=A.P-B.P;</div><div class="line">	<span class="keyword">double</span> t=Cross(B.v,u)/Cross(A.v,B.v);</div><div class="line">	<span class="keyword">return</span> A.P+A.v*t;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch);  <span class="keyword">if</span>(ch[<span class="number">0</span>]==<span class="string">'S'</span>) flag=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(flag) &#123;<span class="built_in">puts</span>(<span class="string">"0.00"</span>); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">if</span>(ch[<span class="number">0</span>]==<span class="string">'C'</span>) L[++tot]=Line(Half(A[cnt],A[cnt<span class="number">-1</span>]),(A[cnt]-A[cnt<span class="number">-1</span>]).rotate(pi/<span class="number">2</span>));</div><div class="line">	<span class="keyword">else</span> L[++tot]=Line(Half(A[cnt],A[cnt<span class="number">-1</span>]),(A[cnt]-A[cnt<span class="number">-1</span>]).rotate(pi*<span class="number">3</span>/<span class="number">2</span>));</div><div class="line">	sort(L+<span class="number">1</span>,L+tot+<span class="number">1</span>); <span class="keyword">int</span> head=<span class="number">1</span>,tail=<span class="number">0</span>; q[++tail]=L[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=tot;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],L[i])) --tail;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[head],L[i])) ++head;</div><div class="line">		q[++tail]=L[i];</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">fabs</span>(q[tail].ang-q[tail<span class="number">-1</span>].ang)&lt;eps)&#123;</div><div class="line">			--tail;</div><div class="line">			<span class="keyword">if</span>(On_Left(L[i].P,q[tail])) q[tail]=L[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(head&lt;tail) P[tail<span class="number">-1</span>]=Line_Jiao(q[tail],q[tail<span class="number">-1</span>]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],q[head])) --tail;</div><div class="line">	P[tail]=Line_Jiao(q[tail],q[head]);</div><div class="line">	<span class="keyword">if</span>(tail-head&lt;<span class="number">1</span>) &#123;<span class="built_in">puts</span>(<span class="string">"0.00"</span>); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">double</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=head+<span class="number">1</span>;i&lt;tail;++i) ans+=Cross(P[i]-P[head],P[i+<span class="number">1</span>]-P[head])/<span class="number">2</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,ans);  cnt++;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	L[++tot]=Line(Point(<span class="number">0</span>,<span class="number">0</span>),Point(<span class="number">1</span>,<span class="number">0</span>));</div><div class="line">	L[++tot]=Line(Point(<span class="number">10</span>,<span class="number">0</span>),Point(<span class="number">0</span>,<span class="number">1</span>));</div><div class="line">	L[++tot]=Line(Point(<span class="number">10</span>,<span class="number">10</span>),Point(<span class="number">-1</span>,<span class="number">0</span>));</div><div class="line">	L[++tot]=Line(Point(<span class="number">0</span>,<span class="number">10</span>),Point(<span class="number">0</span>,<span class="number">-1</span>));</div><div class="line">	A[cnt++]=Point(<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;A[cnt].x,&amp;A[cnt].y)!=EOF)solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【LA3890】离海最远的点"><a href="#【LA3890】离海最远的点" class="headerlink" title="【LA3890】离海最远的点"></a>【LA3890】离海最远的点</h3><p>我们先二分一个答案，然后把多边形缩一缩，判断半平面交是否非空即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 205</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],P[MAXN];</div><div class="line"><span class="keyword">struct</span> Line&#123;</div><div class="line">	Point P,v;  <span class="keyword">double</span> ang;  Line()&#123;&#125; </div><div class="line">	Line(Point P,Point v):P(P),v(v)&#123;ang=<span class="built_in">atan2</span>(v.y,v.x);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Line &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> ang&lt;b.ang;&#125;</div><div class="line">&#125;L[MAXN],q[MAXN];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Lenth</span><span class="params">(Point A)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>(Dot(A,A));&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Normal</span><span class="params">(Point A)</span></span>&#123;<span class="keyword">return</span> Point(-A.y/Lenth(A),A.x/Lenth(A));&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">On_Left</span><span class="params">(Point A,Line L)</span></span>&#123;<span class="keyword">return</span> Cross(L.v,A-L.P)&gt;<span class="number">0</span>;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Line_Jiao</span><span class="params">(Line A,Line B)</span></span>&#123;</div><div class="line">	Point u=A.P-B.P;</div><div class="line">	<span class="keyword">double</span> t=Cross(B.v,u)/Cross(A.v,B.v);</div><div class="line">	<span class="keyword">return</span> A.P+A.v*t;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> mid)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i) L[i]=Line(A[i]+Normal(A[i+<span class="number">1</span>]-A[i])*mid,A[i+<span class="number">1</span>]-A[i]);</div><div class="line">	sort(L+<span class="number">1</span>,L+n);  <span class="keyword">int</span> head=<span class="number">1</span>,tail=<span class="number">0</span>; q[++tail]=L[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],L[i])) --tail;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[head],L[i])) ++head;</div><div class="line">		q[++tail]=L[i];</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">fabs</span>(q[tail].ang-q[tail<span class="number">-1</span>].ang)&lt;eps)&#123;</div><div class="line">			--tail;</div><div class="line">			<span class="keyword">if</span>(On_Left(L[i].P,q[tail])) q[tail]=L[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(head&lt;tail) P[tail<span class="number">-1</span>]=Line_Jiao(q[tail<span class="number">-1</span>],q[tail]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],q[head])) --tail;</div><div class="line">	<span class="keyword">return</span> tail-head&gt;<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read(); A[++n]=A[<span class="number">1</span>];</div><div class="line">	<span class="keyword">double</span> l=<span class="number">0</span>,r=INF;</div><div class="line">	<span class="keyword">while</span>(l+eps&lt;r)&#123;</div><div class="line">		<span class="keyword">double</span> mid=(l+r)/<span class="number">2</span>;</div><div class="line">		<span class="keyword">if</span>(check(mid)) l=mid;</div><div class="line">		<span class="keyword">else</span> r=mid;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.6lf\n"</span>,l);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF&amp;&amp;n) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【LA2218】铁人三项"><a href="#【LA2218】铁人三项" class="headerlink" title="【LA2218】铁人三项"></a>【LA2218】铁人三项</h3><p>这题思路很妙啊</p>
<p>设比赛总长度为$k$(常数)，其中游泳长度为$x$，自行车为$y$，赛跑为$k-x-y$</p>
<p>则选手i能打败选手j的条件为：$\frac{x}{v_i}+\frac{y}{u_i}+\frac{k-x-y}{w_i}&lt;\frac{x}{v_j}+\frac{y}{u_j}+\frac{k-x-y}{w_j}$</p>
<p>整理为$Ax+By+C&gt;0$的形式，则</p>
<p>$A=(\frac{k}{v_j}-\frac{k}{w_j})+(\frac{k}{v_i}-\frac{k}{w_i})$</p>
<p>$B=(\frac{k}{u_j}-\frac{k}{w_j})+(\frac{k}{u_i}-\frac{k}{w_i})$</p>
<p>$C=\frac{k}{w_j}-\frac{k}{w_i}$</p>
<p>这相当于一个半平面，至于打败所有人，就相当于求所有半平面的交</p>
<p>注意：由于精度问题，常数k建议设置为10000，且需要特判3个速度都大于/小于另一个选手的情况</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 205</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> chty=<span class="number">1e4</span>;<span class="comment">//常数</span></div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],P[MAXN];</div><div class="line"><span class="keyword">struct</span> Line&#123;</div><div class="line">	Point P,v; <span class="keyword">double</span> ang; Line()&#123;&#125;</div><div class="line">	Line(Point A,Point B):P(A),v(B)&#123;ang=<span class="built_in">atan2</span>(v.y,v.x);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Line &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> ang&lt;b.ang;&#125;</div><div class="line">&#125;L[MAXN],q[MAXN];</div><div class="line"><span class="keyword">double</span> v[MAXN],u[MAXN],w[MAXN];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">On_Left</span><span class="params">(Point A,Line L)</span></span>&#123;<span class="keyword">return</span> Cross(L.v,A-L.P)&gt;<span class="number">0</span>;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Line_Jiao</span><span class="params">(Line A,Line B)</span></span>&#123;</div><div class="line">	Point u=A.P-B.P;</div><div class="line">	<span class="keyword">double</span> t=Cross(B.v,u)/Cross(A.v,B.v);</div><div class="line">	<span class="keyword">return</span> A.P+A.v*t;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> cnt)</span></span>&#123;</div><div class="line">	sort(L+<span class="number">1</span>,L+cnt+<span class="number">1</span>);</div><div class="line">	<span class="keyword">int</span> head=<span class="number">1</span>,tail=<span class="number">0</span>; q[++tail]=L[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=cnt;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],L[i])) --tail;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[head],L[i])) ++head;</div><div class="line">		q[++tail]=L[i];</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">fabs</span>(q[tail].ang-q[tail<span class="number">-1</span>].ang)&lt;eps)&#123;</div><div class="line">			<span class="keyword">if</span>(On_Left(L[i].P,q[--tail])) q[tail]=L[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(head&lt;tail) P[tail<span class="number">-1</span>]=Line_Jiao(q[tail<span class="number">-1</span>],q[tail]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],q[head])) --tail;</div><div class="line">	<span class="keyword">return</span> tail-head&gt;<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> T)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> cnt=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(i!=T)&#123;</div><div class="line">		<span class="keyword">if</span>(v[T]&lt;=v[i]&amp;&amp;u[T]&lt;=u[i]&amp;&amp;w[T]&lt;=w[i])&#123;<span class="built_in">puts</span>(<span class="string">"No"</span>);<span class="keyword">return</span>;&#125;</div><div class="line">		<span class="keyword">if</span>(v[T]&gt;=v[i]&amp;&amp;u[T]&gt;=u[i]&amp;&amp;w[T]&gt;=w[i])<span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">double</span> a=chty/v[i]+chty/w[T]-chty/v[T]-chty/w[i];</div><div class="line">		<span class="keyword">double</span> b=chty/u[i]+chty/w[T]-chty/u[T]-chty/w[i];</div><div class="line">		<span class="keyword">double</span> c=chty/w[i]-chty/w[T];</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">fabs</span>(a)&gt;<span class="built_in">fabs</span>(b)) L[++cnt]=Line(Point(-c/a,<span class="number">0</span>),Point(b,-a));</div><div class="line">		<span class="keyword">else</span> L[++cnt]=Line(Point(<span class="number">0</span>,-c/b),Point(b,-a));</div><div class="line">	&#125;</div><div class="line">	L[++cnt]=Line(Point(<span class="number">0</span>,<span class="number">0</span>),Point(<span class="number">0</span>,<span class="number">-1</span>));</div><div class="line">	L[++cnt]=Line(Point(<span class="number">0</span>,<span class="number">0</span>),Point(<span class="number">1</span>,<span class="number">0</span>));</div><div class="line">	L[++cnt]=Line(Point(<span class="number">0</span>,<span class="number">1</span>),Point(<span class="number">-1</span>,<span class="number">1</span>));</div><div class="line">	<span class="keyword">if</span>(check(cnt)) <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"No"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>,&amp;v[i],&amp;u[i],&amp;w[i]);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)solve(i);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【LA4992】丛林警戒队"><a href="#【LA4992】丛林警戒队" class="headerlink" title="【LA4992】丛林警戒队"></a>【LA4992】丛林警戒队</h3><p>有一个很显然的结论：炸掉连续的点一定比炸掉分散的点更优，所有我们的做法就比较显然了</p>
<p>首先二分一个答案，然后判断半平面交是否为空即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],P[MAXN];</div><div class="line"><span class="keyword">struct</span> Line&#123;</div><div class="line">	Point P,v; <span class="keyword">double</span> ang; Line()&#123;&#125;</div><div class="line">	Line(Point A,Point B):P(A),v(B)&#123;ang=<span class="built_in">atan2</span>(v.y,v.x);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Line &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> ang&lt;b.ang;&#125;</div><div class="line">&#125;L[MAXN],q[MAXN];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-B.x*A.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">On_Left</span><span class="params">(Point A,Line L)</span></span>&#123;<span class="keyword">return</span> Cross(L.v,A-L.P)&gt;<span class="number">0</span>;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Line_Jiao</span><span class="params">(Line A,Line B)</span></span>&#123;</div><div class="line">	Point u=A.P-B.P;</div><div class="line">	<span class="keyword">double</span> t=Cross(B.v,u)/Cross(A.v,B.v);</div><div class="line">	<span class="keyword">return</span> A.P+A.v*t;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> mid)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) L[i]=Line(A[i],A[i]-A[(i+mid+<span class="number">1</span>)%n]);</div><div class="line">	sort(L,L+n); <span class="keyword">int</span> head=<span class="number">1</span>,tail=<span class="number">0</span>; q[++tail]=L[<span class="number">0</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],L[i])) --tail;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[head],L[i])) ++head;</div><div class="line">		q[++tail]=L[i];</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">fabs</span>(q[tail].ang-q[tail<span class="number">-1</span>].ang)&lt;eps)&#123;</div><div class="line">			<span class="keyword">if</span>(On_Left(L[i].P,q[--tail])) q[tail]=L[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(head&lt;tail) P[tail<span class="number">-1</span>]=Line_Jiao(q[tail<span class="number">-1</span>],q[tail]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],q[head]))  --tail;</div><div class="line">	<span class="keyword">return</span> tail-head<span class="number">-1</span>&gt;<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i) A[i].read();</div><div class="line">	<span class="keyword">int</span> l=<span class="number">1</span>,r=n;</div><div class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(check(mid)) l=mid;</div><div class="line">		<span class="keyword">else</span> r=mid;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,check(l)?r:l);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="旋转卡壳"><a href="#旋转卡壳" class="headerlink" title="旋转卡壳"></a>旋转卡壳</h2><h3 id="【LA4728】多边形"><a href="#【LA4728】多边形" class="headerlink" title="【LA4728】多边形"></a>【LA4728】多边形</h3><p>求完凸包之后，我们的问题就变成了一个经典问题：求凸包直径</p>
<p>直接上旋转卡壳即可</p>
<p>这题数据好水，怎么写都能过</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 400100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],q[MAXN];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  <span class="keyword">int</span> cnt=<span class="number">0</span>; <span class="keyword">double</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),w=read();</div><div class="line">		A[++cnt]=Point(x,y);</div><div class="line">		A[++cnt]=Point(x+w,y);</div><div class="line">		A[++cnt]=Point(x,y+w);</div><div class="line">		A[++cnt]=Point(x+w,y+w);</div><div class="line">	&#125;</div><div class="line">	sort(A+<span class="number">1</span>,A+cnt+<span class="number">1</span>);  <span class="keyword">int</span> tail=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;<span class="number">1</span>&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> lim=tail;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=cnt<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;lim&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> pos=<span class="number">2</span>;  --tail;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tail;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">fabs</span>(Cross(q[pos%tail+<span class="number">1</span>]-q[i+<span class="number">1</span>],q[i]-q[i+<span class="number">1</span>]))&gt;<span class="built_in">fabs</span>(Cross(q[pos]-q[i+<span class="number">1</span>],q[i]-q[i+<span class="number">1</span>]))) pos%=tail,++pos;</div><div class="line">		cmax(ans,Dot(q[pos]-q[i],q[pos]-q[i]));</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.0lf\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【bzoj1069】最大土地面积"><a href="#【bzoj1069】最大土地面积" class="headerlink" title="【bzoj1069】最大土地面积"></a>【bzoj1069】最大土地面积</h3><p>按照计算几何的套路，求出凸包后，我们发现这四个点中一定包含了2个对踵点</p>
<p>于是上旋转卡壳求出一对对踵点后，在两侧找面积最大的三角形，然后拼在一起</p>
<p>找三角形时，只需要用叉积计算有向面积即可</p>
<p>时间复杂度：$O(n^2)$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">    <span class="keyword">double</span> x,y;</div><div class="line">    Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">    <span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,x,y);&#125;</div><div class="line">    <span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">    <span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">    <span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">    <span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">    <span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">    <span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],q[MAXN];</div><div class="line"><span class="keyword">int</span> n,tail;</div><div class="line"><span class="keyword">double</span> ans;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(Point A,Point B)</span></span>&#123;</div><div class="line">    <span class="keyword">double</span> minn=<span class="number">0</span>,maxx=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tail;++i)&#123;</div><div class="line">        cmax(maxx,Cross(A-q[i],B-q[i])/<span class="number">2</span>);</div><div class="line">        cmin(minn,Cross(A-q[i],B-q[i])/<span class="number">2</span>);</div><div class="line">    &#125;</div><div class="line">    cmax(ans,maxx-minn);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read();</div><div class="line">    sort(A+<span class="number">1</span>,A+n+<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        <span class="keyword">while</span>(tail&gt;<span class="number">1</span>&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">        q[++tail]=A[i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> lim=tail;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;--i)&#123;</div><div class="line">        <span class="keyword">while</span>(tail&gt;lim&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">        q[++tail]=A[i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> pos=<span class="number">2</span>; --tail;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tail;++i)&#123;</div><div class="line">        <span class="keyword">while</span>(<span class="built_in">fabs</span>(Cross(q[pos%tail+<span class="number">1</span>]-q[i+<span class="number">1</span>],q[i]-q[i+<span class="number">1</span>]))&gt;<span class="built_in">fabs</span>(Cross(q[pos]-q[i+<span class="number">1</span>],q[i]-q[i+<span class="number">1</span>]))) pos%=tail,++pos;</div><div class="line">        solve(q[i],q[pos]);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【UVa12307】最小包围盒"><a href="#【UVa12307】最小包围盒" class="headerlink" title="【UVa12307】最小包围盒"></a>【UVa12307】最小包围盒</h3><p>旋转卡壳经典应用：求最小矩形覆盖</p>
<p>首先有一个结论：该矩形一定有一条边与凸包的一条边重合（想想旋转卡壳的原理就知道了）</p>
<p>那么我们的做法就是找到对踵点后，补全这个矩形，然后更新答案</p>
<p>找矩形左右极点时用点积判断，具体参见代码</p>
<p>然后注意：INF不要开小</p>
<p>这题最坑的地方就是卡精度：我的程序eps开到1e-10才过</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-10</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e15</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,x,y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;</div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;</div><div class="line">&#125;A[MAXN],q[MAXN];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dcmp</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">fabs</span>(x)&lt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> x&lt;<span class="number">0</span>?<span class="number">-1</span>:<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-A.y*B.x;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Lenth</span><span class="params">(Point A)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>(Dot(A,A));&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) A[i].read();</div><div class="line">	sort(A+<span class="number">1</span>,A+n+<span class="number">1</span>);  <span class="keyword">int</span> tail=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;<span class="number">1</span>&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> lim=tail;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;lim&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> pos=<span class="number">2</span>; --tail;</div><div class="line">	<span class="keyword">int</span> l=<span class="number">0</span>,r=<span class="number">1</span>;  <span class="keyword">double</span> ans1=INF,ans2=INF;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tail;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">fabs</span>(Cross(q[pos%tail+<span class="number">1</span>]-q[i],q[i+<span class="number">1</span>]-q[i]))&gt;<span class="built_in">fabs</span>(Cross(q[pos]-q[i],q[i+<span class="number">1</span>]-q[i]))) pos%=tail,++pos;</div><div class="line">		<span class="keyword">if</span>(!l) l=pos;</div><div class="line">		<span class="keyword">while</span>(dcmp(Dot(q[i+<span class="number">1</span>]-q[i],q[r%tail+<span class="number">1</span>]-q[r]))&gt;<span class="number">0</span>) r%=tail,++r;</div><div class="line">		<span class="keyword">while</span>(dcmp(Dot(q[i+<span class="number">1</span>]-q[i],q[l%tail+<span class="number">1</span>]-q[l]))&lt;<span class="number">0</span>) l%=tail,++l;</div><div class="line">		<span class="keyword">double</span> h=Cross(q[i+<span class="number">1</span>]-q[i],q[pos]-q[i])/Lenth(q[i+<span class="number">1</span>]-q[i]);</div><div class="line">		<span class="keyword">double</span> w=(Dot(q[i+<span class="number">1</span>]-q[i],q[r]-q[i])-Dot(q[i+<span class="number">1</span>]-q[i],q[l]-q[i]))/Lenth(q[i+<span class="number">1</span>]-q[i]);</div><div class="line">		cmin(ans1,w*h);  cmin(ans2,(w+h)*<span class="number">2</span>);  </div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.2lf %.2lf\n"</span>,ans1,ans2);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF&amp;&amp;n) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】漫话计算几何]]></title>
      <url>/2017/05/24/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="二维几何基础"><a href="#二维几何基础" class="headerlink" title="二维几何基础"></a>二维几何基础</h2><h3 id="向量和点"><a href="#向量和点" class="headerlink" title="向量和点"></a>向量和点</h3><p>关于向量，在数学课上早已详细讲过，这里主要说一下向量和点的区别：</p>
<blockquote>
<p>点-点=向量<br>向量+向量=向量<br>点+向量=点<br>点+点是没有意义的</p>
</blockquote>
<p>在代码实现上，两者都是同样的定义，但是在题目分析时，一定要区分开来</p>
<p>下面是它们的常用定义：</p>
<p>注：极角指从ｘ轴正半轴旋转到该向量方向所需要的角度</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> Point&#123;</div><div class="line">	<span class="keyword">double</span> x,y;</div><div class="line">	Point(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):x(a),y(b)&#123;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;x,&amp;y);&#125;<span class="comment">//读入</span></div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;<span class="built_in">printf</span>(<span class="string">"%.6lf %.6lf "</span>,x,y);&#125;<span class="comment">//输出</span></div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>+(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x+b.x,y+b.y);&#125;<span class="comment">//向量加法</span></div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>-(<span class="keyword">const</span> Point &amp;b)&#123;<span class="keyword">return</span> Point(x-b.x,y-b.y);&#125;<span class="comment">//向量减法</span></div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x*p,y*p);&#125;<span class="comment">//数乘向量</span></div><div class="line">	<span class="keyword">inline</span> Point <span class="keyword">operator</span>/(<span class="keyword">const</span> <span class="keyword">double</span> p)&#123;<span class="keyword">return</span> Point(x/p,y/p);&#125;<span class="comment">//数除向量</span></div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(x-b.x)&lt;eps&amp;&amp;<span class="built_in">fabs</span>(y-b.y)&lt;eps;&#125;<span class="comment">//向量相等</span></div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Point &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> x&lt;b.x||(x==b.x&amp;&amp;y&lt;b.y);&#125;<span class="comment">//排序</span></div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Angle</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> <span class="built_in">atan2</span>(y,x);&#125;<span class="comment">//向量极角</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="基本运算"><a href="#基本运算" class="headerlink" title="基本运算"></a>基本运算</h3><p>点积（定义式）：$v·w=|v||w|cos\theta$</p>
<p>点积（坐标式）：$v·w=v_x w_x + v_y w_y$</p>
<p>利用点积可以计算向量长度和两向量夹角：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Dot</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.x+A.y*B.y;&#125;<span class="comment">//向量点积</span></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Lenth</span><span class="params">(Point A)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>(Dot(A,A));&#125;<span class="comment">//向量长度</span></div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Angle</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">acos</span>(Dot(A,B)/Lenth(A)/Lenth(B));&#125;<span class="comment">//向量夹角</span></div></pre></td></tr></table></figure>
<p>叉积（定义式）：$v\times w=|v||w|sin\theta$</p>
<p>叉积（坐标式）：$v\times w=v_x w_y-v_y w_x$</p>
<p>叉积的几何意义：两个向量$v$和$w$的叉积表示$v$和$w$组成的平行四边形的有向面积</p>
<p>叉积的性质：$v\times w=-w\times v$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Cross</span><span class="params">(Point A,Point B)</span></span>&#123;<span class="keyword">return</span> A.x*B.y-B.x*A.y;&#125;<span class="comment">//向量叉积</span></div></pre></td></tr></table></figure>
<p>向量旋转：（$\alpha$为逆时针旋转的角度）</p>
<p>$x’=x\cos\alpha -y\sin\alpha$</p>
<p>$y’=x\sin\alpha +y\cos\alpha$ </p>
<blockquote>
<p>证明：<br>　　<br><img src="http://i1.piimg.com/591838/4de5476e0664371dt.jpg"><br>　　<br>由上图可知：<br>　　<br>$\frac{x}{\cos\beta}=\frac{y}{\sin\beta}=\frac{x’}{\cos(\alpha+\beta)}=\frac{y’}{\sin(\alpha+\beta)}=R$<br>　　<br>$x’=R\cos(\alpha+\beta)=R\cos\alpha\cos\beta-R\sin\alpha\sin\beta=x\cos\alpha -y\sin\alpha$<br>　　<br>$y’=R\sin(\alpha+\beta)=R\sin\alpha\cos\beta+R\cos\alpha\sin\beta=x\sin\alpha +y\cos\alpha$</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">rotate</span><span class="params">(<span class="keyword">double</span> rad)</span></span>&#123;<span class="keyword">return</span> Point(x*<span class="built_in">cos</span>(rad)-y*<span class="built_in">sin</span>(rad),x*<span class="built_in">sin</span>(rad)+y*<span class="built_in">cos</span>(rad));&#125;<span class="comment">//向量旋转</span></div></pre></td></tr></table></figure>
<p>单位法线：左旋90度，然后把长度化为1即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Normal</span><span class="params">(Point A)</span></span>&#123;<span class="keyword">return</span> Point(-A.y/Lenth(A),A.x/Lenth(A));&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="点和直线"><a href="#点和直线" class="headerlink" title="点和直线"></a>点和直线</h2><h3 id="直线的参数方程"><a href="#直线的参数方程" class="headerlink" title="直线的参数方程"></a>直线的参数方程</h3><p>除了我们熟知的一般式$Ax+By+C=0$外，还有一种在高中数学中比较冷门的表示方法：参数式</p>
<p>但是在计算几何中，由于参数式与向量密切相关，所以应用广泛</p>
<p>直线可以用直线上一点$P_0$和方向向量$v$表示，记做：$P_0+vt$  ($t$为参数)</p>
<p>如果已知直线上两点$A$和$B$，则参数方程就是$A+(B-A)t$</p>
<p>参数方程最方便的地方在于直线、射线、线段的方程形式是一样的，区别仅仅在于参数$t$的值域</p>
<blockquote>
<p>直线：没有限制</p>
<p>射线：$t&gt;0$</p>
<p>线段：$0&lt;t&lt;1$</p>
</blockquote>
<p>　　</p>
<p>　　</p>
<h3 id="直线的交点"><a href="#直线的交点" class="headerlink" title="直线的交点"></a>直线的交点</h3><p>设两直线分别为$P+tv$和$Q+tw$，交点在第一条直线的参数为$t_1$，第二条为$t_2$，则：</p>
<blockquote>
<p>$P_x+t_1 v_x=Q_x+t_2 w_x$</p>
<p>$P_y+t_1 v_y=Q_y+t_2 w_y$</p>
</blockquote>
<p>联立可得：$(v_x w_y-w_x v_y)t_1=w_x(P_y-Q_y)-w_y(P_x-Q_x)$</p>
<p>设$u=P-Q$可得：$t_1=\frac{Cross(w,u)}{Cross(v,w)}$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Intersection</span><span class="params">(Point P,Point v,Point Q,Point w)</span></span>&#123;<span class="comment">//直线交点</span></div><div class="line">	Point u=P-Q;</div><div class="line">	<span class="keyword">double</span> t1=Cross(w,u)/Cross(v,w);</div><div class="line">	<span class="keyword">return</span> P+v*t1;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="点到直线的距离"><a href="#点到直线的距离" class="headerlink" title="点到直线的距离"></a>点到直线的距离</h3><p>直接用叉积计算，即用平行四边形的面积除以底长</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Line_Distance</span><span class="params">(Point A,Point B,Point P)</span></span>&#123;<span class="keyword">return</span> <span class="built_in">fabs</span>(Cross(B-A,P-A)/Lenth(B-A));&#125;<span class="comment">//点到直线距离</span></div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="点到线段的距离"><a href="#点到线段的距离" class="headerlink" title="点到线段的距离"></a>点到线段的距离</h3><p>设投影点为$Q$，如果$Q$在线段$AB$上，则所求距离就是该点到直线$AB$的距离</p>
<p>如果$Q$在射线$BA$上，则所求距离为$PA$距离</p>
<p>否则就是$PB$距离</p>
<p>判断$Q$的位置时用点积进行</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dcmp</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">fabs</span>(x)&lt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> x&lt;<span class="number">0</span>?<span class="number">-1</span>:<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Setment_Distance</span><span class="params">(Point A,Point B,Point P)</span></span>&#123;<span class="comment">//点到线段距离</span></div><div class="line">	<span class="keyword">if</span>(A==B) <span class="keyword">return</span> Lenth(P-A);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(dcmp(Dot(B-A,P-A))&lt;<span class="number">0</span>) <span class="keyword">return</span> Lenth(P-A);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(dcmp(Dot(A-B,P-B))&lt;<span class="number">0</span>) <span class="keyword">return</span> Lenth(P-B);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> Line_Distance(A,B,P);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="求投影点"><a href="#求投影点" class="headerlink" title="求投影点"></a>求投影点</h3><p>求点$P$在直线$AB$上的投影点$Q$</p>
<p>设直线$AB$的参数方程为$A+vt$，点$Q$所对应的参数为$t_0$，那么$Q=A+vt_0$</p>
<p>因为$PQ$垂直$AB$，所以$Dot(v,P-(A+vt_0))=0$</p>
<p>根据分配率展开得到：$t_0=\frac{Dot(v,P-A)}{Dot(v,v)}$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> Point <span class="title">Projection</span><span class="params">(Point A,Point B,Point P)</span></span>&#123;<span class="comment">//点在直线上的投影点</span></div><div class="line">	Point v=B-A;</div><div class="line">	<span class="keyword">return</span> P+v*(Dot(v,P-A)/Dot(v,v));</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="线段相交判定"><a href="#线段相交判定" class="headerlink" title="线段相交判定"></a>线段相交判定</h3><p>线段相交的充要条件：每条线段的两个端点都在另一条线段的两侧</p>
<p>用叉积判断即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Segment_Jiao</span><span class="params">(Point A,Point B,Point C,Point D)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> dcmp(Cross(B-A,C-A)*Cross(B-A,D-A))&lt;<span class="number">0</span>&amp;&amp;dcmp(Cross(D-C,A-C)*Cross(D-C,B-C))&lt;<span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="判断点是否在线段上"><a href="#判断点是否在线段上" class="headerlink" title="判断点是否在线段上"></a>判断点是否在线段上</h3><p>点在直线上的充要条件：叉积等于$0$，点积小于$0$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">On_Segment</span><span class="params">(Point P,Point A,Point B)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> dcmp(Cross(A-P,B-P))==<span class="number">0</span>&amp;&amp;dcmp(Dot(A-P,B-P))&lt;<span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="二维几何常用算法"><a href="#二维几何常用算法" class="headerlink" title="二维几何常用算法"></a>二维几何常用算法</h2><h3 id="求多边形面积"><a href="#求多边形面积" class="headerlink" title="求多边形面积"></a>求多边形面积</h3><p>我们可以从起点出发把多边形分成$n-2$个三角形，然后把面积加起来</p>
<p>三角形的面积用叉积计算即可</p>
<p>值得一提的是这个方法对非凸多边形同样适用</p>
<p>因为我们计算的是三角形的有向面积，在外面的部分可以抵消掉</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">Area</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">double</span> ret=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;++i) ret+=Cross(A[i]-A[<span class="number">1</span>],A[i+<span class="number">1</span>]-A[<span class="number">1</span>]); </div><div class="line">	<span class="keyword">return</span> ret/<span class="number">2</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="点在多边形内判定"><a href="#点在多边形内判定" class="headerlink" title="点在多边形内判定"></a>点在多边形内判定</h3><p>我们作出一条从该点出发水平向右的射线，统计多边形穿过这条射线正反多少次</p>
<p>我们把这个次数记做绕数$wn$，逆时针穿过时，$wn++$，顺时针穿过时，$wn–$</p>
<p>若$wn!=0$就说明点在多边形内</p>
<p>具体实现时，用叉积判断穿过方向，用坐标判断是否穿过</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">check</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> wn=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(On_Segment(P,A[i],A[i+<span class="number">1</span>])) <span class="keyword">return</span> <span class="number">-1</span>;<span class="comment">//在边界上</span></div><div class="line">		<span class="keyword">int</span> k=dcmp(Cross(A[i+<span class="number">1</span>]-A[i],P-A[i]));</div><div class="line">		<span class="keyword">int</span> d1=dcmp(A[i].y-P.y);</div><div class="line">		<span class="keyword">int</span> d2=dcmp(A[i+<span class="number">1</span>].y-P.y);</div><div class="line">		<span class="keyword">if</span>(k&gt;<span class="number">0</span>&amp;&amp;d1&lt;=<span class="number">0</span>&amp;&amp;d2&gt;<span class="number">0</span>) ++wn;</div><div class="line">		<span class="keyword">if</span>(k&lt;<span class="number">0</span>&amp;&amp;d2&lt;=<span class="number">0</span>&amp;&amp;d1&gt;<span class="number">0</span>) --wn;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> wn?<span class="number">1</span>:<span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="凸包"><a href="#凸包" class="headerlink" title="凸包"></a>凸包</h3><p>凸包是把给定点包围在内部的，面积最小的凸多边形</p>
<p>我们一般使用$Andrew$算法求凸包</p>
<p>首先把点按照$x$从小到大排序，采用在线加点的方法，使用单调栈维护上凸包和下凸包</p>
<p>然后把上凸包和下凸包合并起来就是完整的凸包</p>
<p>由于有排序操作，所以时间复杂度为$O(n\log n)$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ConvexHull</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> tail=<span class="number">0</span>;</div><div class="line">	sort(A+<span class="number">1</span>,A+cnt+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;<span class="number">1</span>&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> lim=tail;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=cnt<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(tail&gt;lim&amp;&amp;Cross(q[tail]-q[tail<span class="number">-1</span>],A[i]-q[tail<span class="number">-1</span>])&lt;=<span class="number">0</span>) --tail;</div><div class="line">		q[++tail]=A[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> tail;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="半平面交"><a href="#半平面交" class="headerlink" title="半平面交"></a>半平面交</h3><p>半平面交问题就是给定若干个半平面，求他们的公共部分</p>
<p>半平面一般用有向线段表示，它的左侧就是它所代表的半平面</p>
<p>有向直线的定义如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> Line&#123;</div><div class="line">	Point P,v;  <span class="keyword">double</span> ang;  Line()&#123;&#125; </div><div class="line">	Line(Point P,Point v):P(P),v(v)&#123;ang=<span class="built_in">atan2</span>(v.y,v.x);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt; (<span class="keyword">const</span> Line &amp;b)<span class="keyword">const</span>&#123;<span class="keyword">return</span> ang&lt;b.ang;&#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>求半平面交的方法与凸包类似，先按照极角排序，然后采用在线添加的方式，用双端队列维护</p>
<p>时间复杂度也是$O(n\log n)$，具体细节见代码</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Halfplane_Jiao</span><span class="params">()</span></span>&#123;</div><div class="line">	sort(L+<span class="number">1</span>,L+n+<span class="number">1</span>);  <span class="keyword">int</span> head=<span class="number">1</span>,tail=<span class="number">0</span>; q[++tail]=L[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],L[i])) --tail;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[head],L[i])) ++head;</div><div class="line">		q[++tail]=L[i];</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">fabs</span>(q[tail].ang-q[tail<span class="number">-1</span>].ang)&lt;eps)&#123;</div><div class="line">			--tail;</div><div class="line">			<span class="keyword">if</span>(On_Left(L[i].P,q[tail])) q[tail]=L[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(head&lt;tail) P[tail<span class="number">-1</span>]=Line_Jiao(q[tail<span class="number">-1</span>],q[tail]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(head&lt;tail&amp;&amp;!On_Left(P[tail<span class="number">-1</span>],q[head])) --tail;</div><div class="line">	<span class="keyword">return</span> tail-head&gt;<span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="旋转卡壳"><a href="#旋转卡壳" class="headerlink" title="旋转卡壳"></a>旋转卡壳</h3><p>旋转卡壳算法用于求对踵点</p>
<blockquote>
<p>对踵点：若分别经过$P_i$和$P_j$存在两条平行直线，将整个凸包卡在中间，则称$P_i$和$P_j$为一对对踵点</p>
</blockquote>
<p>我们逆向思考一下：</p>
<p>如果$P_i,P_j$是凸包上最远两点，必然可以分别过$P_i,P_j$画出一对平行线</p>
<p>通过旋转这对平行线，我们可以让它和凸包上的一条边重合，假设这条边为$P_j P_k$</p>
<p>可以注意到，$P_i$是凸包上离直线$P_j P_k$最远的点</p>
<p>于是我们的思路就是枚举凸包上的所有边，对每一条边找出凸包上离该边最远的顶点</p>
<p>计算这个顶点到该边两个端点的距离，并记录最大的值</p>
<p>直观上这是一个$O(n^2)$的算法，和直接枚举任意两个顶点一样了</p>
<p>但是注意到当我们逆时针枚举边的时候，最远点的变化也是逆时针的</p>
<p>这样就可以不用从头计算最远点，而可以紧接着上一次的最远点继续计算</p>
<p>至于判断最远点，用叉积计算对应的三角形面积即可</p>
<p>于是我们得到了$O(n)$的算法，而且代码十分简洁</p>
<p>这里吐个槽：老师看到我在搞旋转卡壳，问我这东西好像得用平衡树维护吧，2333</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> pos=<span class="number">2</span>;  A[n+<span class="number">1</span>]=A[<span class="number">1</span>];</div><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">fabs</span>(Cross(A[pos%n+<span class="number">1</span>]-A[i+<span class="number">1</span>],A[i]-A[i+<span class="number">1</span>]))&gt;<span class="built_in">fabs</span>(Cross(A[pos]-A[i+<span class="number">1</span>],A[i]-A[i+<span class="number">1</span>]))) </div><div class="line">		pos%=n,++pos;</div><div class="line">	<span class="comment">//此时，i和pos就是一对对踵点</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><hr>
<ul>
<li>《算法竞赛入门经典——训练指南》——刘汝佳</li>
<li>《计算几何初步》——cydiater <a href="http://www.cnblogs.com/Cydiater/p/6340218.html" target="_blank" rel="external">传送门</a></li>
<li>《旋转卡壳算法》——Coding <a href="http://www.cppblog.com/staryjy/archive/2009/11/19/101412.html" target="_blank" rel="external">传送门</a></li>
<li>《谈谈我对旋转卡壳算法本质的理解》——金字塔 <a href="http://blog.csdn.net/kingpharaoh/article/details/47807901" target="_blank" rel="external">传送门</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4464】旅行时的困惑]]></title>
      <url>/2017/05/11/4464/</url>
      <content type="html"><![CDATA[<ul>
<li>最小链覆盖第二题<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4464" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>这是最小链覆盖的板子题</p>
<p>关于最小链覆盖问题，我们有一种传递闭包+二分图匹配的做法</p>
<p>但是传递闭包最多是$O(nm/32)$级别的</p>
<p>考虑放弃传递闭包</p>
<p>首先还是拆点，设x被拆成了x和x+n</p>
<p>如果原图是有边(x,y),我们连一条<x,y+n>和<x+n,y+n>流量为INF的边</x+n,y+n></x,y+n></p>
<p>这样做和传递闭包之后的建图是等价的，仔细考虑为什么(其实手玩一组数据就明白了)</p>
<p>注意：这道题中要求所有的边都被覆盖，所以要把所有的边建成点</p>
<p>这样时间复杂度为$O(n\sqrt n)$</p>
<p>啥？你问我$O(n\sqrt n)$能过1e5？笑话，这算什么，$n^2$还能过266666呢</p>
<p>其实我的程序是卡着时限卡过的。。。。。。</p>
<p>前面的人不知道用了什么操作，速度快的一比</p>
<p><img src="http://i1.piimg.com/591838/0c13ba4214058977.png"></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 400100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,S,T,cnt,len(<span class="number">1</span>),In[MAXN],Out[MAXN],Link[MAXN],level[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">    e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">    e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">    q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">        <span class="keyword">int</span> x=q.front(); q.pop();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)&#123;</div><div class="line">            level[e[i].y]=level[x]+<span class="number">1</span>;  q.push(e[i].y);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">    <span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">        <span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">            <span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))&#123;</div><div class="line">                e[i].v-=d;  e[i^<span class="number">1</span>].v+=d; maxflow+=d;                </div><div class="line">            &#125;</div><div class="line">    <span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">    <span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    n=read();  S=++cnt;  T=++cnt;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</div><div class="line">        <span class="keyword">int</span> x=read(),y=read();</div><div class="line">        <span class="keyword">if</span>(!In[x])  In[x]=++cnt,insert(S,In[x],<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span>(!In[y])  In[y]=++cnt,insert(S,In[y],<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span>(!Out[x]) Out[x]=++cnt,insert(Out[x],T,<span class="number">1</span>);</div><div class="line">        <span class="keyword">if</span>(!Out[y]) Out[y]=++cnt,insert(Out[y],T,<span class="number">1</span>);</div><div class="line">        <span class="keyword">int</span> temp1=++cnt,temp2=++cnt;</div><div class="line">        insert(S,temp1,<span class="number">1</span>);  insert(temp2,T,<span class="number">1</span>);</div><div class="line">        insert(In[x],temp2,INF);  insert(Out[x],temp2,INF);</div><div class="line">        insert(temp1,Out[y],INF); insert(temp2,Out[y],INF);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> d=<span class="number">0</span>,ans=n*<span class="number">2</span><span class="number">-1</span>;</div><div class="line">    <span class="keyword">while</span>(bfs())  <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans-=d;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 网络流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1143】祭祀river]]></title>
      <url>/2017/05/11/1143/</url>
      <content type="html"><![CDATA[<ul>
<li>最小链覆盖第一题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1143" target="_blank" rel="external">AC通道</a></p>
<p>这道题中要求的是最长反链</p>
<p>根据Dilworth定理，最长反链=最小链覆盖</p>
<p>具体推荐vfk的博文：<a href="http://vfleaking.blog.163.com/blog/static/1748076342012918105514527/" target="_blank" rel="external">最长反链与最小链覆盖</a></p>
<p>至于做最小链覆盖，我们先做传递闭包，然后用二分图匹配解决</p>
<p>事实上，还有一种复杂度更优的做法，在下一篇文字中介绍</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 205</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="built_in">bitset</span>&lt;MAXN&gt; Int;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[MAXN*MAXN*<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,m,S,T,len(<span class="number">1</span>),Link[MAXN],level[MAXN];</div><div class="line">Int M[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">    e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">    e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">    q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">        <span class="keyword">int</span> x=q.front(); q.pop();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)&#123;</div><div class="line">            level[e[i].y]=level[x]+<span class="number">1</span>;  q.push(e[i].y);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">    <span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">        <span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">            <span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))&#123;</div><div class="line">                e[i].v-=d;  e[i^<span class="number">1</span>].v+=d;  maxflow+=d;</div><div class="line">            &#125;</div><div class="line">    <span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">    <span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    n=read();  m=read();  S=<span class="number">0</span>;  T=n*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">        <span class="keyword">int</span> x=read(),y=read();</div><div class="line">        M[x][y]=<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">        <span class="keyword">if</span>(M[i][j])M[i]|=M[j];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">        <span class="keyword">if</span>(M[i][j])insert(i,j+n,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)insert(S,i,<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)insert(i+n,T,<span class="number">1</span>);</div><div class="line">    <span class="keyword">int</span> ans=n,d=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans-=d;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 网络流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】多项式快速算法——FFT/NTT的应用]]></title>
      <url>/2017/05/05/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E5%A4%9A%E9%A1%B9%E5%BC%8F%E5%BF%AB%E9%80%9F%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94FFT-NTT%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="优化高精度乘法"><a href="#优化高精度乘法" class="headerlink" title="优化高精度乘法"></a>优化高精度乘法</h2><p>朴素的高精度乘法的复杂度是$O(n^2)$的</p>
<p>应用FFT可以做到$O(n\log n)$</p>
<p>我们可以把数写成多项式的形式,例如：</p>
<p>$1523=3\times 10^0 + 2 \times 10^1+5\times 10^2+1\times 10^3$</p>
<p>这样两数相乘实际上就是多项式相乘，上FFT就行了</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">#include&lt;iostream&gt;</div><div class="line">#include&lt;cstdio&gt;</div><div class="line">#include&lt;cstdlib&gt;</div><div class="line">#include&lt;cstring&gt;</div><div class="line">#include&lt;ctime&gt;</div><div class="line">#include&lt;cmath&gt;</div><div class="line">#include&lt;algorithm&gt;</div><div class="line">typedef long long ll;</div><div class="line">#define FILE "read"</div><div class="line">#define MAXN 300010</div><div class="line">#define up(i,j,n) for(int i=j;i&lt;=n;i++)</div><div class="line">#define dn(i,j,n) for(int i=j;i&gt;=n;i--)</div><div class="line">const double pi=acos(-1);</div><div class="line">namespace INIT&#123;</div><div class="line">	char buf[1&lt;&lt;15],*fs,*ft;</div><div class="line">	inline char getc()&#123;return (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,1,1&lt;&lt;15,stdin),fs==ft))?0:*fs++;&#125;</div><div class="line">	inline int read()&#123;</div><div class="line">		int x=0,f=1;  char ch=getc();</div><div class="line">		while(!isdigit(ch))  &#123;if(ch=='-')  f=-1;  ch=getc();&#125;</div><div class="line">		while(isdigit(ch))  &#123;x=x*10+ch-'0';  ch=getc();&#125;</div><div class="line">		return x*f;</div><div class="line">	&#125;</div><div class="line">&#125;using namespace INIT;</div><div class="line">struct complex&#123;</div><div class="line">	double r,v;</div><div class="line">	complex(double a=0,double b=0):r(a),v(b)&#123;&#125;</div><div class="line">	inline complex operator+(const complex&amp; b)&#123;return complex(r+b.r,v+b.v);&#125;</div><div class="line">	inline complex operator-(const complex&amp; b)&#123;return complex(r-b.r,v-b.v);&#125;</div><div class="line">	inline complex operator*(const complex&amp; b)&#123;return complex(r*b.r-v*b.v,v*b.r+r*b.v);&#125;</div><div class="line">&#125;;</div><div class="line">inline void swap(complex&amp; a,complex&amp; b)&#123;complex t(a);a=b;b=t;&#125;</div><div class="line">char ch1[MAXN],ch2[MAXN];</div><div class="line">int n,m,H,L,R[MAXN],ans[MAXN];</div><div class="line">complex w[MAXN],a[MAXN],b[MAXN];</div><div class="line">void FFT(complex* a,int f)&#123;</div><div class="line">	up(i,0,L-1)  if(i&lt;R[i])  swap(a[i],a[R[i]]);</div><div class="line">	for(int len=2;len&lt;=L;len&lt;&lt;=1)&#123;</div><div class="line">		int l=len&gt;&gt;1;</div><div class="line">		complex wn(cos(pi/l),f*sin(pi/l));</div><div class="line">		up(i,1,l-1)  w[i]=w[i-1]*wn;</div><div class="line">		for(int st=0;st&lt;L;st+=len) up(k,0,l-1)&#123;</div><div class="line">			complex x=a[st+k],y=w[k]*a[st+k+len/2];</div><div class="line">			a[st+k]=x+y;  a[st+k+len/2]=x-y;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	scanf("%s%s",ch1+1,ch2+1); w[0].r=1;</div><div class="line">	n=strlen(ch1+1);  m=strlen(ch2+1);</div><div class="line">	for(int len=0,i=n;i;i--,len++)  a[len]=ch1[i]-'0';</div><div class="line">	for(int len=0,i=m;i;i--,len++)  b[len]=ch2[i]-'0';</div><div class="line">	for(L=1,H=0;L&lt;n+m;L&lt;&lt;=1,H++);</div><div class="line">	up(i,0,L-1)  R[i]=(R[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(H-1));</div><div class="line">	FFT(a,1);  FFT(b,1);</div><div class="line">	up(i,0,L-1)  a[i]=a[i]*b[i];</div><div class="line">	FFT(a,-1);</div><div class="line">	int len=300000;</div><div class="line">	up(i,0,n+m-2)  ans[i]=ll(a[i].r/L+0.5);</div><div class="line">	up(i,0,len-1)  ans[i+1]+=ans[i]/10,ans[i]%=10;</div><div class="line">	while(ans[len-1]==0)  len--;</div><div class="line">	dn(i,len-1,0)  printf("%d",ans[i]);</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="计算卷积"><a href="#计算卷积" class="headerlink" title="计算卷积"></a>计算卷积</h2><p>形如$C_k=\sum_{j=0}^{k} A_j B_{k-j}$的式子叫作卷积</p>
<p>利用FFT可以快速求出卷积</p>
<p>如【bzoj2194】<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2194" target="_blank" rel="external">传送门</a></p>
<p>我们把数组来回拧一拧，就成了卷积形式，然后上FFT</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define FILE "read"</div><div class="line">#define MAXN 265000</div><div class="line">const double pi=acos(-1);</div><div class="line">char buf[1&lt;&lt;15],*fs,*ft;</div><div class="line">int n,R[MAXN],L,H;</div><div class="line">struct complex&#123;</div><div class="line">    double r,v;</div><div class="line">    complex(double a=0,double b=0):r(a),v(b)&#123;&#125;</div><div class="line">    inline complex operator+(complex &amp;b)&#123;return complex(r+b.r,v+b.v);&#125;</div><div class="line">    inline complex operator-(complex &amp;b)&#123;return complex(r-b.r,v-b.v);&#125;</div><div class="line">    inline complex operator*(complex &amp;b)&#123;return complex(r*b.r-v*b.v,r*b.v+v*b.r);&#125;</div><div class="line">&#125;a[MAXN],b[MAXN],w[MAXN];</div><div class="line">inline void swap(complex &amp;a,complex &amp;b)&#123;complex t(a);a=b;b=t;&#125;</div><div class="line">inline char getc()&#123;return (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,1,1&lt;&lt;15,stdin),fs==ft))?0:*fs++;&#125;</div><div class="line">inline int read()&#123;</div><div class="line">    int x=0,f=1;  char ch=getc();</div><div class="line">    while(!isdigit(ch))  &#123;if(ch=='-')  f=-1;  ch=getc();&#125;</div><div class="line">    while(isdigit(ch))  &#123;x=x*10+ch-'0';  ch=getc();&#125;</div><div class="line">    return x*f;</div><div class="line">&#125;</div><div class="line">void FFT(complex *a,int f)&#123;</div><div class="line">    for(int i=0;i&lt;L;++i)  if(i&lt;R[i])  swap(a[i],a[R[i]]);</div><div class="line">    for(int len=2;len&lt;=L;len&lt;&lt;=1)&#123;</div><div class="line">        int l=len&gt;&gt;1;  complex wn(cos(pi/l),f*sin(pi/l));</div><div class="line">        for(int i=1;i&lt;l;++i)  w[i]=w[i-1]*wn;</div><div class="line">        for(int st=0;st&lt;L;st+=len) for(int k=0;k&lt;l;++k)&#123;</div><div class="line">            complex x=a[st+k],y=w[k]*a[st+k+l];</div><div class="line">            a[st+k]=x+y;  a[st+k+l]=x-y;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void solve()&#123;</div><div class="line">    n=read();  w[0].r=1;</div><div class="line">    for(int i=0;i&lt;n;++i) a[i]=read(),b[n-i-1]=read();</div><div class="line">    for(L=1,H=0;L&lt;n+n;L&lt;&lt;=1,++H);</div><div class="line">    for(int i=0;i&lt;L;++i) R[i]=(R[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(H-1));</div><div class="line">    FFT(a,1);  FFT(b,1);</div><div class="line">    for(int i=0;i&lt;L;++i) a[i]=a[i]*b[i];</div><div class="line">    FFT(a,-1);</div><div class="line">    for(int i=0;i&lt;n;++i) printf("%d\n",(int)(a[i+n-1].r/L+0.5));</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">    solve();</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="统计和为某值的数的对数"><a href="#统计和为某值的数的对数" class="headerlink" title="统计和为某值的数的对数"></a>统计和为某值的数的对数</h2><h3 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h3><p>【HDU4609】3-idiots</p>
<ul>
<li><a href="https://vjudge.net/problem/HDU-4609" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>题目大意：给出n个正整数，求从中任选3个数(下标不重复)，求以这三个数为长度的边能构成三角形的概率。</p>
<p>分析：令a[i]表示数i有多少个，对a求一遍卷积就可以得到任选两个数，和为x的方案数，这里注意要去一下重</p>
<p>由于三角形两边之和大于第三边，我们就能先用前缀和算出组不成三角形的方案，然后减一下就好了</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define FILE "read"</div><div class="line">#define MAXN 300100</div><div class="line">typedef long long ll;</div><div class="line">const double pi=acos(-1);</div><div class="line">struct complex&#123;</div><div class="line">	double r,v;</div><div class="line">	complex(double a=0,double b=0):r(a),v(b)&#123;&#125;</div><div class="line">	inline complex operator +(const complex &amp;b)&#123;return complex(r+b.r,v+b.v);&#125;</div><div class="line">	inline complex operator -(const complex &amp;b)&#123;return complex(r-b.r,v-b.v);&#125;</div><div class="line">	inline complex operator *(const complex &amp;b)&#123;return complex(r*b.r-v*b.v,r*b.v+v*b.r);&#125;</div><div class="line">&#125;a[MAXN],w[MAXN];</div><div class="line">int n,v[MAXN],R[MAXN];</div><div class="line">ll b[MAXN],sum[MAXN];</div><div class="line">inline int read()&#123;</div><div class="line">	int x=0,f=1;  char ch=getchar();</div><div class="line">	while(ch&gt;'9'||ch&lt;'0')  &#123;if(ch=='-')  f=-1;  ch=getchar();&#125;</div><div class="line">	while(ch&gt;='0'&amp;&amp;ch&lt;='9')  &#123;x=x*10+ch-'0';  ch=getchar();&#125;</div><div class="line">	return x*f;</div><div class="line">&#125;</div><div class="line">inline void swap(complex &amp;a,complex &amp;b)&#123;complex t(a);a=b;b=t;&#125;</div><div class="line">void FFT(complex *a,int f,int L)&#123;</div><div class="line">	for(int i=0;i&lt;L;++i) if(i&lt;R[i]) swap(a[i],a[R[i]]);</div><div class="line">	for(int len=2;len&lt;=L;len&lt;&lt;=1)&#123;</div><div class="line">		int l=(len&gt;&gt;1); complex wn(cos(pi/l),f*sin(pi/l));</div><div class="line">		for(int i=1;i&lt;l;++i) w[i]=w[i-1]*wn;</div><div class="line">		for(int st=0;st&lt;L;st+=len)for(int k=0;k&lt;l;++k)&#123;</div><div class="line">			complex x=a[st+k],y=w[k]*a[st+k+l];</div><div class="line">			a[st+k]=x+y; a[st+k+l]=x-y;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	if(f==-1) for(int i=0;i&lt;L;++i) a[i].r/=L;</div><div class="line">&#125;</div><div class="line">void solve()&#123;</div><div class="line">	n=read(); int L=1,H=0; w[0]=1; ll ans=0;</div><div class="line">	memset(a,0,sizeof(a));</div><div class="line">	memset(v,0,sizeof(v));</div><div class="line">	for(int i=1;i&lt;=n;++i)v[i]=read();</div><div class="line">	for(int i=1;i&lt;=n;++i)a[v[i]].r++;</div><div class="line">	while(L&lt;=200000)L&lt;&lt;=1,++H;</div><div class="line">	for(int i=0;i&lt;L;++i) R[i]=(R[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(H-1));</div><div class="line">	FFT(a,1,L);</div><div class="line">	for(int i=0;i&lt;L;++i)a[i]=a[i]*a[i];</div><div class="line">	FFT(a,-1,L);</div><div class="line">	for(int i=0;i&lt;L;++i)b[i]=(ll)(a[i].r+0.5);</div><div class="line">	for(int i=1;i&lt;=n;++i)b[v[i]*2]--;</div><div class="line">	for(int i=0;i&lt;L;++i)b[i]&gt;&gt;=1;</div><div class="line">	for(int i=1;i&lt;L;++i)sum[i]=sum[i-1]+b[i];</div><div class="line">	for(int i=1;i&lt;=n;++i)ans+=sum[v[i]];</div><div class="line">	ll temp=(ll)n*(n-1)*(n-2)/6;</div><div class="line">	printf("%.7lf\n",(double)(temp-ans)/temp);</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	//freopen(FILE".in","r",stdin);</div><div class="line">	//freopen(FILE".out","w",stdout);</div><div class="line">	for(int T=read();T;--T) solve();</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h3><p>【SPOJ-TSUM】Triple Sums</p>
<p>题目大意：给出n(n&lt;=40000)个整数（绝对值&lt;=20000)，对任意三个下标不同的数求和，问和为-60000到60000的数对各有多少个。</p>
<p>分析：这次变成了三个，唯一的不同点在于去重，用容斥原理搞一搞就行了</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define FILE "read"</div><div class="line">#define MAXN 265000</div><div class="line">const double pi=acos(-1);</div><div class="line">int n,L,H,R[MAXN],v[MAXN],c[MAXN],cnt1[MAXN],cnt2[MAXN],ans[MAXN];</div><div class="line">char buf[1&lt;&lt;15],*fs,*ft;</div><div class="line">struct complex&#123;</div><div class="line">	double r,v;</div><div class="line">	complex(double a=0,double b=0):r(a),v(b)&#123;&#125;</div><div class="line">	inline complex operator+(const complex &amp;b)&#123;return complex(r+b.r,v+b.v);&#125;</div><div class="line">	inline complex operator-(const complex &amp;b)&#123;return complex(r-b.r,v-b.v);&#125;</div><div class="line">	inline complex operator*(const complex &amp;b)&#123;return complex(r*b.r-v*b.v,r*b.v+v*b.r);&#125;</div><div class="line">&#125;a[MAXN],b[MAXN],w[MAXN];</div><div class="line">inline void swap(complex &amp;a,complex &amp;b)&#123;complex t(a);a=b;b=t;&#125;</div><div class="line">inline char getc()&#123;return (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,1,1&lt;&lt;15,stdin),fs==ft))?0:*fs++;&#125;</div><div class="line">inline int read()&#123;</div><div class="line">	int x=0,f=1;  char ch=getc();</div><div class="line">	while(!isdigit(ch))  &#123;if(ch=='-')  f=-1;  ch=getc();&#125;</div><div class="line">	while(isdigit(ch))  &#123;x=x*10+ch-'0';  ch=getc();&#125;</div><div class="line">	return x*f;</div><div class="line">&#125;</div><div class="line">void FFT(complex *a,int f)&#123;</div><div class="line">	for(int i=0;i&lt;L;++i)  if(i&lt;R[i]) swap(a[i],a[R[i]]);</div><div class="line">	for(int len=2;len&lt;=L;len&lt;&lt;=1)&#123;</div><div class="line">		int l=len&gt;&gt;1;  complex wn(cos(pi/l),f*sin(pi/l));</div><div class="line">		for(int i=1;i&lt;l;++i)  w[i]=w[i-1]*wn;</div><div class="line">		for(int st=0;st&lt;L;st+=len) for(int k=0;k&lt;l;++k)&#123;</div><div class="line">			complex x=a[st+k],y=w[k]*a[st+k+l];</div><div class="line">			a[st+k]=x+y;  a[st+k+l]=x-y;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void solve()&#123;</div><div class="line">	n=read(); w[0].r=1;</div><div class="line">	for(int i=1;i&lt;=n;++i) v[i]=read()+20000;</div><div class="line">	for(int i=1;i&lt;=n;++i) a[v[i]].r++,b[v[i]*2].r++,c[v[i]*3]++;</div><div class="line">	for(L=1,H=0;L&lt;120000;L&lt;&lt;=1,++H);</div><div class="line">	for(int i=0;i&lt;L;++i)  R[i]=(R[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(H-1));</div><div class="line">	FFT(a,1);  FFT(b,1);</div><div class="line">	for(int i=0;i&lt;L;++i)  b[i]=b[i]*a[i],a[i]=a[i]*a[i]*a[i];</div><div class="line">	FFT(a,-1);  FFT(b,-1);</div><div class="line">	for(int i=0;i&lt;L;++i)  cnt1[i]=(int)(a[i].r/L+0.5),cnt2[i]=(int)(b[i].r/L+0.5);</div><div class="line">	for(int i=0;i&lt;L;++i)  ans[i]=(cnt1[i]-cnt2[i]*3+c[i]*2)/6;</div><div class="line">	for(int i=0;i&lt;L;++i)  if(ans[i])  printf("%d : %d\n",i-60000,ans[i]);</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	solve();</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="例三"><a href="#例三" class="headerlink" title="例三"></a>例三</h3><p>【bzoj3771】Triple</p>
<p>这道题就是把例一和例二加起来</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define FILE "read"</div><div class="line">#define MAXN 265000</div><div class="line">const double pi=acos(-1);</div><div class="line">int n,L,H,R[MAXN],v[MAXN],c1[MAXN],c2[MAXN],c3[MAXN],ans[MAXN];</div><div class="line">char buf[1&lt;&lt;15],*fs,*ft;</div><div class="line">struct complex&#123;</div><div class="line">    double r,v;</div><div class="line">    complex(double a=0,double b=0):r(a),v(b)&#123;&#125;</div><div class="line">    inline complex operator+(const complex &amp;b)&#123;return complex(r+b.r,v+b.v);&#125;</div><div class="line">    inline complex operator-(const complex &amp;b)&#123;return complex(r-b.r,v-b.v);&#125;</div><div class="line">    inline complex operator*(const complex &amp;b)&#123;return complex(r*b.r-v*b.v,r*b.v+v*b.r);&#125;</div><div class="line">&#125;w[MAXN],a[MAXN],b[MAXN],c[MAXN];</div><div class="line">inline void swap(complex &amp;a,complex &amp;b)&#123;complex t(a);a=b;b=t;&#125;</div><div class="line">inline char getc()&#123;return (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,1,1&lt;&lt;15,stdin),fs==ft))?0:*fs++;&#125;</div><div class="line">inline int read()&#123;</div><div class="line">    int x=0,f=1;  char ch=getc();</div><div class="line">    while(!isdigit(ch))  &#123;if(ch=='-')  f=-1;  ch=getc();&#125;</div><div class="line">    while(isdigit(ch))  &#123;x=x*10+ch-'0';  ch=getc();&#125;</div><div class="line">    return x*f;</div><div class="line">&#125;</div><div class="line">void FFT(complex *a,int f)&#123;</div><div class="line">    for(int i=0;i&lt;L;++i)  if(i&lt;R[i])  swap(a[i],a[R[i]]);</div><div class="line">    for(int len=2;len&lt;=L;len&lt;&lt;=1)&#123;</div><div class="line">        int l=len&gt;&gt;1;  complex wn(cos(pi/l),f*sin(pi/l));</div><div class="line">        for(int i=1;i&lt;l;++i)  w[i]=w[i-1]*wn;</div><div class="line">        for(int st=0;st&lt;L;st+=len) for(int k=0;k&lt;l;++k)&#123;</div><div class="line">            complex x=a[st+k],y=w[k]*a[st+k+l];</div><div class="line">            a[st+k]=x+y;  a[st+k+l]=x-y;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">void solve()&#123;</div><div class="line">    n=read();  w[0].r=1;</div><div class="line">    for(int i=1;i&lt;=n;++i)  v[i]=read();</div><div class="line">    for(int i=1;i&lt;=n;++i)  c1[v[i]]++,c2[v[i]*2]++,c3[v[i]*3]++;</div><div class="line">    for(L=1,H=0;L&lt;120000;L&lt;&lt;=1,++H);</div><div class="line">    for(int i=0;i&lt;L;++i)  a[i].r=c1[i],b[i].r=c2[i];</div><div class="line">    for(int i=0;i&lt;L;++i)  R[i]=(R[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(H-1));</div><div class="line">    FFT(a,1);  FFT(b,1);</div><div class="line">    for(int i=0;i&lt;L;++i)  b[i]=b[i]*a[i],c[i]=a[i]*a[i],a[i]=a[i]*a[i]*a[i];</div><div class="line">    FFT(a,-1);  FFT(b,-1);  FFT(c,-1);</div><div class="line">    for(int i=0;i&lt;L;++i)  ans[i]=((int)(a[i].r/L+0.5)-(int)(b[i].r/L+0.5)*3+c3[i]*2)/6+c1[i]+((int)(c[i].r/L+0.5)-c2[i])/2;</div><div class="line">    for(int i=0;i&lt;L;++i)  if(ans[i])  printf("%d %d\n",i,ans[i]);</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">    solve();</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="例四"><a href="#例四" class="headerlink" title="例四"></a>例四</h3><p>【uva12633】Super Rooks on Chessboard</p>
<p>题目大意：一个n*m的地图上有一些格子里有骑士，每个骑士可以攻击到它所在行，所在列以及所在的从左上到右下的对角线的所有格子，问有多少格子没被任何一个骑士攻击到。</p>
<p>数据范围：n,m&lt;=50000,骑士数&lt;=50000。</p>
<p>分析：如果以左下角为原点，会发现一条对角线上的(x+y)坐标是相同的，且任意两条对角线的(x+y)不同。由此我们就可以联想到卷积了。</p>
<p>设两个数组a,b,a[i]表示第i行是否被占领，b[i]表示第i列是否被占领，是的话值为0，否则值为1。</p>
<p>两个数组求个卷积，把没被攻击的第(x+y）项系数统计出来就行了。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define FILE "read"</div><div class="line">#define MAXN 265000</div><div class="line">typedef long long ll;</div><div class="line">const double pi=acos(-1);</div><div class="line">char buf[1&lt;&lt;15],*fs,*ft;</div><div class="line">ll T,ans,RR,CC,n,L,H,R[MAXN],check[MAXN];</div><div class="line">struct complex&#123;</div><div class="line">	double r,v;</div><div class="line">	complex(double a=0,double b=0):r(a),v(b)&#123;&#125;</div><div class="line">	inline complex operator+(const complex &amp;b)&#123;return complex(r+b.r,v+b.v);&#125;</div><div class="line">	inline complex operator-(const complex &amp;b)&#123;return complex(r-b.r,v-b.v);&#125;</div><div class="line">	inline complex operator*(const complex &amp;b)&#123;return complex(r*b.r-v*b.v,r*b.v+v*b.r);&#125;</div><div class="line">&#125;w[MAXN],a[MAXN],b[MAXN];</div><div class="line">inline void swap(complex &amp;a,complex &amp;b)&#123;complex t(a);a=b;b=t;&#125;</div><div class="line">inline char getc()&#123;return (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,1,1&lt;&lt;15,stdin),fs==ft))?0:*fs++;&#125;</div><div class="line">inline ll read()&#123;</div><div class="line">	ll x=0,f=1;  char ch=getc();</div><div class="line">	while(!isdigit(ch))  &#123;if(ch=='-')  f=-1;  ch=getc();&#125;</div><div class="line">	while(isdigit(ch))  &#123;x=x*10+ch-'0';  ch=getc();&#125;</div><div class="line">	return x*f;</div><div class="line">&#125;</div><div class="line">void FFT(complex *a,ll f)&#123;</div><div class="line">	for(ll i=0;i&lt;L;++i) if(i&lt;R[i]) swap(a[i],a[R[i]]);</div><div class="line">	for(ll len=2;len&lt;=L;len&lt;&lt;=1)&#123;</div><div class="line">		ll l=len&gt;&gt;1; complex wn(cos(pi/l),f*sin(pi/l));</div><div class="line">		for(ll i=1;i&lt;l;++i)  w[i]=w[i-1]*wn;</div><div class="line">		for(ll st=0;st&lt;L;st+=len) for(ll k=0;k&lt;l;++k)&#123;</div><div class="line">			complex x=a[st+k],y=w[k]*a[st+k+l];</div><div class="line">			a[st+k]=x+y;  a[st+k+l]=x-y;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void solve()&#123;</div><div class="line">	RR=read(); CC=read(); n=read(); w[0].r=1; ans=0;</div><div class="line">	memset(a,0,sizeof(a));  memset(b,0,sizeof(b));</div><div class="line">	for(ll i=0;i&lt;RR;++i)  a[i].r=1;</div><div class="line">	for(ll i=0;i&lt;CC;++i)  b[i].r=1;</div><div class="line">	memset(check,0,sizeof(check));</div><div class="line">	for(ll i=1;i&lt;=n;++i)&#123;</div><div class="line">		ll x=RR-read(),y=read()-1;</div><div class="line">		a[x].r=0;  b[y].r=0;  check[x+y]=1;</div><div class="line">	&#125;</div><div class="line">	for(L=1,H=0;L&lt;RR+CC;L&lt;&lt;=1,++H);</div><div class="line">	for(ll i=0;i&lt;L;++i)  R[i]=(R[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(H-1));</div><div class="line">	FFT(a,1);  FFT(b,1);</div><div class="line">	for(ll i=0;i&lt;L;++i)  a[i]=a[i]*b[i];</div><div class="line">	FFT(a,-1);</div><div class="line">	for(ll i=0;i&lt;RR+CC-1;++i) if(!check[i]) ans+=(ll)(a[i].r/L+0.5);</div><div class="line">	printf("%lld\n",ans);</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">	T=read();</div><div class="line">	for(ll i=1;i&lt;=T;++i)</div><div class="line">		printf("Case %lld: ",i),solve();</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="解决01串匹配问题"><a href="#解决01串匹配问题" class="headerlink" title="解决01串匹配问题"></a>解决01串匹配问题</h2><h3 id="例一-1"><a href="#例一-1" class="headerlink" title="例一"></a>例一</h3><p>【bzoj4503】两个串</p>
<p>分析：定义两个长度相同的子串距离为$\sum (a_i-b_i)^2 b_i$</p>
<p>通配符置为0，这样就可以保证距离为0的两个串可以匹配，然后把s2反转一下求卷积就可以了。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define FILE "read"</div><div class="line">#define MAXN 300100</div><div class="line">const double pi=acos(-1);</div><div class="line">int n,m,temp,R[MAXN],f[MAXN],ans[MAXN];</div><div class="line">char a[MAXN],b[MAXN];</div><div class="line">struct complex&#123;</div><div class="line">    double r,v;</div><div class="line">    complex(double a=0,double b=0):r(a),v(b)&#123;&#125;</div><div class="line">    inline complex operator +(const complex &amp;b)&#123;return complex(r+b.r,v+b.v);&#125;</div><div class="line">    inline complex operator -(const complex &amp;b)&#123;return complex(r-b.r,v-b.v);&#125;</div><div class="line">    inline complex operator *(const complex &amp;b)&#123;return complex(r*b.r-v*b.v,r*b.v+v*b.r);&#125;</div><div class="line">&#125;A[MAXN],B[MAXN],C[MAXN],D[MAXN],w[MAXN];</div><div class="line">inline int read()&#123;</div><div class="line">    int x=0,f=1;  char ch=getchar();</div><div class="line">    while(!isdigit(ch))  &#123;if(ch=='-')  f=-1;  ch=getchar();&#125;</div><div class="line">    while(isdigit(ch))  &#123;x=x*10+ch-'0';  ch=getchar();&#125;</div><div class="line">    return x*f;</div><div class="line">&#125;</div><div class="line">inline void swap(complex &amp;a,complex &amp;b)&#123;complex t(a);a=b;b=t;&#125;</div><div class="line">void FFT(complex *a,int f,int L)&#123;</div><div class="line">    for(int i=0;i&lt;L;++i) if(i&lt;R[i]) swap(a[i],a[R[i]]);</div><div class="line">    for(int len=2;len&lt;=L;len&lt;&lt;=1)&#123;</div><div class="line">        int l=(len&gt;&gt;1);  complex wn(cos(pi/l),f*sin(pi/l));</div><div class="line">        for(int i=1;i&lt;l;++i)  w[i]=w[i-1]*wn;</div><div class="line">        for(int st=0;st&lt;L;st+=len)for(int k=0;k&lt;l;++k)&#123;</div><div class="line">            complex x=a[st+k],y=w[k]*a[st+k+l];</div><div class="line">            a[st+k]=x+y;  a[st+k+l]=x-y;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(f==-1) for(int i=0;i&lt;L;++i) a[i].r/=L;</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">    //freopen(FILE".in","r",stdin);</div><div class="line">    //freopen(FILE".out","w",stdout);</div><div class="line">    scanf("%s%s",a,b);</div><div class="line">    n=strlen(a);  m=strlen(b);</div><div class="line">    for(int i=0;i&lt;n;++i) A[i]=a[i]-'a'+1;</div><div class="line">    for(int i=0;i&lt;m;++i) B[i]=(b[i]=='?'?0:b[i]-'a'+1);</div><div class="line">    for(int i=0;i&lt;(m&gt;&gt;1);++i) swap(B[i],B[m-i-1]);</div><div class="line">    for(int i=0;i&lt;n;++i) C[i]=A[i]*A[i];</div><div class="line">    for(int i=0;i&lt;m;++i) D[i]=B[i]*B[i];</div><div class="line">    for(int i=0;i&lt;m;++i) temp+=B[i].r*B[i].r*B[i].r;</div><div class="line">    for(int i=0;i&lt;n;++i) A[i]=A[i]*2;</div><div class="line">    int L=1,H=0; w[0]=1;</div><div class="line">    while(L&lt;=n+m) L&lt;&lt;=1,++H;</div><div class="line">    for(int i=0;i&lt;L;++i) R[i]=(R[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(H-1));</div><div class="line">    FFT(A,1,L);  FFT(B,1,L);  FFT(C,1,L);  FFT(D,1,L);</div><div class="line">    for(int i=0;i&lt;L;++i) A[i]=C[i]*B[i]-A[i]*D[i];</div><div class="line">    FFT(A,-1,L);</div><div class="line">    for(int i=0;i&lt;L;++i) f[i]=(int)(A[i].r+temp+0.5);</div><div class="line">    for(int i=0;i&lt;=n-m;++i) if(f[m-1+i]==0) ans[++ans[0]]=i;</div><div class="line">    printf("%d\n",ans[0]);</div><div class="line">    for(int i=1;i&lt;=ans[0];++i) printf("%d\n",ans[i]);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="优化dp"><a href="#优化dp" class="headerlink" title="优化dp"></a>优化dp</h2><h3 id="例一-2"><a href="#例一-2" class="headerlink" title="例一"></a>例一</h3><p>【ZOJ3874】Permutation Graph</p>
<p>题目大意：给出一个1-n的排列，对于任意一个逆序对，在这两个位置连一条无向边，给你最终每个连通块的元素，求有多少种排列方案。</p>
<p>分析：很容易发现，每个连通块的元素一定是连续的，并且连通块之间顺序是固定的。那么我们可以预处理出长度为i的连通块的方案数，求解复杂度就可以和输入同阶了。</p>
<p>令dp[i]表示长度为i的连通块方案数。</p>
<p>Dp[i]=i!−∑𝑘!∗𝑑𝑝[i-k] (k=1…i),dp[0]=0.</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 300100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">786433</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> G=<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> n,m,fac[MAXN],dp[MAXN],a[MAXN],b[MAXN],R[MAXN],w[MAXN],wn[<span class="number">2</span>][<span class="number">20</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> &amp;a,<span class="keyword">int</span> &amp;b)</span></span>&#123;a=a^b,b=a^b,a=a^b;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">fast</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">ret</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=mul(a,a))<span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=mul(ret,a);<span class="keyword">return</span> ret;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">NTT</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> H,<span class="keyword">int</span> f=<span class="number">0</span>)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> L=(<span class="number">1</span>&lt;&lt;H);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) <span class="keyword">if</span>(i&lt;R[i]) swap(a[i],a[R[i]]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">1</span>;e&lt;=H;++e)&#123;</div><div class="line">		<span class="keyword">int</span> len=(<span class="number">1</span>&lt;&lt;e),l=(len&gt;&gt;<span class="number">1</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;++i) w[i]=mul(w[i<span class="number">-1</span>],wn[f][e]);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> st=<span class="number">0</span>;st&lt;L;st+=len)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;l;++k)&#123;</div><div class="line">			<span class="keyword">int</span> x=a[st+k],y=mul(w[k],a[st+k+l]);</div><div class="line">			a[st+k]=add(x,y); a[st+k+l]=sub(x,y);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(f) <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) a[i]=mul(a[i],fast(L,mod<span class="number">-2</span>));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">CDQ</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	CDQ(l,mid); </div><div class="line">	<span class="keyword">int</span> L=<span class="number">1</span>,H=<span class="number">0</span>; <span class="keyword">while</span>(L&lt;=(r-l+<span class="number">1</span>)) L&lt;&lt;=<span class="number">1</span>,++H;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;L;++i) R[i]=(R[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(H<span class="number">-1</span>));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=mid;++i) a[i-l]=dp[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span>;i&lt;L+l;++i)  a[i-l]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) b[i]=fac[i];</div><div class="line">	NTT(a,H);  NTT(b,H);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) a[i]=mul(a[i],b[i]);</div><div class="line">	NTT(a,H,<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span>;i&lt;=r;++i) (dp[i]+=(mod-a[i-l]))%=mod; </div><div class="line">	CDQ(mid+<span class="number">1</span>,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	w[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	wn[<span class="number">0</span>][<span class="number">18</span>]=fast(G,(mod<span class="number">-1</span>)/(<span class="number">1</span>&lt;&lt;<span class="number">18</span>));</div><div class="line">	wn[<span class="number">1</span>][<span class="number">18</span>]=fast(wn[<span class="number">0</span>][<span class="number">18</span>],mod<span class="number">-2</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">17</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">1</span>;++k)wn[k][i]=mul(wn[k][i+<span class="number">1</span>],wn[k][i+<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">()</span></span>&#123;</div><div class="line">	fac[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100000</span>;++i) fac[i]=mul(fac[i<span class="number">-1</span>],i);</div><div class="line">	dp[<span class="number">0</span>]=<span class="number">0</span>;  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100000</span>;++i) dp[i]=fac[i];</div><div class="line">    pre();  CDQ(<span class="number">1</span>,<span class="number">100000</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read(); m=read(); <span class="keyword">int</span> ans=<span class="number">1</span>,flag=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> cnt=read(),maxx=<span class="number">0</span>,minn=INF;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)&#123;</div><div class="line">			<span class="keyword">int</span> x=read();</div><div class="line">			cmax(maxx,x);</div><div class="line">			cmin(minn,x);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(maxx-minn+<span class="number">1</span>!=cnt)flag=<span class="number">1</span>;</div><div class="line">		ans=mul(ans,dp[cnt]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	Init(); <span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solve());</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="例二-1"><a href="#例二-1" class="headerlink" title="例二"></a>例二</h3><p>【HDU5322】Hope</p>
<p>题目大意：给出一个排列，每个点向它右面离它最近的且比它大的点连无向边，每个连通块的价值为这个连通块大小的平方，每个排列的价值为所有连通块之积。求n个数的所有排列的价值之和。</p>
<p>解析：考虑到放完前i个数再放i+1，不管i+1放在哪里，i+1之前的数形成了一个连通块，且对之后的没有影响。</p>
<p>于是可以列出方程</p>
<p>Dp[i]=sigmak(dp[i-k]<em>k^2</em>C(i-1,k-1)*(k-1)!)</p>
<p>Dp[i]/(i-1)!=sigmak(dp[i-k]/(i-k)!*k^2)</p>
<p>然后就可以CDQ分治做了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 300100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>,G=<span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> n,w[MAXN],f[MAXN],fac[MAXN],A[MAXN],B[MAXN],R[MAXN],inv[MAXN],wn[<span class="number">2</span>][<span class="number">20</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>; ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> &amp;a,<span class="keyword">int</span> &amp;b)</span></span>&#123;a=a^b,b=a^b,a=a^b;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=mod?a-mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+mod:a;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">fast</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">ret</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=mul(a,a))<span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=mul(ret,a);<span class="keyword">return</span> ret;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">NTT</span><span class="params">(<span class="keyword">int</span> *a,<span class="keyword">int</span> H,<span class="keyword">int</span> f=<span class="number">0</span>)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> L=(<span class="number">1</span>&lt;&lt;H);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) <span class="keyword">if</span>(i&lt;R[i]) swap(a[i],a[R[i]]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">1</span>;e&lt;=H;++e)&#123;</div><div class="line">		<span class="keyword">int</span> len=(<span class="number">1</span>&lt;&lt;e),l=(len&gt;&gt;<span class="number">1</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;++i) w[i]=mul(w[i<span class="number">-1</span>],wn[f][e]);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> st=<span class="number">0</span>;st&lt;L;st+=len)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;l;++k)&#123;</div><div class="line">			<span class="keyword">int</span> x=a[st+k],y=mul(w[k],a[st+k+l]);</div><div class="line">			a[st+k]=add(x,y); a[st+k+l]=sub(x,y);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(f) <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) a[i]=mul(a[i],fast(L,mod<span class="number">-2</span>));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">CDQ</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;  </div><div class="line">	CDQ(l,mid);	</div><div class="line">	<span class="keyword">int</span> H=<span class="number">0</span>,L=<span class="number">1</span>; <span class="keyword">while</span>(L&lt;=r-l+<span class="number">1</span>) L&lt;&lt;=<span class="number">1</span>,++H;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) R[i]=(R[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(H<span class="number">-1</span>));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=mid;++i) A[i-l]=mul(f[i],inv[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span>;i&lt;L+l;++i) A[i-l]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) B[i]=mul(i,i);</div><div class="line">	NTT(A,H);  NTT(B,H);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) A[i]=mul(A[i],B[i]);</div><div class="line">	NTT(A,H,<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span>;i&lt;=r;++i) f[i]=add(f[i],mul(A[i-l],fac[i<span class="number">-1</span>]));</div><div class="line">	CDQ(mid+<span class="number">1</span>,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> N=<span class="number">100000</span>;  w[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	fac[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i) fac[i]=mul(fac[i<span class="number">-1</span>],i);</div><div class="line">	inv[N]=fast(fac[N],mod<span class="number">-2</span>); </div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=N<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i) inv[i]=mul(inv[i+<span class="number">1</span>],i+<span class="number">1</span>);</div><div class="line">	wn[<span class="number">0</span>][<span class="number">18</span>]=fast(G,(mod<span class="number">-1</span>)/(<span class="number">1</span>&lt;&lt;<span class="number">18</span>));</div><div class="line">	wn[<span class="number">1</span>][<span class="number">18</span>]=fast(wn[<span class="number">0</span>][<span class="number">18</span>],mod<span class="number">-2</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">17</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">1</span>;++k)wn[k][i]=mul(wn[k][i+<span class="number">1</span>],wn[k][i+<span class="number">1</span>]);</div><div class="line">	f[<span class="number">0</span>]=<span class="number">1</span>;  CDQ(<span class="number">0</span>,N);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	pre(); <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[n]); </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="和数据结构套在一起"><a href="#和数据结构套在一起" class="headerlink" title="和数据结构套在一起"></a>和数据结构套在一起</h2><h3 id="例一（分块FFT）"><a href="#例一（分块FFT）" class="headerlink" title="例一（分块FFT）"></a>例一（分块FFT）</h3><p>【bzoj3509】COUNTARI</p>
<p>考虑暴力做法，枚举中间元素，两边暴力FFT，时间复杂度为$O(n^2logn)$。</p>
<p>然而我们可以优化一些东西。</p>
<p>我们把序列分块，把有至少两个数在同一个块内的(i,j,k)暴力求出来,设块大小是B，n*B的，B大概要设到2000左右。然后对于三个点都在不同块的再暴力FFT就好了。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line">#include&lt;bits/stdc++.h&gt;</div><div class="line">#define FILE "read"</div><div class="line">#define MAXN 300010</div><div class="line">#define N 30000</div><div class="line">typedef long long ll;</div><div class="line">const double pi=acos(-1);</div><div class="line">ll n,block,a[MAXN],R[MAXN],pre[MAXN],suf[MAXN];</div><div class="line">inline int read()&#123;</div><div class="line">    int x=0,f=1;  char ch=getchar();</div><div class="line">    while(!isdigit(ch))  &#123;if(ch=='-')  f=-1;  ch=getchar();&#125;</div><div class="line">    while(isdigit(ch))  &#123;x=x*10+ch-'0';  ch=getchar();&#125;</div><div class="line">    return x*f;</div><div class="line">&#125;</div><div class="line">struct complex&#123;</div><div class="line">    double r,v;</div><div class="line">    complex(double a=0,double b=0):r(a),v(b)&#123;&#125;</div><div class="line">    inline complex operator+(const complex &amp;b)&#123;return complex(r+b.r,v+b.v);&#125;</div><div class="line">    inline complex operator-(const complex &amp;b)&#123;return complex(r-b.r,v-b.v);&#125;</div><div class="line">    inline complex operator*(const complex &amp;b)&#123;return complex(r*b.r-v*b.v,r*b.v+v*b.r);&#125;</div><div class="line">&#125;A[MAXN],B[MAXN],C[MAXN],w[MAXN];</div><div class="line">inline void swap(complex &amp;a,complex &amp;b)&#123;complex t(a);a=b;b=t;&#125;</div><div class="line">inline ll min(ll a,ll b)&#123;return a&lt;b?a:b;&#125;</div><div class="line">inline ll max(ll a,ll b)&#123;return a&lt;b?b:a;&#125;</div><div class="line">void FFT(complex *a,int L,int f)&#123;</div><div class="line">    for(int i=0;i&lt;L;++i) if(i&lt;R[i]) swap(a[i],a[R[i]]);</div><div class="line">    for(int len=2;len&lt;=L;len&lt;&lt;=1)&#123;</div><div class="line">        int l=(len&gt;&gt;1);  complex wn(cos(pi/l),f*sin(pi/l));</div><div class="line">        for(int i=1;i&lt;l;++i)  w[i]=w[i-1]*wn;</div><div class="line">        for(int st=0;st&lt;L;st+=len)for(int k=0;k&lt;l;++k)&#123;</div><div class="line">            complex x=a[st+k],y=w[k]*a[st+k+l];</div><div class="line">            a[st+k]=x+y;  a[st+k+l]=x-y;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    if(f==-1) for(int i=0;i&lt;L;++i) a[i].r/=L;</div><div class="line">&#125;</div><div class="line">int main()&#123;</div><div class="line">    //freopen(FILE".in","r",stdin);</div><div class="line">    //freopen(FILE".out","w",stdout);</div><div class="line">    n=read();  //block=sqrt/(n);  </div><div class="line">    block=1448;</div><div class="line">    ll ans=0;</div><div class="line">    for(int i=1;i&lt;=n;++i)  a[i]=read();</div><div class="line">    for(int i=1;i&lt;=n;++i)  suf[a[i]]++;</div><div class="line">    for(int i=1;i&lt;=n;i+=block)&#123;</div><div class="line">        int l=i,r=min(i+block-1,n);</div><div class="line">        for(int j=l;j&lt;=r;++j)  suf[a[j]]--;</div><div class="line">        for(int j=l;j&lt;=r;++j)&#123;</div><div class="line">            for(int k=j+1;k&lt;=r;++k)&#123;</div><div class="line">                if(a[j]*2-a[k]&gt;=0) ans+=pre[a[j]*2-a[k]];</div><div class="line">                if(a[k]*2-a[j]&gt;=0) ans+=suf[a[k]*2-a[j]];</div><div class="line">            &#125;</div><div class="line">            pre[a[j]]++;</div><div class="line">        &#125;</div><div class="line">    &#125;                </div><div class="line">    int L=1,H=0;  w[0]=1;</div><div class="line">    while(L&lt;=N+N)L&lt;&lt;=1,++H;</div><div class="line">    for(int i=0;i&lt;L;++i) R[i]=(R[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(H-1));</div><div class="line">    for(int i=1;i&lt;=n;i+=block)&#123;</div><div class="line">        int l=i,r=min(i+block-1,n);</div><div class="line">        for(int j=0;j&lt;=N;++j)    pre[j]=suf[j]=0;</div><div class="line">        for(int j=1;j&lt;l;++j)     pre[a[j]]++;</div><div class="line">        for(int j=r+1;j&lt;=n;++j)  suf[a[j]]++;</div><div class="line">        for(int j=0;j&lt;=N;++j)    A[j]=complex(pre[j],0);</div><div class="line">        for(int j=0;j&lt;=N;++j)    B[j]=complex(suf[j],0);</div><div class="line">        for(int j=N+1;j&lt;=L*2;++j)  A[j]=complex(0,0);</div><div class="line">        for(int j=N+1;j&lt;=L*2;++j)  B[j]=complex(0,0);</div><div class="line">        FFT(A,L,1); FFT(B,L,1);</div><div class="line">        for(int j=0;j&lt;L;++j)  C[j]=A[j]*B[j];</div><div class="line">        FFT(C,L,-1);</div><div class="line">        for(int j=l;j&lt;=r;++j)  ans+=(ll)(C[a[j]*2].r+0.5);</div><div class="line">    &#125;</div><div class="line">    printf("%lld\n",ans);</div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 多项式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】多项式快速算法——快速傅里叶变换]]></title>
      <url>/2017/05/04/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E5%A4%9A%E9%A1%B9%E5%BC%8F%E5%BF%AB%E9%80%9F%E7%AE%97%E6%B3%95%E2%80%94%E2%80%94%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E6%8D%A2/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<h2 id="多项式简介"><a href="#多项式简介" class="headerlink" title="多项式简介"></a>多项式简介</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>形如$A(x)=\sum_{i=0}^{n-1} a_i x^i$的式子成为多项式</p>
<p>我们把$n$称为该多项式的次数界</p>
<p>需要注意的是，$n-1$次多项式需要用到$n$个数，次数界的定义为最高次项的次数加一</p>
<p>　　</p>
<h3 id="运算法则"><a href="#运算法则" class="headerlink" title="运算法则"></a>运算法则</h3><p>设$A(x)$和$B(x)$为多项式，且次数界分别为$n$和$m$，即</p>
<p>$A(x)=\sum_{i=0}^{n-1}a_i x^i$</p>
<p>$B(x)=\sum_{i=0}^{m-1}b_i x^i$</p>
<p>则他们遵循如下的运算法则：</p>
<p>$A(x)+B(x)=\sum_{i=0}^{max(n-1,m-1)} (a_i+b_i)x^i$</p>
<p>$A(x)-B(x)=\sum_{i=0}^{max(n-1,m-1)} (a_i-b_i)x^i$</p>
<p>$A(x)B(x)=\sum_{k=0}^{n+m-2}\sum_{i=0}^{k}a_i b_{k-i} x^k$</p>
<p>其中两个多项式相乘的结果称为它们的卷积，两个次数界为$n$和$m$的多项式相乘的卷积的次数界为$n+m-1$</p>
<p>　　</p>
<p>　　</p>
<h2 id="变换与反演"><a href="#变换与反演" class="headerlink" title="变换与反演"></a>变换与反演</h2><h3 id="多项式的两种表示方法"><a href="#多项式的两种表示方法" class="headerlink" title="多项式的两种表示方法"></a>多项式的两种表示方法</h3><p>从上面的定义中，我们可以看到求多项式的卷积复杂度为$O(n^2)$</p>
<p>而$n^2$看起来不太友好的样子，怎么样才算是友好的呢？嗯，我看这个$log$就不错</p>
<p>使用快速傅里叶变换，可将多项式乘法的复杂度降至$O(n\log n)$</p>
<p>事实上除了上面的$A(x)=\sum_{i=0}^{n-1}a_i x^i$的系数表示方法，多项式还有一种表示方法：点值表示法</p>
<p>一个多项式$A(x)$的点值表达就是一个由n个点值对多组成的集合：{$(x_0,y_0),(x_1,y_1),…,(x_{n-1},y_{n-1})$}，对于$0&lt;=k&lt;=n-1$，所有$x_k$各不相同，记作：$y_k=A(x_k)$</p>
<p>　　</p>
<h3 id="求值与插值"><a href="#求值与插值" class="headerlink" title="求值与插值"></a>求值与插值</h3><p>对于一个多项式，如果知道它的系数表达式，我们很容易求出它的点值表达式，这一过程成为求值</p>
<p>如果知道它的点值表达式，让你求它的系数表达式，这一过程称为插值</p>
<blockquote>
<p>定理：当插值多项式的次数界等于已知点值对的数目时，插值才是明确的</p>
</blockquote>
<p>证明：$y_k=A(x_k)$等价于下式：</p>
<p><img src="http://i1.piimg.com/591838/8863b2d7c21e79d3.png"></p>
<p>其中，左边的矩阵称为范德蒙矩阵，其行列式恒不为0，也就是说左边矩阵是存在逆矩阵的</p>
<p>所以系数向量存在且唯一</p>
<p>所以如果我们知道了一个多项式的点值表示，就可以通过矩阵求逆的方法来算出系数向量</p>
<p>　　</p>
<p>　　</p>
<h2 id="离散傅里叶变换"><a href="#离散傅里叶变换" class="headerlink" title="离散傅里叶变换"></a>离散傅里叶变换</h2><h3 id="朴素算法"><a href="#朴素算法" class="headerlink" title="朴素算法"></a>朴素算法</h3><p>根据霍纳法则，我们可以在$O(n)$的时间内完成多项式的单点求值：</p>
<p>$A(x_0)=a_0+x_0(a_1+x_0(a_2+…+x_0(a_{n-2}+x_0(a_{n-1}))))$</p>
<p>所以在$n$个点进行求值的复杂度为$O(n^2)$</p>
<p>我们尝试进行优化</p>
<p>　　</p>
<h3 id="一种分治算法"><a href="#一种分治算法" class="headerlink" title="一种分治算法"></a>一种分治算法</h3><p>对于$A(x)=\sum_{i=0}^{n-1}a_i x^i=a_0+a_1 x+a_2 x^2+a_3 x^3+…+a_{n-1}x^{n-1}$</p>
<p>我们按照奇偶分开来算：</p>
<p>$A(x)=(a_0 x^0+a_2 x^2+…+a_{n-2}x^{n-2})+x(a_1 x^0+a_3 x^2+…+a_{n-1}x^{n-1})$</p>
<p>$A(x)=(a_0 (x^2)^0+a_2 (x^2)^1+…+a_{n-2}(x^2)^{n/2-1})+x(a_1 (x^2)^0+a_3 (x^2)^1+…+a_{n-1}(x^2)^{n/2-1})$ </p>
<p>我们发现左右两边的形式是一样的，都可以被表示成一个多项式的形式</p>
<p>则有如下性质：</p>
<p>$A(x_i)=A_L(A_{i}^{2})+x_iA_R(A_{i}^{2})$</p>
<p>$A(-x_i)=A_L(A_{i}^{2})-x_iA_R(A_{i}^{2})$</p>
<p>这意味着什么？我们可以选择$\frac{n}{2}$个$x_i$进行求值得到$n$个点值，如此不断递归下去</p>
<p>时间复杂度$O(n\log n)$</p>
<p>但是这样做会有问题：x不断平方会爆掉计算机储存的最大值，如果用高精度也是得不偿失</p>
<p>为了解决这个问题，我们引入复数</p>
<p>　　</p>
<p>　　</p>
<h2 id="复数简介"><a href="#复数简介" class="headerlink" title="复数简介"></a>复数简介</h2><h3 id="复数的代数形式"><a href="#复数的代数形式" class="headerlink" title="复数的代数形式"></a>复数的代数形式</h3><p>形如$a+bi$的数我们称为复数，其中$i$为$\sqrt{-1}$</p>
<p>对应的，我们可以用二维平面上的点$(a,b)$来表示这个复数</p>
<p>复数的运算法则和实数类似，你只需要把复数看成一个式子就行了</p>
<p>　　</p>
<h3 id="复数的三角形式"><a href="#复数的三角形式" class="headerlink" title="复数的三角形式"></a>复数的三角形式</h3><p>上面提到的$a+bi$称为复数的代数形式</p>
<p>除此之外，复数还可以用三角函数的形式来表示</p>
<p>如下图所示：</p>
<p><img src="http://i2.muimg.com/591838/de01bf5bf866220ct.jpg"></p>
<p>我们知道复数$a+bi$对应着复平面上的点$(a,b)$，也对应着复平面上的一个向量</p>
<p>这个向量的长度叫作复数$a+bi$的模，记作|$a+bi$|,一般情况下用字母$r$表示</p>
<p>这个向量与$x$轴正方向有一个夹角，称为辐角，一般情况下用希腊字母$\theta$表示</p>
<p>那么显然$a=r\cos\theta$，$b=r\sin\theta$</p>
<p>带入到代数形式的表达式中，可以得到它的三角形式：$a+bi=r(\cos\theta+i\sin\theta)$</p>
<p>　　</p>
<h3 id="复数的指数形式"><a href="#复数的指数形式" class="headerlink" title="复数的指数形式"></a>复数的指数形式</h3><blockquote>
<p>欧拉公式：$e^{i\theta}=\cos\theta+i\sin\theta$</p>
</blockquote>
<p>证明：将$e^x,\sin x,\cos x$按照泰勒公式进行展开得到它们的泰勒级数：</p>
<p>$e^x=1+\frac{x}{1!}+\frac{x^2}{2!}+\frac{x^3}{3!}+…$</p>
<p>$\cos x=1-\frac{x^2}{2!}+\frac{x^4}{4!}-\frac{x^6}{6!}+…$</p>
<p>$\sin x=x-\frac{x^3}{3!}+\frac{x^5}{5!}-\frac{x^7}{7!}$</p>
<p>将$x=i\theta$带入得：</p>
<p>$e^{i\theta}=1+\theta i-\frac{\theta^2}{2!}-\frac{\theta^3}{3!}i+\frac{\theta^4}{4!}+\frac{\theta^5}{5!}i-\frac{\theta^6}{6!}-\frac{\theta^7}{7!}i+…$</p>
<p>$e^{i\theta}=(1-\frac{\theta^2}{2!}+\frac{\theta^4}{4!}-\frac{\theta^6}{6!}+…)+i(\theta-\frac{\theta^3}{3!}+\frac{\theta^5}{5!}-\frac{\theta^7}{7!}+…)$</p>
<p>即$e^{i\theta}=\cos\theta+i\sin\theta$</p>
<p>证毕</p>
<p>将欧拉公式带入到三角形式的表达式中就能得到复数的指数形式表达式：$z=r(\cos\theta+i\sin\theta)=re^{i\theta}$</p>
<p>　　</p>
<h3 id="单位复数根"><a href="#单位复数根" class="headerlink" title="单位复数根"></a>单位复数根</h3><p>在复数域内，有且仅有n个数，使得这个数的n次方等于1，我们把这样的数称为单位复数根，记作　$\omega_{n}^{i}　(i\epsilon [0,n-1])$</p>
<p>将$\theta=2\pi$带入到欧拉公式中得到：$e^{2\pi i}=1$</p>
<p>所以$\omega_{n}^{k}=(e^{\frac{2\pi i}{n}})^k$</p>
<blockquote>
<p>消去引理：$\omega_{dn}^{dk}=\omega_{n}^{k}$</p>
</blockquote>
<p>证明：$\omega_{dn}^{dk}=(e^{\frac{2\pi i}{dn}})^{dk}=(e^{\frac{2\pi i}{n}})^k=\omega_{n}^{k}$</p>
<blockquote>
<p>折半引理：$(\omega_{n}^{k})^2=\omega_{n/2}^{k}$</p>
</blockquote>
<p>证明：将$d=\frac{1}{2}$带入消去引理即可得证</p>
<blockquote>
<p>求和引理：$\sum_{i=0}^{n-1} (\omega_{n}^{k})^i=0$  ($k$不是$n$倍数)</p>
</blockquote>
<p>证明：利用等差数列求和公式：原式$=\frac{(\omega_{n}^{k})^n-1}{\omega_{n}^{k}-1}=\frac{0}{\omega_{n}^{k}-1}$</p>
<p>因为分母不能为$0$，所以${\omega_{n}^{k}}$不能为$1$，所以$k$不是$n$倍数</p>
<blockquote>
<p>循环性质：$(\omega_{n}^{k})^p=\omega_{n}^{pk}=\omega_{n}^{(pk\mod{n})}$</p>
</blockquote>
<p>证明：$\omega_{n}^{kp}=\omega_{n}^{(kp\mod n+\left \lfloor \frac{kp}{n} \right \rfloor n)}=\omega_{n}^{(kp \mod n)}$</p>
<p>有了这些性质，我们发现上面提到的精度问题就解决了，因为单位复数根不断平方可以用折半引理解决</p>
<p>所以我们另$x=\omega_{n}^{k}$，代入到分治算法中就能完成离散傅里叶变换</p>
<p>中文伪代码如下：</p>
<p><img src="http://i4.buimg.com/591838/676266cd0b847acat.jpg"></p>
<p>这里解释一下第12行：</p>
<p>$A(\omega_{n}^{k})=A_L(\omega_{n/2}^{k})+\omega_{n}^{k}A_R(\omega_{n/2}^{k})$</p>
<p>$A(-\omega_{n}^{k})=A_L(\omega_{n/2}^{k})-\omega_{n}^{k}A_R(\omega_{n/2}^{k})$</p>
<p>$-\omega_{n}^{k}=\omega_{n}^{n/2+k}$</p>
<p>所以代码就是这样写的</p>
<p>　　</p>
<p>　　</p>
<h2 id="快速傅里叶逆变换"><a href="#快速傅里叶逆变换" class="headerlink" title="快速傅里叶逆变换"></a>快速傅里叶逆变换</h2><p>现在我们得到了点值表达式，那么如何求系数表达式呢？</p>
<p>矩阵求逆的复杂度是O(n^3)的，范德蒙矩阵求逆可以优化至O(n^2)，但是复杂度依旧很高</p>
<p>我们考虑利用单位复数根的性质进行优化</p>
<p>诶，我看这个求和引理就不错</p>
<p>我们构造一个新的向量：$c_k=\sum_{i=0}^{n-1}y_i (\omega_{n}^{-k})^i$</p>
<p>即多项式$A(x)$在$\omega_{n}^{0}，\omega_{n}^{-1}，\omega_{n}^{-2}…\omega_{n}^{-(n-1)}$处的点值</p>
<p>将$y_i=\sum_{j=0}^{n-1}(\omega_{n}{i})^j$带入上式得到：</p>
<p>$c_k=\sum_{j=0}^{n-1}a_j(\sum_{i=0}^{n-1}(\omega_{n}^{j-k})^i)$</p>
<p>根据求和引理，当且仅当$j=k$时$a_i=\frac{c_i}{n}$</p>
<p>所以我们只需要求出向量$c$，然后除以$n$就能得到系数表达式</p>
<p>我们观察$c$的表达式，这是一个多项式啊有木有，直接套用上面的离散傅里叶变换就行了</p>
<p>　　</p>
<p>　　</p>
<h2 id="模板代码"><a href="#模板代码" class="headerlink" title="模板代码"></a>模板代码</h2><p>这里以uoj34为模板题亮一下代码</p>
<ul>
<li><a href="http://uoj.ac/problem/34" target="_blank" rel="external">AC传送门</a></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi=<span class="built_in">acos</span>(<span class="number">-1</span>);</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 300010</span></div><div class="line"><span class="keyword">int</span> n,m,H(<span class="number">0</span>),L(<span class="number">1</span>),R[MAXN];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">struct</span> <span class="keyword">complex</span>&#123;</div><div class="line">	<span class="keyword">double</span> r,v;</div><div class="line">	<span class="keyword">complex</span>(<span class="keyword">double</span> a=<span class="number">0</span>,<span class="keyword">double</span> b=<span class="number">0</span>):r(a),v(b)&#123;&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">complex</span> <span class="keyword">operator</span>+(<span class="keyword">const</span> <span class="keyword">complex</span> &amp;b)&#123;<span class="keyword">return</span> <span class="keyword">complex</span>(r+b.r,v+b.v);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">complex</span> <span class="keyword">operator</span>-(<span class="keyword">const</span> <span class="keyword">complex</span> &amp;b)&#123;<span class="keyword">return</span> <span class="keyword">complex</span>(r-b.r,v-b.v);&#125;</div><div class="line">	<span class="keyword">inline</span> <span class="keyword">complex</span> <span class="keyword">operator</span>*(<span class="keyword">const</span> <span class="keyword">complex</span> &amp;b)&#123;<span class="keyword">return</span> <span class="keyword">complex</span>(r*b.r-v*b.v,r*b.v+v*b.r);&#125;</div><div class="line">&#125;a[MAXN],b[MAXN],w[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">complex</span> &amp;a,<span class="keyword">complex</span> &amp;b)</span></span>&#123;<span class="function"><span class="keyword">complex</span> <span class="title">t</span><span class="params">(a)</span></span>;a=b;b=t;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">FFT</span><span class="params">(<span class="keyword">complex</span> *a,<span class="keyword">int</span> f)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i)  <span class="keyword">if</span>(i&lt;R[i])  swap(a[i],a[R[i]]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>;len&lt;=L;len&lt;&lt;=<span class="number">1</span>)&#123;</div><div class="line">		<span class="keyword">int</span> l=len&gt;&gt;<span class="number">1</span>;  <span class="comment">//complex wn(cos(pi/l),f*sin(pi/l));  </span></div><div class="line">		<span class="comment">//因为本博客的代码高亮问题，所以不得不注释掉这句代码</span></div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;i++)  w[i]=w[i<span class="number">-1</span>]*wn;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> st=<span class="number">0</span>;st&lt;L;st+=len) <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;l;++k)&#123;</div><div class="line">			<span class="keyword">complex</span> x=a[st+k],y=w[k]*a[st+k+l];</div><div class="line">			a[st+k]=x+y;  a[st+k+l]=x-y;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read()+<span class="number">1</span>,m=read()+<span class="number">1</span>,w[<span class="number">0</span>].r=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)  a[i].r=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;++i)  b[i].r=read();</div><div class="line">	<span class="keyword">while</span>(L&lt;n+m) L&lt;&lt;=<span class="number">1</span>,++H;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i)  R[i]=(R[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(H<span class="number">-1</span>));</div><div class="line">	FFT(a,<span class="number">1</span>);  FFT(b,<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i) a[i]=a[i]*b[i];</div><div class="line">	FFT(a,<span class="number">-1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n+m<span class="number">-1</span>;++i)  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(<span class="keyword">int</span>)(a[i].r+<span class="number">0.5</span>));</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><hr>
<ul>
<li>《算法导论》</li>
<li>《FFT学习笔记》——menci <a href="https://oi.men.ci/fft-notes/" target="_blank" rel="external">传送门</a></li>
<li>《深入探究多项式乘法的快速算法》——闵梓轩 <a href="https://wenku.baidu.com/view/0dcf1cbdcaaedd3382c4d32c.html" target="_blank" rel="external">传送门</a></li>
<li>《复数的三角形式与指数形式》<a href="https://wenku.baidu.com/view/4229ca748e9951e79b892759.html" target="_blank" rel="external">传送门</a></li>
<li>《多项式》——百度百科 <a href="http://baike.baidu.com/link?url=0HuEd3b2kN1t8lvvl_m--kr_EnNraMuwdmEyOL3Iaacisw1uOUxylj-J1DR0NoC4Wgsn2n-B72hqVs3YykDz6vx-13ALQRozswDY6q38qg4zCAyLB4tF-owYH1f6kMff" target="_blank" rel="external">传送门</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 多项式 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【SHOI2017】解题报告]]></title>
      <url>/2017/05/02/%E3%80%90%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A%E3%80%91SHOI2017%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="期末考试"><a href="#期末考试" class="headerlink" title="期末考试"></a>期末考试</h2><ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4868" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>我们发现最终的答案之和课程结束的最晚时间有关</p>
<p>所以朴素的思路就是枚举课程结束的最晚时间，然后计算答案</p>
<p>计算答案时，如果B&lt;=A，则全部用B，否则尽量多地用A</p>
<p>至于满分做法，把枚举换成三分就行了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"exam"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b) </span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line">ll A,B,C,n,m,ans,a[MAXN],b[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">get</span><span class="params">(ll mid)</span></span>&#123;</div><div class="line">    ll ret=<span class="number">0</span>,temp=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(a[i]&lt;mid)ret+=(mid-a[i])*C;</div><div class="line">    <span class="keyword">if</span>(B&lt;=A)&#123;</div><div class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=m;++i)<span class="keyword">if</span>(b[i]&gt;mid)ret+=(b[i]-mid)*B;</div><div class="line">        <span class="keyword">return</span> ret;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(b[i]&lt;mid)temp+=mid-b[i];</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            ll last=b[i]-mid,t=min(temp,last);</div><div class="line">            ret+=t*A;</div><div class="line">            temp-=t; last-=t;</div><div class="line">            ret+=last*B;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    A=read();  B=read();  C=read();</div><div class="line">    n=read();  m=read();  ans=INF;</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=m;++i)  b[i]=read();</div><div class="line">    sort(b+<span class="number">1</span>,b+m+<span class="number">1</span>); sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</div><div class="line">    ll l=<span class="number">1</span>,r=b[m]; <span class="keyword">if</span>(C==<span class="number">1e16</span>) r=a[<span class="number">1</span>];</div><div class="line">    <span class="keyword">while</span>(l+<span class="number">10</span>&lt;r)&#123;</div><div class="line">        ll mid1=(r-l)/<span class="number">3</span>+l,mid2=(r-l)*<span class="number">2</span>/<span class="number">3</span>+l;</div><div class="line">        <span class="keyword">if</span>(get(mid1)&lt;=get(mid2))  r=mid2;</div><div class="line">        <span class="keyword">else</span> l=mid1;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(ll i=l;i&lt;=r;++i)  cmin(ans,get(i));</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="相逢是问候"><a href="#相逢是问候" class="headerlink" title="相逢是问候"></a>相逢是问候</h2><ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4869" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>首先介绍扩展欧拉定理：$a^b mod p=a^{b mod \phi(p) +\phi(p)} mod p$ </p>
<p>然后我们发现一个数$p$，不断取欧拉函数，我们设取了$cnt$次之后变成了$1$</p>
<p>可以证明$cnt&lt;=\log p$</p>
<p>所以我们用线段树维护即可，如果当前结点被修改的次数已经大于了$cnt$，就无需再访问了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,m,c,cnt,mod[<span class="number">35</span>],Time[MAXN&lt;&lt;<span class="number">2</span>],check[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line">ll tr[MAXN&lt;&lt;<span class="number">2</span>],a[MAXN];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">    <span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>((ll)a*b&lt;p) <span class="keyword">return</span> a*b;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">return</span> (ll)a*b%p+p;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">fast</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">ret</span><span class="params">(<span class="number">1</span>)</span></span>;</div><div class="line">    <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=mul(a,a,p))</div><div class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ret=mul(ret,a,p);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">phi</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> ret=x;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=x;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>) ret-=ret/i;</div><div class="line">        <span class="keyword">while</span>(x%i==<span class="number">0</span>)  x/=i;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(x&gt;<span class="number">1</span>)  ret-=ret/x;</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">relord</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    check[p]|=(check[p&lt;&lt;<span class="number">1</span>]&amp;&amp;check[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</div><div class="line">    tr[p]=(tr[p&lt;&lt;<span class="number">1</span>]+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>])%mod[<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(l==r) &#123;tr[p]=a[l]; <span class="keyword">return</span>;&#125;</div><div class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">    build(p&lt;&lt;<span class="number">1</span>,l,mid); build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">    relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(check[p])  <span class="keyword">return</span>;</div><div class="line">    <span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span>;</div><div class="line">    <span class="keyword">if</span>(l==r)&#123;</div><div class="line">        Time[l]++;  <span class="keyword">if</span>(Time[l]==cnt) check[p]=<span class="number">1</span>;</div><div class="line">        <span class="keyword">int</span> temp=a[l];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Time[l]<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i) temp=fast(c,temp,mod[i]);</div><div class="line">        tr[p]=temp; <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">    updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y); </div><div class="line">    updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">    relord(p);</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  <span class="keyword">return</span> tr[p];</div><div class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">    <span class="keyword">return</span> (query(p&lt;&lt;<span class="number">1</span>,l,mid,x,y)+query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y))%mod[<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    n=read();  m=read();  mod[<span class="number">0</span>]=read();  c=read();</div><div class="line">    <span class="keyword">while</span>(mod[cnt]!=<span class="number">1</span>) mod[++cnt]=phi(mod[cnt<span class="number">-1</span>]); mod[++cnt]=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">    build(<span class="number">1</span>,<span class="number">1</span>,n);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">        <span class="keyword">int</span> opt=read(),l=read(),r=read();</div><div class="line">        <span class="keyword">if</span>(opt==<span class="number">0</span>) updata(<span class="number">1</span>,<span class="number">1</span>,n,l,r);</div><div class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,query(<span class="number">1</span>,<span class="number">1</span>,n,l,r));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="组合数问题"><a href="#组合数问题" class="headerlink" title="组合数问题"></a>组合数问题</h2><ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4870" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>首先暴力算组合数给了$60$分，出题人好良心啊</p>
<p>我们考虑这个和式的组合意义：在$nk$个物品中取出数量为模$k$等于$r$的物品的方案数</p>
<p>那么我们设$f[i][j]$表示前i个物品中选出模$k$等于$j$的数量的物品的方案数</p>
<p>则$f[i][j]=f[i-1][j]+f[i-1][j-1]$;</p>
<p>然后我们发现这个东西可以用矩阵乘法来优化转移</p>
<p>然后。。。就结束了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,p,K,r;</div><div class="line">ll c[<span class="number">55</span>][<span class="number">55</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">    ll a[<span class="number">55</span>][<span class="number">55</span>];</div><div class="line">    node()&#123;<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));&#125;</div><div class="line">&#125;ret,ans;</div><div class="line">node <span class="keyword">operator</span> *(node &amp;a,node &amp;b)&#123;</div><div class="line">    node c;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;K;++i)</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;K;++j)</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;K;++k)</div><div class="line">                c.a[i][j]=(c.a[i][j]+a.a[i][k]*b.a[k][j]%p)%p;</div><div class="line">    <span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=K;++i)&#123;</div><div class="line">        c[i][<span class="number">0</span>]=c[i][i]=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;++j)</div><div class="line">            c[i][j]=(c[i<span class="number">-1</span>][j]+c[i<span class="number">-1</span>][j<span class="number">-1</span>])%p;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">    n=read(); p=read(); K=read(); r=read(); pre();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;K;++i)ans.a[i][i]=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;K;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=K;++j)(ret.a[i][(i+j)%K]+=c[K][j])%=p;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> b=n;b;b&gt;&gt;=<span class="number">1</span>,ret=ret*ret)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)ans=ans*ret;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans.a[<span class="number">0</span>][r]);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="摧毁“树状图”"><a href="#摧毁“树状图”" class="headerlink" title="摧毁“树状图”"></a>摧毁“树状图”</h2><ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4871" target="_blank" rel="external">AC通道</a></li>
<li>推荐一份题解：<a href="http://blog.csdn.net/ziqian2000/article/details/70880698" target="_blank" rel="external">传送门</a></li>
</ul>
<p>这是我写过的最恶心的树形dp</p>
<p>我很想知道出题人是怎么想出来的</p>
<p>随便写了一发，在bzoj上拿到了rank1，23333</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b)  a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b)  a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> T,opt,n,len,ans,Link[MAXN],mx[<span class="number">5</span>],mxf[<span class="number">5</span>],suf[MAXN],pre[MAXN],a[MAXN],f[MAXN][<span class="number">5</span>];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">    <span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> degree=<span class="number">0</span>,top=<span class="number">0</span>,ret=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)dp(e[i].y,x),++degree;</div><div class="line">    <span class="built_in">memset</span>(mx,<span class="number">0</span>,<span class="keyword">sizeof</span>(mx));</div><div class="line">    <span class="built_in">memset</span>(mxf,<span class="number">0</span>,<span class="keyword">sizeof</span>(mxf));</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">        <span class="keyword">int</span> y=e[i].y;</div><div class="line">        <span class="keyword">if</span>(f[y][<span class="number">0</span>]&gt;mx[<span class="number">1</span>])        mx[<span class="number">4</span>]=mx[<span class="number">3</span>],mx[<span class="number">3</span>]=mx[<span class="number">2</span>],mx[<span class="number">2</span>]=mx[<span class="number">1</span>],mx[<span class="number">1</span>]=f[y][<span class="number">0</span>];</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(f[y][<span class="number">0</span>]&gt;mx[<span class="number">2</span>])  mx[<span class="number">4</span>]=mx[<span class="number">3</span>],mx[<span class="number">3</span>]=mx[<span class="number">2</span>],mx[<span class="number">2</span>]=f[y][<span class="number">0</span>];</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(f[y][<span class="number">0</span>]&gt;mx[<span class="number">3</span>])  mx[<span class="number">4</span>]=mx[<span class="number">3</span>],mx[<span class="number">3</span>]=f[y][<span class="number">0</span>];</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(f[y][<span class="number">0</span>]&gt;mx[<span class="number">4</span>])  mx[<span class="number">4</span>]=f[y][<span class="number">0</span>];</div><div class="line">        a[++top]=f[y][<span class="number">0</span>];</div><div class="line">        cmax(f[x][<span class="number">2</span>],f[y][<span class="number">2</span>]);</div><div class="line">        cmax(f[x][<span class="number">2</span>],f[y][<span class="number">1</span>]+<span class="number">1</span>);</div><div class="line">        cmax(f[x][<span class="number">3</span>],f[y][<span class="number">3</span>]+degree<span class="number">-1</span>);</div><div class="line">        cmax(f[x][<span class="number">4</span>],f[y][<span class="number">4</span>]+degree<span class="number">-1</span>);</div><div class="line">        cmax(f[x][<span class="number">3</span>],f[y][<span class="number">1</span>]+degree<span class="number">-1</span>);</div><div class="line">        cmax(f[x][<span class="number">3</span>],f[y][<span class="number">2</span>]+degree<span class="number">-1</span>);</div><div class="line">        cmax(f[x][<span class="number">3</span>],f[y][<span class="number">1</span>]+mxf[<span class="number">0</span>]+degree<span class="number">-2</span>);</div><div class="line">        cmax(f[x][<span class="number">3</span>],f[y][<span class="number">2</span>]+mxf[<span class="number">0</span>]+degree<span class="number">-2</span>);</div><div class="line">        cmax(f[x][<span class="number">3</span>],f[y][<span class="number">0</span>]+mxf[<span class="number">1</span>]+degree<span class="number">-2</span>);</div><div class="line">        cmax(f[x][<span class="number">3</span>],f[y][<span class="number">0</span>]+mxf[<span class="number">2</span>]+degree<span class="number">-2</span>);</div><div class="line">        cmax(mxf[<span class="number">0</span>],f[y][<span class="number">0</span>]);</div><div class="line">        cmax(mxf[<span class="number">1</span>],f[y][<span class="number">1</span>]);</div><div class="line">        cmax(mxf[<span class="number">2</span>],f[y][<span class="number">2</span>]);</div><div class="line">    &#125;</div><div class="line">    cmax(f[x][<span class="number">0</span>],degree);</div><div class="line">    cmax(f[x][<span class="number">0</span>],mx[<span class="number">1</span>]+degree<span class="number">-1</span>);</div><div class="line">    cmax(f[x][<span class="number">1</span>],f[x][<span class="number">0</span>]);</div><div class="line">    cmax(f[x][<span class="number">1</span>],mx[<span class="number">1</span>]+mx[<span class="number">2</span>]+degree<span class="number">-2</span>);</div><div class="line">    cmax(f[x][<span class="number">4</span>],mx[<span class="number">1</span>]+mx[<span class="number">2</span>]+mx[<span class="number">3</span>]+degree<span class="number">-3</span>);</div><div class="line">    cmax(f[x][<span class="number">4</span>],mx[<span class="number">1</span>]+mx[<span class="number">2</span>]+degree<span class="number">-2</span>);</div><div class="line">    cmax(f[x][<span class="number">4</span>],mx[<span class="number">1</span>]+degree<span class="number">-1</span>);</div><div class="line">    pre[<span class="number">0</span>]=suf[top+<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=top;++i)pre[i]=max(pre[i<span class="number">-1</span>],a[i]);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=top;i&gt;=<span class="number">1</span>;--i)suf[i]=max(suf[i+<span class="number">1</span>],a[i]);</div><div class="line">    cmax(ret,f[x][<span class="number">1</span>]);</div><div class="line">    cmax(ret,f[x][<span class="number">3</span>]);</div><div class="line">    cmax(ret,f[x][<span class="number">4</span>]);</div><div class="line">    cmax(ret,mx[<span class="number">1</span>]+degree<span class="number">-1</span>);</div><div class="line">    cmax(ret,mx[<span class="number">1</span>]+mx[<span class="number">2</span>]+degree<span class="number">-2</span>);</div><div class="line">    cmax(ret,mx[<span class="number">1</span>]+mx[<span class="number">2</span>]+mx[<span class="number">3</span>]+degree<span class="number">-3</span>);</div><div class="line">    cmax(ret,mx[<span class="number">1</span>]+mx[<span class="number">2</span>]+mx[<span class="number">3</span>]+mx[<span class="number">4</span>]+degree<span class="number">-4</span>);</div><div class="line">    <span class="built_in">memset</span>(mx,<span class="number">0</span>,<span class="keyword">sizeof</span>(mx));</div><div class="line">    <span class="built_in">memset</span>(mxf,<span class="number">0</span>,<span class="keyword">sizeof</span>(mxf));</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x],j=<span class="number">1</span>;i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">        <span class="keyword">int</span> y=e[i].y;</div><div class="line">        cmax(ret,f[y][<span class="number">0</span>]+mxf[<span class="number">3</span>]+degree<span class="number">-2</span>);</div><div class="line">        cmax(ret,f[y][<span class="number">3</span>]+mx[<span class="number">1</span>]+degree<span class="number">-2</span>);</div><div class="line">        cmax(ret,max(f[y][<span class="number">1</span>],f[y][<span class="number">2</span>])+mx[<span class="number">1</span>]+mx[<span class="number">2</span>]+degree<span class="number">-3</span>);</div><div class="line">        cmax(ret,f[y][<span class="number">0</span>]+max(mxf[<span class="number">1</span>],mxf[<span class="number">2</span>])+suf[j+<span class="number">1</span>]+degree<span class="number">-3</span>);</div><div class="line">        cmax(ret,max(f[y][<span class="number">1</span>],f[y][<span class="number">2</span>])+pre[j<span class="number">-1</span>]+suf[j+<span class="number">1</span>]+degree<span class="number">-3</span>);</div><div class="line">        cmax(ret,f[y][<span class="number">1</span>]+mxf[<span class="number">1</span>]+<span class="number">1</span>-(fa?<span class="number">1</span>:<span class="number">0</span>));</div><div class="line">        cmax(ret,f[y][<span class="number">1</span>]+mxf[<span class="number">2</span>]-(fa?<span class="number">1</span>:<span class="number">0</span>));</div><div class="line">        cmax(ret,f[y][<span class="number">2</span>]+mxf[<span class="number">1</span>]-(fa?<span class="number">1</span>:<span class="number">0</span>));</div><div class="line">        cmax(ret,f[y][<span class="number">2</span>]+mxf[<span class="number">2</span>]<span class="number">-1</span>-(fa?<span class="number">1</span>:<span class="number">0</span>));</div><div class="line">        cmax(ret,f[y][<span class="number">4</span>]+mx[<span class="number">1</span>]+degree<span class="number">-2</span>);</div><div class="line">        cmax(ret,f[y][<span class="number">0</span>]+mxf[<span class="number">4</span>]+degree<span class="number">-2</span>);</div><div class="line">        <span class="keyword">if</span>(f[y][<span class="number">0</span>]&gt;mx[<span class="number">1</span>])  mx[<span class="number">2</span>]=mx[<span class="number">1</span>],mx[<span class="number">1</span>]=f[y][<span class="number">0</span>];</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(f[y][<span class="number">0</span>]&gt;mx[<span class="number">2</span>])  mx[<span class="number">2</span>]=f[y][<span class="number">0</span>];</div><div class="line">        cmax(mxf[<span class="number">1</span>],f[y][<span class="number">1</span>]);</div><div class="line">        cmax(mxf[<span class="number">2</span>],f[y][<span class="number">2</span>]);</div><div class="line">        cmax(mxf[<span class="number">3</span>],f[y][<span class="number">3</span>]);</div><div class="line">        cmax(mxf[<span class="number">4</span>],f[y][<span class="number">4</span>]);</div><div class="line">        ++j;</div><div class="line">    &#125;</div><div class="line">    cmax(ans,ret+(fa?<span class="number">1</span>:<span class="number">0</span>));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">    n=read(); <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=opt;++i) read(),read();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;<span class="keyword">int</span> x=read(),y=read();insert(x,y);insert(y,x);&#125;</div><div class="line">    dp(<span class="number">1</span>,<span class="number">0</span>);  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    len=ans=<span class="number">0</span>;<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)Link[i]=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">4</span>;++j)f[i][j]=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    T=read();  opt=read();</div><div class="line">    <span class="keyword">while</span>(T--) solve();</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="分手是祝愿"><a href="#分手是祝愿" class="headerlink" title="分手是祝愿"></a>分手是祝愿</h2><p>出这种题目名称，还赋予这种含义，出题人应该被打死</p>
<p><img src="http://i1.piimg.com/591838/56579a2b47a22a81.png"></p>
<p>我发现我对概率与期望还是不熟悉</p>
<p>首先有一个结论：当前亮着的编号最大的灯，只能由自己熄灭</p>
<p>所以我们可以模拟一遍，算出当前必须摁灭的开关的数量$cnt$，我们称这$cnt$个操作是正确的</p>
<p>我们设$f[i]$表示使i个正确操作变成$i-1$个正确操作的期望步数</p>
<p>则$f[i]=\frac{n}{i}+1-\frac{n}{i}(f[i]+f[i+1]+1)$</p>
<p>整理一下得到递推式：$f[i]=\frac{(n-i)f[i+1]+n}{i}$</p>
<p>至于k的限制，我们特判一下就行了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"trennen"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100100</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> ll mod=<span class="number">100003</span>;</div><div class="line">ll n,k,cnt,ans,f[MAXN],a[MAXN],inv[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    n=read();  k=read();</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</div><div class="line">    <span class="keyword">for</span>(ll i=n;i;--i)<span class="keyword">if</span>(a[i])&#123;</div><div class="line">        <span class="keyword">for</span>(ll j=<span class="number">1</span>;j*j&lt;=i;++j)<span class="keyword">if</span>(i%j==<span class="number">0</span>)&#123;</div><div class="line">            a[j]^=<span class="number">1</span>;  a[i/j]^=<span class="number">1</span>;</div><div class="line">            <span class="keyword">if</span>(j*j==i) a[j]^=<span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        ++cnt;</div><div class="line">    &#125;</div><div class="line">    inv[<span class="number">1</span>]=<span class="number">1</span>;<span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=n;++i)inv[i]=(mod-mod/i)*inv[mod%i]%mod;</div><div class="line">    <span class="keyword">for</span>(ll i=n;i;--i)f[i]=((n-i)*f[i+<span class="number">1</span>]%mod+n)%mod*inv[i]%mod;</div><div class="line">    <span class="keyword">if</span>(k&gt;cnt) ans=cnt;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">for</span>(ll i=cnt;i&gt;k;--i)ans=(ans+f[i])%mod;</div><div class="line">        ans=(ans+k)%mod;</div><div class="line">    &#125;           </div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)ans=ans*i%mod;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="寿司餐厅"><a href="#寿司餐厅" class="headerlink" title="寿司餐厅"></a>寿司餐厅</h2><ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4873" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>我们注意到如果选一个区间，就必须选这个区间的子区间</p>
<p>选择一个区间的收益可正可负，那么这就是最大权闭合图的模型</p>
<p>建图上也很容易，不再详述了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,S,T,ans,cnt,len(<span class="number">1</span>),Link[MAXN],level[MAXN],a[MAXN],id[MAXN],Id[<span class="number">110</span>][<span class="number">110</span>],v[<span class="number">110</span>][<span class="number">110</span>];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">    e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">    e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">    q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">        <span class="keyword">int</span> x=q.front(); q.pop();</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)</div><div class="line">            q.push(e[i].y),level[e[i].y]=level[x]+<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">    <span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">        <span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">            <span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))</div><div class="line">                e[i].v-=d,e[i^<span class="number">1</span>].v+=d,maxflow+=d;</div><div class="line">    <span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">    <span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    n=read();  m=read();  S=<span class="number">0</span>;  T=++cnt;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)a[i]=read();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n;++j)v[i][j]=read();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        v[i][i]-=a[i];  Id[i][i]=++cnt;</div><div class="line">        <span class="keyword">if</span>(!id[a[i]])  id[a[i]]=++cnt,insert(id[a[i]],T,a[i]*a[i]*m);</div><div class="line">        insert(Id[i][i],id[a[i]],INF);</div><div class="line">        <span class="keyword">if</span>(v[i][i]&lt;<span class="number">0</span>)  insert(Id[i][i],T,-v[i][i]);</div><div class="line">        <span class="keyword">else</span> insert(S,Id[i][i],v[i][i]),ans+=v[i][i];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>;len&lt;=n;++len)<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</div><div class="line">        Id[i][j]=++cnt;</div><div class="line">        insert(Id[i][j],Id[i][j<span class="number">-1</span>],INF);</div><div class="line">        insert(Id[i][j],Id[i+<span class="number">1</span>][j],INF);</div><div class="line">        <span class="keyword">if</span>(v[i][j]&lt;<span class="number">0</span>)  insert(Id[i][j],T,-v[i][j]);</div><div class="line">        <span class="keyword">else</span> insert(S,Id[i][j],v[i][j]),ans+=v[i][j];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> d=<span class="number">0</span>;</div><div class="line">    <span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans-=d;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这场比赛我拿到了182分，分别是10+40+65+52+0+15</p>
<p>如果这是我省省选，我现在应该就已经退役了</p>
<p>考试中有不少遗憾，比如：</p>
<p>T1的70分暴力没有拿到</p>
<p>T2和T3和T4的暴力分拿的很足不说了</p>
<p>T5爆零十分遗憾，因为直接输出最小步数就有80分</p>
<p>T6我想出了最大权闭合图的模型，但是不会做最大权闭合图</p>
<p>如何尽量避免这些问题？</p>
<p>我想只能靠平时的查漏补缺了</p>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 树形dp </tag>
            
            <tag> bzoj </tag>
            
            <tag> 网络流 </tag>
            
            <tag> 三分 </tag>
            
            <tag> 概率dp </tag>
            
            <tag> 矩阵乘法 </tag>
            
            <tag> 数论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】回文自动机]]></title>
      <url>/2017/04/30/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E5%9B%9E%E6%96%87%E8%87%AA%E5%8A%A8%E6%9C%BA/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>回文自动机，简称$PAM$，可以识别母串$S$的所有回文子串</p>
<p>与后缀自动机相比，回文自动机简单易懂</p>
<p>我们知道解决回文串问题的一个强力算法$manacher$算法</p>
<p>事实上，根据我的理解，回文自动机与$manacher$算法的关系正如后缀自动机与后缀数组的关系一样</p>
<p>回文自动机关注的是整个串的回文性质，而$manacher$算法关注的是每个字符的回文性质</p>
<p>能用$manacher$算法解决的题目，大部分都可以用回文自动机解决</p>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h2><h3 id="变量的含义解释"><a href="#变量的含义解释" class="headerlink" title="变量的含义解释"></a>变量的含义解释</h3><blockquote>
<p>now：当前状态<br>ch[i]：当前字符<br>len[i]：当前状态的最长回文串<br>fail[i]：失配边，与AC自动机的fail指针类似<br>size[i]：状态表示的回文串的数量<br>tr[now][i]：描述状态间的转移关系</p>
</blockquote>
<h3 id="构造过程"><a href="#构造过程" class="headerlink" title="构造过程"></a>构造过程</h3><p>回文自动机的构造是在线的，这点与后缀自动机是一样的</p>
<p>首先建两个根结点，$0$表示长度为奇数的回文串，$1$表示偶数</p>
<p>然后令$fail[1]=fail[0]=1$</p>
<p>当加入一个字符$x$时，通过从当前状态$now$跳$fail$指针找到$x==ch[i-len[p]-1]$的状态$p$</p>
<p>若从状态$p$出发没有标号为$x$的边，则新建结点$np$，显然$len[np]=len[p]+2$</p>
<p>然后计算$np$结点的$fail$指针：$fail[np]=tr[fail[q]][x]$，$q$表示使得$ch[i-len[q]-1]==x$且$q!=p$的状态</p>
<p>我们可以通过跳$fail$指针的方法计找到状态$q$，然后令$tr[p][x]=np$即可</p>
<p>最后别忘了更新当前状态的位置$now$，令$size[now]++$即可</p>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">	<span class="keyword">int</span> cnt,now,fail[MAXN],len[MAXN],size[MAXN],tr[MAXN][<span class="number">26</span>];</div><div class="line">	node() &#123;cnt=<span class="number">1</span>; fail[<span class="number">0</span>]=fail[<span class="number">1</span>]=<span class="number">1</span>; len[<span class="number">1</span>]=<span class="number">-1</span>;&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> pos)</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> p=now; </div><div class="line">		<span class="keyword">while</span>(ch[pos-len[p]<span class="number">-1</span>]!=ch[pos]) p=fail[p];</div><div class="line">		<span class="keyword">if</span>(!tr[p][x])&#123;</div><div class="line">			<span class="keyword">int</span> np=++cnt,q=fail[p]; len[np]=len[p]+<span class="number">2</span>; </div><div class="line">			<span class="keyword">while</span>(ch[pos-len[q]<span class="number">-1</span>]!=ch[pos]) q=fail[q];  fail[np]=tr[q][x];  </div><div class="line">			tr[p][x]=np;</div><div class="line">		&#125;</div><div class="line">		now=tr[p][x]; size[now]++;</div><div class="line">	&#125;</div><div class="line">&#125;PAM;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="例题选讲"><a href="#例题选讲" class="headerlink" title="例题选讲"></a>例题选讲</h2><h3 id="【APIO2014】回文串"><a href="#【APIO2014】回文串" class="headerlink" title="【APIO2014】回文串"></a>【APIO2014】回文串</h3><ul>
<li><a href="http://uoj.ac/problem/103" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>这道题是用来练习回文自动机的模板题</p>
<p>建好回文自动机后，沿着$fail$指针更新$size$数组</p>
<p>因为在状态$i$中出现的回文串一定在状态$fail[i]$中出现过</p>
<p>套用那句揭示后缀自动机性质的老话：出现次数向父亲传递，接收串数从儿子获取</p>
<p>在回文自动机中也是适用的</p>
<p>然后用每个结点的$len[i]*size[i]$更新答案即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 300010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,now,cnt(<span class="number">1</span>),fail[MAXN],size[MAXN],len[MAXN],tr[MAXN][<span class="number">26</span>];</div><div class="line">ll ans;</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> pos)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> p=now;</div><div class="line">	<span class="keyword">while</span>(ch[pos-len[p]<span class="number">-1</span>]!=ch[pos])  p=fail[p];</div><div class="line">	<span class="keyword">if</span>(!tr[p][x])&#123;</div><div class="line">		<span class="keyword">int</span> np=++cnt,q=fail[p];  len[np]=len[p]+<span class="number">2</span>;</div><div class="line">		<span class="keyword">while</span>(ch[pos-len[q]<span class="number">-1</span>]!=ch[pos]) q=fail[q]; fail[np]=tr[q][x];</div><div class="line">		tr[p][x]=np;</div><div class="line">	&#125;</div><div class="line">	now=tr[p][x];  size[now]++;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	fail[<span class="number">0</span>]=fail[<span class="number">1</span>]=<span class="number">1</span>;  len[<span class="number">1</span>]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  extend(ch[i]-<span class="string">'a'</span>,i);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=cnt;i;--i)&#123;</div><div class="line">		size[fail[i]]+=size[i];</div><div class="line">		cmax(ans,(ll)size[i]*len[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<h3 id="【清华集训2011】最长双回文串"><a href="#【清华集训2011】最长双回文串" class="headerlink" title="【清华集训2011】最长双回文串"></a>【清华集训2011】最长双回文串</h3><ul>
<li><a href="http://www.tsinsen.com/A1280" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>首先建出回文自动机，然后统计以每个位置开始/结束的最长回文子串$L[i]$和$R[i]$</p>
<p>这两个数组的计算只需要在建立回文自动机的过程中更新即可：$R[pos]=L[pos-len[now]+1]=len[now]$</p>
<p>最后扫描一遍，用$L[i]+R[i+1]$更新答案即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,ans,now,cnt(<span class="number">1</span>),fail[MAXN],L[MAXN],R[MAXN],len[MAXN],tr[MAXN][<span class="number">26</span>];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> pos)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> p=now;</div><div class="line">	<span class="keyword">while</span>(ch[pos-len[p]<span class="number">-1</span>]!=ch[pos])  p=fail[p];</div><div class="line">	<span class="keyword">if</span>(!tr[p][x])&#123;</div><div class="line">		<span class="keyword">int</span> np=++cnt,q=fail[p]; len[np]=len[p]+<span class="number">2</span>;</div><div class="line">		<span class="keyword">while</span>(ch[pos-len[q]<span class="number">-1</span>]!=ch[pos]) q=fail[q]; fail[np]=tr[q][x];</div><div class="line">		tr[p][x]=np;</div><div class="line">	&#125;</div><div class="line">	now=tr[p][x];  R[pos]=L[pos-len[now]+<span class="number">1</span>]=len[now];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	fail[<span class="number">0</span>]=fail[<span class="number">1</span>]=<span class="number">1</span>;  len[<span class="number">1</span>]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  extend(ch[i]-<span class="string">'a'</span>,i);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)  cmax(ans,R[i]+L[i+<span class="number">1</span>]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><hr>
<ul>
<li>《回文树——处理一类回文串问题的强力工具》——poursoul <a href="http://blog.csdn.net/u013368721/article/details/42100363" target="_blank" rel="external">传送门</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 回文自动机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】KD_Tree]]></title>
      <url>/2017/04/29/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91KD-Tree/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h2><p>$KD-Tree$是一种分割$k$维数据空间的数据结构，主要应用于多维空间关键数据的搜索</p>
<p>$KD-Tree$的构建：第$i$层以数据的第$i%n$项为键值划分，满足平衡二叉树的性质，即左子树键值小于根，根小于右子树，以此递归建树</p>
<p>这里说一下$nth$_$element()$函数的用法，这个函数可以实现局部排序</p>
<p>如$nth$_$element(tr+l,tr+mid,tr+r+1,cmp)$可以实现把区间$[l,r]$排序，并把$mid$的位置置为第$mid$大的元素</p>
<p>为什么不用$sort$？据柳神所说，$sort$太慢了。。。。。。</p>
<p>查找时采用的是$A-Star$搜索的思想，调整搜索顺序以优化时间复杂度</p>
<p>时间复杂度$O(\sqrt n)$</p>
<p>　　</p>
<p>　　</p>
<h2 id="例题一"><a href="#例题一" class="headerlink" title="例题一"></a>例题一</h2><ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1941" target="_blank" rel="external">【bzoj1941】Hide and Seek</a></li>
</ul>
<p>放板子</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> d[<span class="number">2</span>],son[<span class="number">2</span>],mx[<span class="number">2</span>],mn[<span class="number">2</span>];&#125;tr[MAXN];</div><div class="line"><span class="keyword">int</span> n,Key,root,ans,maxx,minn,D[<span class="number">2</span>],a[MAXN][<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.d[Key]&lt;b.d[Key];&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(tr[p].son[<span class="number">0</span>])&#123;</div><div class="line">            cmax(tr[p].mx[i],tr[tr[p].son[<span class="number">0</span>]].mx[i]);</div><div class="line">            cmin(tr[p].mn[i],tr[tr[p].son[<span class="number">0</span>]].mn[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(tr[p].son[<span class="number">1</span>])&#123;</div><div class="line">            cmax(tr[p].mx[i],tr[tr[p].son[<span class="number">1</span>]].mx[i]);</div><div class="line">            cmin(tr[p].mn[i],tr[tr[p].son[<span class="number">1</span>]].mn[i]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; p=mid; Key=k;</div><div class="line">    nth_element(tr+l,tr+mid,tr+r+<span class="number">1</span>,cmp);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i) tr[p].mx[i]=tr[p].mn[i]=tr[p].d[i];</div><div class="line">    <span class="keyword">if</span>(l&lt;=mid<span class="number">-1</span>)  build(tr[p].son[<span class="number">0</span>],l,mid<span class="number">-1</span>,k^<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span>(mid+<span class="number">1</span>&lt;=r)  build(tr[p].son[<span class="number">1</span>],mid+<span class="number">1</span>,r,k^<span class="number">1</span>);</div><div class="line">    updata(p);  </div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmax</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i) ret+=max(<span class="built_in">abs</span>(tr[p].mx[i]-D[i]),<span class="built_in">abs</span>(tr[p].mn[i]-D[i]));</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i) ret+=max(D[i]-tr[p].mx[i],<span class="number">0</span>)+max(tr[p].mn[i]-D[i],<span class="number">0</span>);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">query_max</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    cmax(maxx,<span class="built_in">abs</span>(tr[p].d[<span class="number">0</span>]-D[<span class="number">0</span>])+<span class="built_in">abs</span>(tr[p].d[<span class="number">1</span>]-D[<span class="number">1</span>]));</div><div class="line">    <span class="keyword">int</span> dl=-INF,dr=-INF;</div><div class="line">    <span class="keyword">if</span>(tr[p].son[<span class="number">0</span>])  dl=getmax(tr[p].son[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">if</span>(tr[p].son[<span class="number">1</span>])  dr=getmax(tr[p].son[<span class="number">1</span>]);</div><div class="line">    <span class="keyword">if</span>(dl&gt;dr)&#123;</div><div class="line">        <span class="keyword">if</span>(dl&gt;maxx)  query_max(tr[p].son[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">if</span>(dr&gt;maxx)  query_max(tr[p].son[<span class="number">1</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">if</span>(dr&gt;maxx)  query_max(tr[p].son[<span class="number">1</span>]);</div><div class="line">        <span class="keyword">if</span>(dl&gt;maxx)  query_max(tr[p].son[<span class="number">0</span>]);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">query_min</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(tr[p].d[<span class="number">0</span>]-D[<span class="number">0</span>])+<span class="built_in">abs</span>(tr[p].d[<span class="number">1</span>]-D[<span class="number">1</span>])) cmin(minn,<span class="built_in">abs</span>(tr[p].d[<span class="number">0</span>]-D[<span class="number">0</span>])+<span class="built_in">abs</span>(tr[p].d[<span class="number">1</span>]-D[<span class="number">1</span>]));</div><div class="line">    <span class="keyword">int</span> dl=INF,dr=INF;</div><div class="line">    <span class="keyword">if</span>(tr[p].son[<span class="number">0</span>])  dl=getmin(tr[p].son[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">if</span>(tr[p].son[<span class="number">1</span>])  dr=getmin(tr[p].son[<span class="number">1</span>]);</div><div class="line">    <span class="keyword">if</span>(dl&lt;dr)&#123;</div><div class="line">        <span class="keyword">if</span>(dl&lt;minn)  query_min(tr[p].son[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">if</span>(dr&lt;minn)  query_min(tr[p].son[<span class="number">1</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">if</span>(dr&lt;minn)  query_min(tr[p].son[<span class="number">1</span>]);</div><div class="line">        <span class="keyword">if</span>(dl&lt;minn)  query_min(tr[p].son[<span class="number">0</span>]);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    <span class="keyword">int</span> n=read(); ans=INF;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        a[i][<span class="number">0</span>]=read(); a[i][<span class="number">1</span>]=read();</div><div class="line">        tr[i].d[<span class="number">0</span>]=a[i][<span class="number">0</span>]; tr[i].d[<span class="number">1</span>]=a[i][<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">    build(root,<span class="number">1</span>,n,<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        D[<span class="number">0</span>]=a[i][<span class="number">0</span>];  D[<span class="number">1</span>]=a[i][<span class="number">1</span>];</div><div class="line">        maxx=-INF;  minn=INF;</div><div class="line">        query_max(root);</div><div class="line">        query_min(root);</div><div class="line">        cmin(ans,maxx-minn);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="例题二"><a href="#例题二" class="headerlink" title="例题二"></a>例题二</h2><ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2648" target="_blank" rel="external">【bzoj2648】SJY摆棋子</a></li>
</ul>
<p>多了一个插入操作</p>
<p>还记得$Treap$的插入是怎么实现的吗？</p>
<p>$KD-Tree$的插入操作是一样的，只不过不需要旋转</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> d[<span class="number">2</span>],son[<span class="number">2</span>],mx[<span class="number">2</span>],mn[<span class="number">2</span>];&#125;tr[MAXN];</div><div class="line"><span class="keyword">int</span> n,m,minn,cnt,Key,root,D[<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.d[Key]&lt;b.d[Key];&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(tr[p].son[<span class="number">0</span>])&#123;</div><div class="line">            cmax(tr[p].mx[i],tr[tr[p].son[<span class="number">0</span>]].mx[i]);</div><div class="line">            cmin(tr[p].mn[i],tr[tr[p].son[<span class="number">0</span>]].mn[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(tr[p].son[<span class="number">1</span>])&#123;</div><div class="line">            cmax(tr[p].mx[i],tr[tr[p].son[<span class="number">1</span>]].mx[i]);</div><div class="line">            cmin(tr[p].mn[i],tr[tr[p].son[<span class="number">1</span>]].mn[i]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> &amp;p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> k)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; p=mid; Key=k;</div><div class="line">    nth_element(tr+l,tr+mid,tr+r+<span class="number">1</span>,cmp);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i) tr[p].mx[i]=tr[p].mn[i]=tr[p].d[i];</div><div class="line">    <span class="keyword">if</span>(l&lt;=mid<span class="number">-1</span>)  build(tr[p].son[<span class="number">0</span>],l,mid<span class="number">-1</span>,k^<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span>(mid+<span class="number">1</span>&lt;=r)  build(tr[p].son[<span class="number">1</span>],mid+<span class="number">1</span>,r,k^<span class="number">1</span>);</div><div class="line">    updata(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> &amp;p,<span class="keyword">int</span> k)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(!p)&#123;p=++cnt; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i) tr[p].d[i]=tr[p].mx[i]=tr[p].mn[i]=D[i];<span class="keyword">return</span>;&#125;</div><div class="line">    <span class="keyword">if</span>(D[k]&lt;tr[p].d[k])  insert(tr[p].son[<span class="number">0</span>],k^<span class="number">1</span>);</div><div class="line">    <span class="keyword">else</span> insert(tr[p].son[<span class="number">1</span>],k^<span class="number">1</span>);</div><div class="line">    updata(p);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">getmin</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i) ret+=max(tr[p].mn[i]-D[i],<span class="number">0</span>)+max(D[i]-tr[p].mx[i],<span class="number">0</span>);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">query_min</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">    cmin(minn,<span class="built_in">abs</span>(tr[p].d[<span class="number">0</span>]-D[<span class="number">0</span>])+<span class="built_in">abs</span>(tr[p].d[<span class="number">1</span>]-D[<span class="number">1</span>]));</div><div class="line">    <span class="keyword">int</span> dl=INF,dr=INF;</div><div class="line">    <span class="keyword">if</span>(tr[p].son[<span class="number">0</span>])  dl=getmin(tr[p].son[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">if</span>(tr[p].son[<span class="number">1</span>])  dr=getmin(tr[p].son[<span class="number">1</span>]);</div><div class="line">    <span class="keyword">if</span>(dl&lt;dr)&#123;</div><div class="line">        <span class="keyword">if</span>(dl&lt;minn)  query_min(tr[p].son[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">if</span>(dr&lt;minn)  query_min(tr[p].son[<span class="number">1</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">if</span>(dr&lt;minn)  query_min(tr[p].son[<span class="number">1</span>]);</div><div class="line">        <span class="keyword">if</span>(dl&lt;minn)  query_min(tr[p].son[<span class="number">0</span>]);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    n=read();  m=read();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) tr[i].d[<span class="number">0</span>]=read(),tr[i].d[<span class="number">1</span>]=read();</div><div class="line">    build(root,<span class="number">1</span>,n,<span class="number">0</span>);  cnt=n;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">        <span class="keyword">int</span> opt=read(); D[<span class="number">0</span>]=read(); D[<span class="number">1</span>]=read();</div><div class="line">        <span class="keyword">if</span>(opt==<span class="number">1</span>) insert(root,<span class="number">0</span>);</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            minn=INF;</div><div class="line">            query_min(root);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,minn);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="例题三"><a href="#例题三" class="headerlink" title="例题三"></a>例题三</h2><ul>
<li><a href="http://cydiater.coding.me/2017/03/15/BZOJ4520-CQOI2015-K%E8%BF%9C%E7%82%B9%E5%AF%B9/" target="_blank" rel="external">【bzoj4520】K远点对</a></li>
</ul>
<p>我们用堆来维护第$K$大，具体方法：</p>
<p>先往堆中装入$K$个$0$，然后如果元素大于堆顶，则用该元素代替堆顶，操作完后堆顶元素即为第$K$大元素</p>
<p>至于这么做为什么是对的，留给读者推敲</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node&#123;ll d[<span class="number">2</span>],mx[<span class="number">2</span>],mn[<span class="number">2</span>],son[<span class="number">2</span>];&#125;tr[MAXN];</div><div class="line">ll n,K,root,Key,D[<span class="number">2</span>],a[MAXN][<span class="number">2</span>];</div><div class="line">priority_queue&lt;ll,<span class="built_in">vector</span>&lt;ll&gt;,greater&lt;ll&gt; &gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.d[Key]&lt;b.d[Key];&#125;</div><div class="line"><span class="function">ll <span class="title">sqr</span><span class="params">(ll x)</span></span>&#123;<span class="keyword">return</span> x*x;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(ll p)</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i)&#123;</div><div class="line">        <span class="keyword">if</span>(tr[p].son[<span class="number">0</span>])&#123;</div><div class="line">            cmax(tr[p].mx[i],tr[tr[p].son[<span class="number">0</span>]].mx[i]);</div><div class="line">            cmin(tr[p].mn[i],tr[tr[p].son[<span class="number">0</span>]].mn[i]);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span>(tr[p].son[<span class="number">1</span>])&#123;</div><div class="line">            cmax(tr[p].mx[i],tr[tr[p].son[<span class="number">1</span>]].mx[i]);</div><div class="line">            cmin(tr[p].mn[i],tr[tr[p].son[<span class="number">1</span>]].mn[i]);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(ll &amp;p,ll l,ll r,ll k)</span></span>&#123;</div><div class="line">    ll mid=(l+r)&gt;&gt;<span class="number">1</span>; p=mid; Key=k;</div><div class="line">    nth_element(tr+l,tr+mid,tr+r+<span class="number">1</span>,cmp);</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i)  tr[p].mx[i]=tr[p].mn[i]=tr[p].d[i];</div><div class="line">    <span class="keyword">if</span>(l&lt;=mid<span class="number">-1</span>)  build(tr[p].son[<span class="number">0</span>],l,mid<span class="number">-1</span>,k^<span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span>(mid+<span class="number">1</span>&lt;=r)  build(tr[p].son[<span class="number">1</span>],mid+<span class="number">1</span>,r,k^<span class="number">1</span>);</div><div class="line">    updata(p);</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">getmax</span><span class="params">(ll p)</span></span>&#123;</div><div class="line">    ll ret=<span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i) ret+=max(sqr(D[i]-tr[p].mx[i]),sqr(D[i]-tr[p].mn[i]));</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">query_max</span><span class="params">(ll p)</span></span>&#123;</div><div class="line">    ll dis=sqr(D[<span class="number">0</span>]-tr[p].d[<span class="number">0</span>])+sqr(D[<span class="number">1</span>]-tr[p].d[<span class="number">1</span>]);</div><div class="line">    <span class="keyword">if</span>(dis&gt;q.top())  q.pop(),q.push(dis);</div><div class="line">    ll dl=<span class="number">0</span>,dr=<span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span>(tr[p].son[<span class="number">0</span>])  dl=getmax(tr[p].son[<span class="number">0</span>]);</div><div class="line">    <span class="keyword">if</span>(tr[p].son[<span class="number">1</span>])  dr=getmax(tr[p].son[<span class="number">1</span>]);</div><div class="line">    <span class="keyword">if</span>(dl&gt;dr)&#123;</div><div class="line">        <span class="keyword">if</span>(dl&gt;q.top())  query_max(tr[p].son[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">if</span>(dr&gt;q.top())  query_max(tr[p].son[<span class="number">1</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">if</span>(dr&gt;q.top())  query_max(tr[p].son[<span class="number">1</span>]);</div><div class="line">        <span class="keyword">if</span>(dl&gt;q.top())  query_max(tr[p].son[<span class="number">0</span>]);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    n=read();  K=read();</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        a[i][<span class="number">0</span>]=read();  a[i][<span class="number">1</span>]=read();</div><div class="line">        tr[i].d[<span class="number">0</span>]=a[i][<span class="number">0</span>],tr[i].d[<span class="number">1</span>]=a[i][<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">    build(root,<span class="number">1</span>,n,<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=(K&lt;&lt;<span class="number">1</span>);++i) q.push(<span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        D[<span class="number">0</span>]=a[i][<span class="number">0</span>];  D[<span class="number">1</span>]=a[i][<span class="number">1</span>];</div><div class="line">        query_max(root);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,q.top());</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> KDTree </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[HAOI2017游记]]></title>
      <url>/2017/04/26/HAOI2017%E6%B8%B8%E8%AE%B0/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><p>本次$HAOI$题目质量相较于往年十分新颖，没有常见的套路，需要选手具备较高的思维能力</p>
<p>$T1$是一道二分图最大独立集的题目，我虽然看出了这一定是在二分图上搞事情，但是没有想到最大独立集</p>
<p>于是写了一发贪心，过了$10$分</p>
<p>此外在写这题的时候，我没看清输入的是不是贸易伙伴的关系，然后一直在考虑如何存图，耗费了大量时间</p>
<p>$T2$是字符串的题目，一眼看过去后缀数组，5555我不会写后缀数组，怎么办？</p>
<p>没办法，只好强行上后缀自动机，建出后缀树，然后在后缀树上搞$lca$，拿到了$60$分</p>
<p>这几天得赶紧学后缀数组(神$TM$比赛现场的$smartc++$里有后缀数组的板子)</p>
<p>对拍完$T2$，我发现$T3$一脸不可做的样子，于是去刚$T1$，终究是没有刚出来，于是上午$gg$</p>
<p>下午的题面我就不吐槽了</p>
<p>$T1$的与运算非得写一个”^”,让我一直以为是异或，坑害了我不少时间</p>
<p>然后随手码了$20$分暴力，毕竟$uoj$模数把我吓傻了，直接去看$T2$</p>
<p>刚看到$T2$时还以为是$AC$自动机板子题，然后它告诉我容错，我不会处理容错啊</p>
<p>于是写$20$分暴力，然后去刚$T1$</p>
<p>然后我就发现$T1$似乎可以按位处理的样子，但是不合法状态该怎么减去呢？</p>
<p>我尝试着拆子状态，然后发现这种方法不对，然后只好写梦想分了，我的程序只能处理没有障碍或只有一个障碍的情况</p>
<p> 　　</p>
<p> 　　</p>
<p> 　　</p>
<h2 id="题目风波"><a href="#题目风波" class="headerlink" title="题目风波"></a>题目风波</h2><p>实际上考试前我已经做好了退役的准备，我甚至在网上订了一年的《数学通讯》，准备回去高考</p>
<p>而且刚考完试的那会，我也已经释然了，退役已稳，回去学文化课也是一种不错的选择</p>
<p>可是当成绩出来的那一刻，我惊呆了，我下午的$T1$竟然获得了$90$分，我也因为这$90$分进入了省队</p>
<p>而我上午的成绩只有$10$分，我一度怀疑我的后缀树写挂了</p>
<p>事后我才知道评测空间开小了，而且下午的数据实在是太水了</p>
<p>我能进队确实是靠水数据和运气，对此我深感惭愧</p>
<p>我也没有料到会是这样的结果，我也没有想过我能进队，比我强的人纷纷退役，我的心里也不是滋味</p>
<p>与我同班的焦景辉如此热爱$OI$，机房内很少能见到他在颓废，而且我也认为他的实力远胜于我</p>
<p>可是退役的却是他，进队的却是我，我的心里久久不能平静</p>
<p>但是事已至此，我也无可奈何</p>
<p>在我面前的只有一条路，那就是继续前进，奋战到底，摆脱蒟蒻的命运，完成向神犇的蜕变</p>
<p>也许这才是对退役选手最大的尊敬吧</p>
<p>　　</p>
<p>　　</p>
<p>　　</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[【CTSC2016】时空旅行]]></title>
      <url>/2017/04/26/198/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://uoj.ac/problem/198" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>这个题面写的好中文啊，我看了半天才看懂</p>
<p>首先我们发现$ans=x_{0}^{2}+x_{i}^{2}-2x_{i}x_{0}$</p>
<p>设$f(x_0)=-2x_i x_0+x_{i}^{2}+c_i$</p>
<p>我们要求$f(x_0)$的最小值，然后我们发现这东西是一条直线</p>
<p>所以对于每个时空，我们对该时空的所有直线维护一个凸包即可</p>
<p>但是暴力维护的复杂度太高，同时我们发现一个结点的直线只对它的子树有贡献</p>
<p>所以我们可以使用标记永久化的线段树</p>
<p>按照dfs序建线段树，事先离线处理出没有贡献的子树，修改时忽略该子树即可</p>
<p>这样每次查询时记录从根到叶子结点的答案就行了</p>
<p>注意查询时在凸包上二分的话复杂度是$O(nlog^{2}n)$的</p>
<p>实际上我们可以先把询问按照$x$排序，维护凸包上的单调性，就可以做到$O(nlogn)$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e18</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node1&#123;<span class="keyword">int</span> x;ll c;&#125;planet[MAXN];</div><div class="line"><span class="keyword">struct</span> node2&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN];</div><div class="line"><span class="keyword">struct</span> node3&#123;<span class="keyword">int</span> s,x,id;&#125;Q[MAXN];</div><div class="line"><span class="keyword">struct</span> node4&#123;<span class="keyword">int</span> k;ll b;<span class="function">ll <span class="title">cal</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> (ll)k*x+b;&#125;&#125;;</div><div class="line"><span class="keyword">int</span> n,m,len,dfs_clock,Link[MAXN],temp[MAXN&lt;&lt;<span class="number">2</span>],L[MAXN],R[MAXN],belong[MAXN];</div><div class="line">ll c0,ans[MAXN];</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;del[MAXN];</div><div class="line"><span class="built_in">vector</span>&lt;node4&gt;st[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> planet[a].x&lt;planet[b].x;&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> L[x]&lt;L[y];&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp3</span><span class="params">(node3 a,node3 b)</span></span>&#123;<span class="keyword">return</span> a.x&lt;b.x;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len]=(node2)&#123;y,Link[x]&#125;;Link[x]=len;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;L[x]=++dfs_clock;<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)dfs(e[i].y);R[x]=dfs_clock;&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(node4 a,node4 b,node4 c)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(b.k==c.k) <span class="keyword">return</span> c.b&lt;=b.b;</div><div class="line">	<span class="keyword">return</span> (b.b-a.b)*(a.k-c.k)&gt;(c.b-a.b)*(a.k-b.k);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,node4 Line)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</div><div class="line">		<span class="keyword">while</span>(st[p].size()&gt;<span class="number">1</span>&amp;&amp;judge(st[p][st[p].size()<span class="number">-2</span>],st[p].back(),Line)) st[p].pop_back();</div><div class="line">		st[p].push_back(Line);  <span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid) updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,Line);</div><div class="line">	<span class="keyword">if</span>(y&gt;mid) updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,Line);</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> pos,<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">while</span>(temp[p]+<span class="number">1</span>&lt;st[p].size()&amp;&amp;st[p][temp[p]].cal(x)&gt;st[p][temp[p]+<span class="number">1</span>].cal(x)) ++temp[p];</div><div class="line">	ll ans=st[p].size()?st[p][temp[p]].cal(x):INF;</div><div class="line">	<span class="keyword">if</span>(l==r)  <span class="keyword">return</span> ans;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(pos&lt;=mid) <span class="keyword">return</span> min(ans,query(p&lt;&lt;<span class="number">1</span>,l,mid,pos,x));</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> min(ans,query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,pos,x));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  c0=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> opt=read(),fr=read(),id=read();</div><div class="line">		temp[i]=i;  insert(fr,i);</div><div class="line">		<span class="keyword">if</span>(!opt)&#123;</div><div class="line">			<span class="keyword">int</span> x=read(),y=read(),z=read();ll c=read();</div><div class="line">			belong[id]=i;  planet[id]=(node1)&#123;x,c&#125;;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> del[id].push_back(i);</div><div class="line">	&#125;</div><div class="line">	dfs(<span class="number">0</span>);  sort(temp+<span class="number">1</span>,temp+n,cmp1);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)<span class="keyword">if</span>(belong[temp[i]])&#123;</div><div class="line">		<span class="keyword">int</span> now=temp[i],pos=belong[now];</div><div class="line">		node4 Line=(node4)&#123;<span class="number">-2</span>*planet[now].x,planet[now].c+(ll)planet[now].x*planet[now].x&#125;;</div><div class="line">		<span class="keyword">if</span>(!del[now].size()) updata(<span class="number">1</span>,<span class="number">1</span>,n,L[pos],R[pos],Line);</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			sort(del[now].begin(),del[now].end(),cmp2);</div><div class="line">			updata(<span class="number">1</span>,<span class="number">1</span>,n,L[pos],L[del[now][<span class="number">0</span>]]<span class="number">-1</span>,Line);</div><div class="line">			updata(<span class="number">1</span>,<span class="number">1</span>,n,R[del[now].back()]+<span class="number">1</span>,R[pos],Line);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;del[now].size()<span class="number">-1</span>;++j)</div><div class="line">				<span class="keyword">if</span>(R[del[now][j]]+<span class="number">1</span>&lt;L[del[now][j+<span class="number">1</span>]]) updata(<span class="number">1</span>,<span class="number">1</span>,n,R[del[now][j]]+<span class="number">1</span>,L[del[now][j+<span class="number">1</span>]]<span class="number">-1</span>,Line);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;<span class="keyword">int</span> s=read(),x=read();Q[i]=(node3)&#123;s,x,i&#125;;&#125;</div><div class="line">	sort(Q+<span class="number">1</span>,Q+m+<span class="number">1</span>,cmp3);<span class="built_in">memset</span>(temp,<span class="number">0</span>,<span class="keyword">sizeof</span>(temp));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)ans[Q[i].id]=min(c0+(ll)Q[i].x*Q[i].x,(ll)Q[i].x*Q[i].x+query(<span class="number">1</span>,<span class="number">1</span>,n,L[Q[i].s],Q[i].x));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> uoj </tag>
            
            <tag> 凸包 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CTSC2016】单调上升路径]]></title>
      <url>/2017/04/26/201/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://uoj.ac/problem/201" target="_blank" rel="external">AC通道</a></li>
</ul>
<hr>
<p>根据题中所给结论，我们可以证明完全图的最长单调上升路径的长度为$n-1$</p>
<p>所以我们可以构造一种连边的顺序，使得每一轮连的边相互独立</p>
<p>也就是说从同一个点出发的边不在同一轮中被连接起来</p>
<p>这就符合拉丁方阵的性质，即每一行、每一列不出现相同元素</p>
<p>所以我们构造方阵$A$，满足$A$是一个拉丁方阵，且$A_{ij}=A_{ji}$，且$A_{ii}=0$</p>
<p>方阵$A$中的元素$A<em>{ij}$表示&lt;$i,j$&gt;这条边在第$A</em>{ij}$轮被连接起来</p>
<p>那么我们如何来构造这个方阵呢？</p>
<p>有一个很简单的方法：先构造如下的方阵：</p>
<table>
<thead>
<tr>
<th>第一列</th>
<th>第二列</th>
<th>第三列</th>
<th>第四列</th>
<th>第五列</th>
<th>第六列</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
</tr>
<tr>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>0</td>
</tr>
<tr>
<td>2</td>
<td>3</td>
<td>4</td>
<td>5</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>3</td>
<td>4</td>
<td>5</td>
<td>1</td>
<td>2</td>
<td>0</td>
</tr>
<tr>
<td>4</td>
<td>5</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>0</td>
</tr>
<tr>
<td>5</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td>4</td>
<td>0</td>
</tr>
</tbody>
</table>
<p>我们发现除了第一行比较特殊外，其他行都是第一行的循环位移</p>
<p>构造完成之后，只需要交换$A_{ii}$和$A_{in}$就可以了$(2&lt;=i&lt;=n)$</p>
<p>最后我们只需要根据连边得顺序确定边权即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,c[<span class="number">505</span>],a[<span class="number">505</span>][<span class="number">505</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)a[<span class="number">1</span>][i]=i<span class="number">-1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> cnt=i<span class="number">-1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;n;++j)&#123;</div><div class="line">			a[i][j]=cnt;</div><div class="line">			cnt++;</div><div class="line">			<span class="keyword">if</span>(cnt==n)cnt=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)swap(a[i][i],a[i][n]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)c[i]=c[i<span class="number">-1</span>]+(n&gt;&gt;<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d "</span>,++c[a[i][j]]);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 构造 </tag>
            
            <tag> uoj </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】上下界网络流]]></title>
      <url>/2017/04/24/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E4%B8%8A%E4%B8%8B%E7%95%8C%E7%BD%91%E7%BB%9C%E6%B5%81/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="无源汇可行流"><a href="#无源汇可行流" class="headerlink" title="无源汇可行流"></a>无源汇可行流</h2><h3 id="模型"><a href="#模型" class="headerlink" title="模型"></a>模型</h3><p>首先建立超级源$SS$和超级汇$TT$，然后对于一条&lt;$x,y$&gt;容量为$[b,c]$的弧，我们对该弧进行改造</p>
<p>连接一条&lt;$SS,y$&gt;容量为$b$的弧，连接一条&lt;$x,TT$&gt;容量为$b$的弧，然后把&lt;$x,y$&gt;的容量设置为$c-b$</p>
<p>　　</p>
<p>　　</p>
<h3 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h3><p><img src="http://i1.piimg.com/591838/33490fe93f17837a.png"></p>
<p>　　</p>
<p>　　</p>
<h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p>通俗来讲，就是强行给$y$结点流进$b$的流量，强行从$x$结点流出$b$的流量，使得流量下界满足要求</p>
<p>然后&lt;$x,y$&gt;的$c-b$点流量就可以不受限制地随便流了，我们称之为自由流</p>
<p>如果与$SS$和$TT$相连的弧全部满流，则说明有可行流</p>
<p>理解了这个，下面的模型就是水到渠成了</p>
<p>　　</p>
<p>　　</p>
<h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>【LYIO#156】无源汇可行流 </p>
<ul>
<li><a href="https://ly.men.ci/problem/156" target="_blank" rel="external">传送门</a></li>
</ul>
<p>这是真·模板题</p>
<p>放个代码</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 210</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[<span class="number">80010</span>];</div><div class="line"><span class="keyword">int</span> n,m,S,T,flag,len(<span class="number">1</span>),Link[MAXN],level[MAXN],pos[<span class="number">40010</span>],ans[<span class="number">40010</span>];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front();  q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)</div><div class="line">			level[e[i].y]=level[x]+<span class="number">1</span>,q.push(e[i].y);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))</div><div class="line">				e[i].v-=d,e[i^<span class="number">1</span>].v+=d,maxflow+=d;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  S=<span class="number">0</span>;  T=n+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),b=read(),c=read();</div><div class="line">		insert(x,y,c-b);  pos[i]=len;  ans[i]=b;</div><div class="line">		insert(S,y,b);  insert(x,T,b);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(MAXFLOW(S,INF));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[S];i;i=e[i].next)<span class="keyword">if</span>(e[i].v)flag=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[T];i;i=e[i].next)<span class="keyword">if</span>(e[i^<span class="number">1</span>].v)flag=<span class="number">1</span>;</div><div class="line">	<span class="built_in">puts</span>(flag?<span class="string">"NO"</span>:<span class="string">"YES"</span>);</div><div class="line">	<span class="keyword">if</span>(!flag)<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,e[pos[i]].v+ans[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="有源汇最大流"><a href="#有源汇最大流" class="headerlink" title="有源汇最大流"></a>有源汇最大流</h2><h3 id="模型-1"><a href="#模型-1" class="headerlink" title="模型"></a>模型</h3><p>设源为$S$，汇为$T$</p>
<p>首先连接一条&lt;$T,S$&gt;的弧，流量为$+oo$，然后按照无源汇可行流的建模方法判断是否存在可行流</p>
<p>若存在可行流，则在残余网络上跑一遍从$S$到$T$的最大流，就是原图的最大流</p>
<p>　　</p>
<p>　　</p>
<h3 id="解释-1"><a href="#解释-1" class="headerlink" title="解释"></a>解释</h3><p>有源汇和无源汇的区别在于源点和汇点不满足流量平衡，所以我们建立弧&lt;$T,S$&gt;，使得源点和汇点满足流量平衡</p>
<p>这样就可以按照无源汇来求可行流了</p>
<p>跑完可行流之后，图中各条弧已经满足了流量下界的限制，所以只需要跑一边从$S$到$T$的最大流就是所求的答案</p>
<p>　　</p>
<p>　　</p>
<h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><p>【LYOI#157】有源汇最大流</p>
<ul>
<li><a href="https://ly.men.ci/problem/157" target="_blank" rel="external">传送门</a></li>
</ul>
<p>这道也是真·模板题</p>
<p>贴个代码</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 250</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[<span class="number">60010</span>];</div><div class="line"><span class="keyword">int</span> n,m,S,T,SS,TT,flag,len(<span class="number">1</span>),Link[MAXN],level[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> S,<span class="keyword">int</span> T)</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front();  q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)</div><div class="line">			level[e[i].y]=level[x]+<span class="number">1</span>,q.push(e[i].y);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow,<span class="keyword">int</span> T)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow),T))</div><div class="line">				e[i].v-=d,e[i^<span class="number">1</span>].v+=d,maxflow+=d;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  S=read();  T=read();  SS=<span class="number">0</span>;  TT=n+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),b=read(),c=read();</div><div class="line">		insert(x,y,c-b);  insert(SS,y,b);  insert(x,TT,b); </div><div class="line">	&#125;</div><div class="line">	insert(T,S,INF);  <span class="keyword">int</span> d=<span class="number">0</span>,ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(bfs(SS,TT)) <span class="keyword">while</span>(MAXFLOW(SS,INF,TT));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[SS];i;i=e[i].next)<span class="keyword">if</span>(e[i].v)flag=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[TT];i;i=e[i].next)<span class="keyword">if</span>(e[i^<span class="number">1</span>].v)flag=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(flag) &#123;<span class="built_in">puts</span>(<span class="string">"please go home to sleep"</span>);  <span class="keyword">return</span> <span class="number">0</span>;&#125;</div><div class="line">	<span class="keyword">while</span>(bfs(S,T)) <span class="keyword">while</span>(d=MAXFLOW(S,INF,T)) ans+=d;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="有源汇最小流"><a href="#有源汇最小流" class="headerlink" title="有源汇最小流"></a>有源汇最小流</h2><h3 id="建模"><a href="#建模" class="headerlink" title="建模"></a>建模</h3><p>首先按照无源汇可行流的方法建模，在图上跑$SS$到$TT$的最大流</p>
<p>然后添加弧&lt;$T,S$&gt;容量为$+oo$，然后再跑$SS$到$TT$的最大流就是答案</p>
<p>　　</p>
<p>　　</p>
<h3 id="解释-2"><a href="#解释-2" class="headerlink" title="解释"></a>解释</h3><p>因为<t,s>这条弧对应了图中从S流向T的流量，所以我们要求原图的最小流，就要保证<t,s>的流量最小</t,s></t,s></p>
<p>所以我们要尽量多的消耗掉不需要经过<t,s>的流量</t,s></p>
<p>在添加弧<t,s>之前跑SS到TT的最大流能做到这点</t,s></p>
<p>　　</p>
<p>　　</p>
<h3 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h3><p>【LYOI#158】有源汇最小流</p>
<ul>
<li><a href="https://ly.men.ci/problem/158" target="_blank" rel="external">传送门</a></li>
</ul>
<p>直接上代码，但是注意，我的程序有点问题，被卡了一组超时，但大体思路无误</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[<span class="number">900000</span>];</div><div class="line"><span class="keyword">int</span> n,m,S,T,SS,TT,flag,len(<span class="number">1</span>),Link[MAXN],level[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;	</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> S,<span class="keyword">int</span> T)</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front();  q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)</div><div class="line">			level[e[i].y]=level[x]+<span class="number">1</span>,q.push(e[i].y);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow,<span class="keyword">int</span> T)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> maxflow=<span class="number">0</span>,d=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow),T))</div><div class="line">				e[i].v-=d,e[i^<span class="number">1</span>].v+=d,maxflow+=d;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  S=read();  T=read();  SS=<span class="number">0</span>;  TT=n+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),b=read(),c=read();</div><div class="line">		insert(SS,y,b);  insert(x,TT,b);  insert(x,y,c-b);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(bfs(SS,TT)) <span class="keyword">while</span>(MAXFLOW(SS,INF,TT));</div><div class="line">	insert(T,S,INF);  <span class="keyword">int</span> ans=<span class="number">0</span>,d=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(bfs(SS,TT)) <span class="keyword">while</span>(d=MAXFLOW(SS,INF,TT)) ans+=d;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[SS];i;i=e[i].next)<span class="keyword">if</span>(e[i].v)flag=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[TT];i;i=e[i].next)<span class="keyword">if</span>(e[i^<span class="number">1</span>].v)flag=<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(flag)  <span class="built_in">puts</span>(<span class="string">"please go home to sleep"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><hr>
<ul>
<li>《算法竞赛入门经典——训练指南》——刘汝佳</li>
<li>《上下界网络流建模方法总结》——stdcall <a href="http://www.cnblogs.com/mlystdcall/p/6734852.html" target="_blank" rel="external">传送门</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 网络流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【51nod1693】水群]]></title>
      <url>/2017/04/22/1693/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.51nod.com/onlineJudge/problemSolution.html#!problemId=1693" target="_blank" rel="external">AC通道</a></p>
<p>这题非常玄妙啊</p>
<p>首先简化题目，题面的意思就是，当前有一个数s</p>
<p>操作1是s*=k代价为k，操作2是s–代价为1</p>
<p>求把s从1变到n的最小代价</p>
<p>考虑把问题转化为图论模型，从i→i-1连一条权值为1的边，i→i*k连一条权值为k的边</p>
<p>在图上跑最短路即可</p>
<p>但是这样的话边数太多，时间会炸</p>
<p>我们考虑优化建图，注意到如果y=x<em>i</em>j，那么从x连向y的边就可以用x-x<em>i-x</em>i*j这条路径代替</p>
<p>所以我们对于每个点i，只连i→i*p(p为质数)的边，这和原图是等价的</p>
<p>但是这样做复杂度依然会炸，题解上介绍了一种玄学方法：</p>
<p>打一个每个点自己最短路上的上一个点的表</p>
<p>那么可以从表中发现，i→i-1的边不会连续出现4次以上</p>
<p>而且i→i*p的边只有当p&lt;=13的时候才有意义</p>
<p>所以这样又可以删去很多边，于是就能通过此题</p>
<p>当然这道题的正解是记忆化搜索，但是我不会啊</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2000010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;pii;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> prime[<span class="number">10</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>&#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> cnt=<span class="number">6</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,len,Link[MAXN],vis[MAXN],dis[MAXN];</div><div class="line">priority_queue&lt;pii,<span class="built_in">vector</span>&lt;pii&gt;,greater&lt;pii&gt; &gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=n+<span class="number">4</span>;++j)</div><div class="line">			insert(i,i*prime[j],prime[j]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n+<span class="number">4</span>;++i) insert(i,i<span class="number">-1</span>,<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(dis,<span class="number">10</span>,<span class="keyword">sizeof</span>(dis));</div><div class="line">	q.push(make_pair(<span class="number">0</span>,<span class="number">1</span>));  vis[<span class="number">1</span>]=<span class="number">1</span>;  dis[<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> v=q.top().first,x=q.top().second;  q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)&#123;</div><div class="line">			<span class="keyword">if</span>(dis[x]+e[i].v&lt;dis[e[i].y])&#123;</div><div class="line">				dis[e[i].y]=dis[x]+e[i].v;</div><div class="line">				<span class="keyword">if</span>(!vis[e[i].y])  q.push(make_pair(dis[e[i].y],e[i].y)),vis[e[i].y]=<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		vis[x]=<span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dis[n]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  pre();  dijkstra();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> 最短路 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【51nod1486】大大走格子]]></title>
      <url>/2017/04/21/1486/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.51nod.com/onlineJudge/questionCode.html#!problemId=1486" target="_blank" rel="external">AC通道</a></p>
<p>取出 k 个坏格，记 f[i] 表示从左上角不经过其它坏格，走到第 i 个坏格的方案数</p>
<p>考虑转移，走到 (x,y) 这个格，共有 C(x+y, x) 种方案</p>
<p>减掉不合法的，枚举第一次经过的坏格为 j</p>
<p>f[i] -= f[j] * C(x[i]+y[i]-x[j]-y[j], x[i] - x[j])</p>
<p>把终点也视为一个坏格，就能算方案数了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> N 200000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> ll mod=(ll)<span class="number">1e9</span>+<span class="number">7</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;ll x,y;&#125;p[<span class="number">2010</span>];</div><div class="line">ll n,m,k,f[<span class="number">2010</span>],inv[N+<span class="number">50</span>],fac[N+<span class="number">50</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> a.x==b.x?a.y&lt;b.y:a.x&lt;b.x;&#125;</div><div class="line"><span class="function">ll <span class="title">fast</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="function">ll <span class="title">ret</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=a*a%mod)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=ret*a%mod;<span class="keyword">return</span> ret;&#125;</div><div class="line"><span class="function">ll <span class="title">C</span><span class="params">(ll n,ll m)</span></span>&#123;<span class="keyword">return</span> fac[n]*inv[m]%mod*inv[n-m]%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	fac[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=N;++i) fac[i]=fac[i<span class="number">-1</span>]*i%mod;</div><div class="line">	inv[N]=fast(fac[N],mod<span class="number">-2</span>);</div><div class="line">	<span class="keyword">for</span>(ll i=N<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)  inv[i]=inv[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read()<span class="number">-1</span>;  m=read()<span class="number">-1</span>;  k=read();  pre();</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=k;++i)  p[i].x=read()<span class="number">-1</span>,p[i].y=read()<span class="number">-1</span>;</div><div class="line">	p[++k].x=n;  p[k].y=m;</div><div class="line">	sort(p+<span class="number">1</span>,p+k+<span class="number">1</span>,cmp);</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=k;++i)&#123;</div><div class="line">		f[i]=C(p[i].x+p[i].y,p[i].x);</div><div class="line">		<span class="keyword">for</span>(ll j=<span class="number">1</span>;j&lt;i;++j)</div><div class="line">			<span class="keyword">if</span>(p[i].y&gt;=p[j].y) (f[i]-=f[j]*C(p[i].x+p[i].y-p[j].x-p[j].y,p[i].x-p[j].x)%mod)%=mod;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(f[k]+mod)%mod);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> 组合计数 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【51nod1587】半现串]]></title>
      <url>/2017/04/21/1587/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.51nod.com/onlineJudge/questionCode.html#!problemId=1587" target="_blank" rel="external">AC通道</a></p>
<p>这是一种套路：用AC自动机+数位dp来统计某种必须出现的串或者不能出现的串的数量</p>
<p>首先我们把所有长度为d/2的串建成AC自动机</p>
<p>设$f[i][j][0/1]$表示前i位匹配到了AC自动机上的结点j是否匹配上的方案数</p>
<p>则$f[i][j][k]→f[i+1][tr[j][x]][k|tr[j][x]]$  （x为当前枚举数位上的数）</p>
<p>我用的是记忆化搜索，感觉记忆化搜索根本不用动脑子</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=(<span class="keyword">int</span>)<span class="number">1e9</span>+<span class="number">7</span>;</div><div class="line"><span class="keyword">int</span> n,d,cnt,num[<span class="number">55</span>],vis[<span class="number">50010</span>],fail[<span class="number">50010</span>],tr[<span class="number">50010</span>][<span class="number">10</span>];</div><div class="line">ll ans,f[<span class="number">55</span>][<span class="number">50010</span>][<span class="number">2</span>];</div><div class="line"><span class="keyword">char</span> ch[<span class="number">1010</span>],a[<span class="number">55</span>],b[<span class="number">55</span>],s[<span class="number">55</span>];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=(d&gt;&gt;<span class="number">1</span>);++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!tr[now][s[i]-<span class="string">'0'</span>])  tr[now][s[i]-<span class="string">'0'</span>]=++cnt;</div><div class="line">		now=tr[now][s[i]-<span class="string">'0'</span>];</div><div class="line">	&#125;</div><div class="line">	vis[now]=<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i) <span class="keyword">if</span>(tr[<span class="number">0</span>][i]) q.push(tr[<span class="number">0</span>][i]);</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> now=q.front(); q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;++i)&#123;</div><div class="line">			<span class="keyword">if</span>(!tr[now][i])  tr[now][i]=tr[fail[now]][i];</div><div class="line">			<span class="keyword">else</span> fail[tr[now][i]]=tr[fail[now]][i],q.push(tr[now][i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k,<span class="keyword">int</span> flag)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(i==d+<span class="number">1</span>)  <span class="keyword">return</span> k;</div><div class="line">	<span class="keyword">if</span>(!flag&amp;&amp;f[i][j][k]!=<span class="number">-1</span>)  <span class="keyword">return</span> f[i][j][k];</div><div class="line">	ll ret=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;=(flag?num[i]:<span class="number">9</span>);++x)</div><div class="line">		(ret+=dfs(i+<span class="number">1</span>,tr[j][x],k|vis[tr[j][x]],flag&amp;&amp;(x==num[i])))%=mod;</div><div class="line">	<span class="keyword">if</span>(!flag)  f[i][j][k]=ret;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">0</span>,ret=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=d;++i)&#123;</div><div class="line">		now=tr[now][a[i]-<span class="string">'0'</span>];</div><div class="line">		ret|=vis[now];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s%s%s"</span>,ch+<span class="number">1</span>,a+<span class="number">1</span>,b+<span class="number">1</span>);</div><div class="line">	n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);  d=<span class="built_in">strlen</span>(a+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-(d&gt;&gt;<span class="number">1</span>)+<span class="number">1</span>;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=i+(d&gt;&gt;<span class="number">1</span>)<span class="number">-1</span>;++j)</div><div class="line">			s[j-i+<span class="number">1</span>]=ch[j];</div><div class="line">		extend();</div><div class="line">	&#125;</div><div class="line">	build();</div><div class="line">	<span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=d;++i)  num[i]=b[i]-<span class="string">'0'</span>;</div><div class="line">	ans+=dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=d;++i)  num[i]=a[i]-<span class="string">'0'</span>;</div><div class="line">	ans-=dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">	ans+=check();  ans=(ans%mod+mod)%mod;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> AC自动机 </tag>
            
            <tag> 数位dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3331】压力]]></title>
      <url>/2017/04/20/3331/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3331" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>首先我们将原图做点双建出一颗广义圆方树，然后对于每个询问，在树上找到lca，然后计算差分数组</p>
<p>最后dfs一遍求出答案</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,m,Q,len,bcnt,top,dfs_clock,deep[MAXN],Link[MAXN],dfn[MAXN],low[MAXN],sta[MAXN],ans[MAXN],anc[MAXN][<span class="number">25</span>];</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;bcc[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	dfn[x]=low[x]=++dfs_clock;  sta[++top]=x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)&#123;</div><div class="line">		<span class="keyword">if</span>(!dfn[e[i].y])&#123;</div><div class="line">			tarjan(e[i].y);  cmin(low[x],low[e[i].y]);</div><div class="line">			<span class="keyword">if</span>(low[e[i].y]&gt;=dfn[x])&#123;</div><div class="line">				bcnt++;  <span class="keyword">int</span> y;</div><div class="line">				<span class="keyword">do</span>&#123;</div><div class="line">					y=sta[top--];</div><div class="line">					bcc[bcnt].push_back(y);</div><div class="line">				&#125;<span class="keyword">while</span>(y!=e[i].y);</div><div class="line">				bcc[bcnt].push_back(x);</div><div class="line">			&#125;</div><div class="line">		&#125;<span class="keyword">else</span> cmin(low[x],dfn[e[i].y]);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	anc[x][<span class="number">0</span>]=fa;  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;++i)  anc[x][i]=anc[anc[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		deep[e[i].y]=deep[x]+<span class="number">1</span>; dfs1(e[i].y,x);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(deep[x]&lt;deep[y])  swap(x,y);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;--i)  <span class="keyword">if</span>(deep[anc[x][i]]&gt;=deep[y])  x=anc[x][i];</div><div class="line">	<span class="keyword">if</span>(x==y)  <span class="keyword">return</span> x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;--i)  <span class="keyword">if</span>(anc[x][i]!=anc[y][i])  x=anc[x][i],y=anc[y][i];</div><div class="line">	<span class="keyword">return</span> anc[x][<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		dfs2(e[i].y,x);  ans[x]+=ans[e[i].y];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  Q=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y);</div><div class="line">	&#125;</div><div class="line">	tarjan(<span class="number">1</span>);  <span class="built_in">memset</span>(Link,<span class="number">0</span>,<span class="keyword">sizeof</span>(Link));  len=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bcnt;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;bcc[i].size();++j)insert(i+n,bcc[i][j]);</div><div class="line">	deep[<span class="number">1</span>]=<span class="number">1</span>;  dfs1(<span class="number">1</span>,<span class="number">0</span>);  </div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Q;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),t=lca(x,y);</div><div class="line">		ans[x]++;  ans[y]++;  ans[t]--;  ans[anc[t][<span class="number">0</span>]]--;</div><div class="line">	&#125;</div><div class="line">	dfs2(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> tarjan </tag>
            
            <tag> 差分 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1123】BLO]]></title>
      <url>/2017/04/20/1123/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1123" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>求出割点，然后统计答案即可</p>
<p>做水题的感觉挺爽的</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXM 500010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXM&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,len,dfs_clock,Link[MAXN],dfn[MAXN],low[MAXN],size[MAXN]; ll ans[MAXN];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	dfn[x]=low[x]=++dfs_clock;  size[x]=<span class="number">1</span>;  <span class="keyword">int</span> sum=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)&#123;</div><div class="line">		<span class="keyword">if</span>(!dfn[e[i].y])&#123;</div><div class="line">			tarjan(e[i].y);  cmin(low[x],low[e[i].y]);</div><div class="line">			size[x]+=size[e[i].y];</div><div class="line">			<span class="keyword">if</span>(low[e[i].y]&gt;=dfn[x])&#123;</div><div class="line">				ans[x]+=(ll)size[e[i].y]*sum*<span class="number">2</span>;</div><div class="line">				sum+=size[e[i].y];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> cmin(low[x],dfn[e[i].y]);</div><div class="line">	&#125;</div><div class="line">	ans[x]+=(ll)sum*(n-sum<span class="number">-1</span>)*<span class="number">2</span>+(n<span class="number">-1</span>)*<span class="number">2</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y);  insert(y,x);</div><div class="line">	&#125;</div><div class="line">	tarjan(<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> tarjan </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【51nod1469】淋漓尽致子串]]></title>
      <url>/2017/04/20/1469/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<ul>
<li><a href="http://www.51nod.com/onlineJudge/questionCode.html#!problemId=1469" target="_blank" rel="external">AC通道</a></li>
</ul>
<p>首先建立后缀自动机,然后对于每个状态：</p>
<p>如果他的size为1，则这个状态不合法</p>
<p>如果他能转移到一个size&gt;1的状态，那么这个状态也不合法</p>
<p>如果他在parent树上有一个size&gt;1的孩子，那么这个状态也不合法</p>
<p>剩下的就是合法的，统计合法状态的数量就可以了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,ans,now(<span class="number">1</span>),cnt(<span class="number">1</span>),c[MAXN],id[MAXN],mx[MAXN],par[MAXN],Right[MAXN],vis[MAXN],son[MAXN][<span class="number">26</span>];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> np=++cnt,p=now;</div><div class="line">	mx[np]=mx[p]+<span class="number">1</span>;  now=np;  Right[np]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(!son[p][x]&amp;&amp;p)  son[p][x]=np,p=par[p];</div><div class="line">	<span class="keyword">if</span>(!p)  par[np]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> q=son[p][x];</div><div class="line">		<span class="keyword">if</span>(mx[q]==mx[p]+<span class="number">1</span>)  par[np]=q;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> nq=++cnt; mx[nq]=mx[p]+<span class="number">1</span>;</div><div class="line">			<span class="built_in">memcpy</span>(son[nq],son[q],<span class="keyword">sizeof</span>(son[q]));</div><div class="line">			par[nq]=par[q];  par[q]=par[np]=nq;</div><div class="line">			<span class="keyword">while</span>(son[p][x]==q&amp;&amp;p)  son[p][x]=nq,p=par[p];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  extend(ch[i]-<span class="string">'a'</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  c[mx[i]]++;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  c[i]+=c[i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  id[c[mx[i]]--]=i;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=cnt;i;--i)  Right[par[id[i]]]+=Right[id[i]];  Right[<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=cnt;i;--i)  <span class="keyword">if</span>(Right[id[i]]&gt;<span class="number">1</span>||vis[id[i]])  vis[par[id[i]]]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  <span class="keyword">if</span>(Right[i]&lt;=<span class="number">1</span>)  vis[i]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;++j)<span class="keyword">if</span>(Right[son[i][j]]&gt;<span class="number">1</span>)vis[i]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=cnt;++i)<span class="keyword">if</span>(!vis[i])ans++;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> 后缀自动机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CF#526D/51nod1554】欧姆诺姆和项链]]></title>
      <url>/2017/04/20/CF-526D/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<ul>
<li><a href="http://www.51nod.com/onlineJudge/questionCode.html#!problemId=1554" target="_blank" rel="external">AC通道1</a></li>
<li><a href="http://codeforces.com/contest/526/problem/D" target="_blank" rel="external">AC通道2</a></li>
</ul>
<p>这道题非常玄妙啊</p>
<p>首先我们把$S$拆成循环串，即$S=PPPPPPPPT$，其中$T$是$P$的前缀</p>
<p>设$S$中含有$R$个$T$，因为$S=A+B+…+B+A$，所以设$A$中含有$x$个$T$，则AB中含有$\frac{R-x}{k}$个T，且$k|(R-x)$</p>
<p>所以B中含有$\frac{R-x}{k}-x$ 个T，我们需要满足$x&gt;=0$的同时使得$\frac{R-x}{k}-x&gt;0$</p>
<p>设$f(x)= \frac{R-x}{k}-x$，我们要保证$f(x)&gt;0$,也就是说保证$f(x)$的最大值大于$0$</p>
<p>我们发现$f(x)$为减函数，所以$x$的取值应该尽量小，同时又要满足$k|(R-x)$，所以$x=R%k$</p>
<p>所以我们只需要令$x=R%k$，然后判断$f(x)$是否大于$0$即可</p>
<p>特别的如果$P=T$，那么$B$串是可以为空的，也就是说保证的是$f(x)&gt;=0$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,k,pre[MAXN];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  k=read();</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  pre[<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(ch[j+<span class="number">1</span>]!=ch[i]&amp;&amp;j)  j=pre[j];</div><div class="line">		<span class="keyword">if</span>(ch[j+<span class="number">1</span>]==ch[i])  ++j;  pre[i]=j;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> R=i/(i-pre[i]);</div><div class="line">		<span class="keyword">if</span>(i%(i-pre[i]))&#123;</div><div class="line">			<span class="keyword">if</span>(R/k-R%k&gt;<span class="number">0</span>)  <span class="built_in">putchar</span>(<span class="string">'1'</span>);</div><div class="line">			<span class="keyword">else</span> <span class="built_in">putchar</span>(<span class="string">'0'</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">if</span>(R/k-R%k&gt;=<span class="number">0</span>)  <span class="built_in">putchar</span>(<span class="string">'1'</span>);</div><div class="line">			<span class="keyword">else</span> <span class="built_in">putchar</span>(<span class="string">'0'</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> kmp </tag>
            
            <tag> 公式推导 </tag>
            
            <tag> CF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】KMP算法]]></title>
      <url>/2017/04/19/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91KMP%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><hr>
<p>　　KMP算法由Knuth、Morris、Pratt三人提出，为了解决字符串匹配问题，但是对于初学者难以理解，我也是先后学了多次才理解</p>
<p>　　KMP要解决的问题是：给定两个字符串$A$和$B$，长度分别为$n$和$m$，判断$B$是否在$A$中出现过</p>
<p>　　常规的方法是遍历A中的每一个位置进行匹配，时间复杂度$O(n^2)$</p>
<p>　　这样的方法效率很低，我们要想办法降低它的时间复杂度，这就是KMP算法诞生的意义</p>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h2><hr>
<h3 id="从朴素算法说起"><a href="#从朴素算法说起" class="headerlink" title="从朴素算法说起"></a>从朴素算法说起</h3><p>　　朴素做法是遍历A中的每一个位置进行匹配，时间复杂度$O(n^2)$</p>
<p>　　考虑这样做为什么效率低下，时间究竟浪费在了什么地方？</p>
<p>　　事实上，朴素算法中失配时的选择是B串后移一位，重新匹配，但是它没有考虑前i-1位已经比较过这个事实，所以效率不高</p>
<p>　　那么我们考虑是否可以通过记录已经通过匹配获得到的信息，使得失配时从B串后移k位，然后继续开始匹配，而不是B串仅仅后移一位</p>
<p>　　这就是优化算法的突破口</p>
<p>　　</p>
<h3 id="字符串的boder"><a href="#字符串的boder" class="headerlink" title="字符串的boder"></a>字符串的boder</h3><p>　　通过上面的分析，我们知道可以在失配时将B串后移一位，然后重新开始匹配</p>
<p>　　设已经匹配的部分为S，失配后B串移动k为后，和A串匹配的部分为F</p>
<p>　　接下来，我们分析F需要满足什么样的条件，请看下图</p>
<p>　　<img src="http://i2.muimg.com/591838/99f1ada59fb711cb.png"></p>
<p>　　不难发现，F既是S的前缀又是S的后缀</p>
<p>　　我们把既是前缀又是后缀的子串称作字符串的boder</p>
<p>　　也就是说，我们可以预处理出B串的每个前缀的最长boder，然后和A串匹配，如果失配就将B串前移，令B串在当前失配位置的最长boder和A串匹配，然后继续匹配</p>
<p>　　代码也很容易实现：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;=n;++i)&#123;</div><div class="line">	<span class="keyword">while</span>(a[i]!=b[j+<span class="number">1</span>]&amp;&amp;j)  j=pre[j];<span class="comment">//如果失配，返回boder处</span></div><div class="line">	<span class="keyword">if</span>(a[i]==b[j+<span class="number">1</span>])  ++j;<span class="comment">//如果匹配上了，指针右移</span></div><div class="line">	<span class="keyword">if</span>(j==m)  ans=<span class="number">1</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<h3 id="预处理boder"><a href="#预处理boder" class="headerlink" title="预处理boder"></a>预处理boder</h3><p>　　现在的问题就是给定一个串，我们如何预处理出该串的最长boder</p>
<p>　　实际上求最长boder的过程是一个字符串自我匹配的过程</p>
<p>　　假设我们现在已经求得pre[1]~pre[i]，分别表示长度为1到i的字符串的前缀和后缀最大公共长度，现在要求pre[i+1]</p>
<p>　　如果A[i+1]==A[next[i]+1]，那么显然pre[i+1]=pre[i]+1</p>
<p>　　如果两个位置的字符不相同，我们可以将长度为next[i]的字符串继续分割，获得其最大公共长度next[next[i]]，然后再和位置i的字符比较。这是因为长度为next[i]前缀和后缀都可以分割成上部的构造，如果位置next[next[i]]和位置i的字符相同，则next[i+1]就等于next[next[i]]加1。如果不相等，就可以继续分割长度为next[next[i]]的字符串，直到字符串长度为0为止。</p>
<p>　　代码实现和上面的代码神似</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=m;++i)&#123;</div><div class="line">	<span class="keyword">while</span>(b[j+<span class="number">1</span>]!=b[i]&amp;&amp;j)  j=pre[j];</div><div class="line">	<span class="keyword">if</span>(b[j+<span class="number">1</span>]==b[i])  ++j;  pre[i]=j;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<h3 id="完整代码实现"><a href="#完整代码实现" class="headerlink" title="完整代码实现"></a>完整代码实现</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN (int)1e5+10</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,ans,pre[MAXN];</div><div class="line"><span class="keyword">char</span> a[MAXN],b[MAXN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,a+<span class="number">1</span>,b+<span class="number">1</span>);  n=<span class="built_in">strlen</span>(a+<span class="number">1</span>); m=<span class="built_in">strlen</span>(b+<span class="number">1</span>); </div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(b[j+<span class="number">1</span>]!=b[i]&amp;&amp;j)  j=pre[j];</div><div class="line">		<span class="keyword">if</span>(b[j+<span class="number">1</span>]==b[i])  ++j;  pre[i]=j;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(a[i]!=b[j+<span class="number">1</span>]&amp;&amp;j)  j=pre[j];<span class="comment">//如果失配，返回boder处</span></div><div class="line">		<span class="keyword">if</span>(a[i]==b[j+<span class="number">1</span>])  ++j;<span class="comment">//如果匹配上了，指针右移</span></div><div class="line">		<span class="keyword">if</span>(j==m)  ans=<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="时间复杂度分析"><a href="#时间复杂度分析" class="headerlink" title="时间复杂度分析"></a>时间复杂度分析</h2><hr>
<p>　　kmp的时间复杂度是线性的，但是从代码中很难看出，为此我们来分析一下kmp的时间复杂度</p>
<p>　　首先枚举匹配位置是线性的，唯一不确定的因素就是$j$指针的回溯</p>
<p>　　注意到$pre[j]&lt;j$，所以每次回溯，$j$指针至少减去$1$，而每次匹配$j$指针只增加$1$，并且保证$j$非负，所以$j$减少的次数不会超过增加的次数</p>
<p>　　而$j$增加的次数最多是$m$，也就是说$j$回溯的次数必定小于$m$，所以回溯的复杂度是$O(m)$的</p>
<p>　　所以kmp的时间复杂度是$O(n+m)$，这也就是该问题的时间复杂度的下线</p>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="kmp自动机"><a href="#kmp自动机" class="headerlink" title="kmp自动机"></a>kmp自动机</h2><hr>
<p>　　当我们求出pre数组后，将pre[i]向i连边，整张图构成了一颗有n+1个节点的树。</p>
<p>　　其中，０号点为根，从根到ｉ路径上的点都是A[1~i]的boder，于是在统计与boder相关的问题时就可以沿着这棵树进行贡献转移</p>
<p>　　上述结构成为kmp自动机，这个自动机可识别所有的boder</p>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><hr>
<ul>
<li>《浅谈字符串匹配的几种方法》——王鉴浩的15年集训队论文</li>
<li>《KMP算法详解》——yutianzuijin  <a href="http://blog.csdn.net/yutianzuijin/article/details/11954939/" target="_blank" rel="external">传送门</a></li>
<li>《KMP算法详解》——Matrix67  <a href="http://www.matrix67.com/blog/archives/115" target="_blank" rel="external">传送门</a></li>
<li>《kmp算法总结》——ddyyxx  <a href="http://blog.csdn.net/dyx404514/article/details/41314009" target="_blank" rel="external">传送门</a></li>
</ul>
<p>　　</p>
<p>　　</p>
<p>　　</p>
]]></content>
      
        
        <tags>
            
            <tag> kmp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【51nod1292】字符串中的最大值]]></title>
      <url>/2017/04/19/1292/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.51nod.com/onlineJudge/questionCode.html#!problemId=1292" target="_blank" rel="external">AC通道</a></p>
<p>这题是后缀自动机一眼题，但是我们有更简洁的方法解决它</p>
<p>我们回想kmp算法，一个串在进行自我匹配时j指针所在的位置正好是长度为j的前缀，每次匹配长度为j的前缀都被匹配上了一次</p>
<p>我们只需要记录每次j指针的位置，然后cnt[j]++就能统计次数</p>
<p>博主刚开始就是这么干的，结果样例都过不了</p>
<p>经过手玩推导，博主发现在长度为j的前缀被匹配到的同时，可能出现长度小于j的前缀也匹配到了的情况</p>
<p>博主不会处理这种情况于是去翻大佬题解</p>
<p>在某篇博客中提到了一个叫做next树的东西，就像AC自动机fail树一样，kmp中的next指针也形成了一棵树</p>
<p>所以要按照顺序沿着next树更新cnt数组，长知识了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,pre[MAXN],cnt[MAXN];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);  ll ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>,j=<span class="number">0</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(ch[j+<span class="number">1</span>]!=ch[i]&amp;&amp;j)  j=pre[j];</div><div class="line">		<span class="keyword">if</span>(ch[j+<span class="number">1</span>]==ch[i])  ++j;  pre[i]=j;  cnt[j]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;--i)&#123;</div><div class="line">		cmax(ans,(ll)(cnt[i]+<span class="number">1</span>)*i);</div><div class="line">		cnt[pre[i]]+=cnt[i];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> kmp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3306】树]]></title>
      <url>/2017/04/19/3306/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3306" target="_blank" rel="external">AC通道</a></p>
<p>修改点权和查询子树最小值都是线段树维护dfs序的经典应用</p>
<p>只有换根操作令人头疼</p>
<p>考虑当前的root，如果root在以x为根的子树中，那么在查询x时，应该查询除去含有root的子树的所有子树</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,dfs_clock,len,root,v[MAXN],L[MAXN],R[MAXN],f[MAXN],Link[MAXN],deep[MAXN],anc[MAXN][<span class="number">25</span>],tr[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	L[x]=++dfs_clock;  anc[x][<span class="number">0</span>]=f[x];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;++i)  anc[x][i]=anc[anc[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=f[x])&#123;</div><div class="line">		deep[e[i].y]=deep[x]+<span class="number">1</span>;  dfs(e[i].y);</div><div class="line">	&#125;</div><div class="line">	R[x]=dfs_clock;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)  &#123;tr[p]=v; <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=mid)  change(p&lt;&lt;<span class="number">1</span>,l,mid,x,v);</div><div class="line">	<span class="keyword">else</span> change(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,v);</div><div class="line">	tr[p]=min(tr[p&lt;&lt;<span class="number">1</span>],tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span> INF;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  <span class="keyword">return</span> tr[p];</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">return</span> min(query(p&lt;&lt;<span class="number">1</span>,l,mid,x,y),query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">getans</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==root)  <span class="keyword">return</span> query(<span class="number">1</span>,<span class="number">1</span>,n,<span class="number">1</span>,n);</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(L[x]&lt;=L[root]&amp;&amp;R[x]&gt;=R[root])&#123;</div><div class="line">		<span class="keyword">int</span> y=root;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">if</span>(deep[anc[y][i]]&gt;deep[x])  y=anc[y][i];</div><div class="line">		<span class="keyword">return</span> min(query(<span class="number">1</span>,<span class="number">1</span>,n,<span class="number">1</span>,L[y]<span class="number">-1</span>),query(<span class="number">1</span>,<span class="number">1</span>,n,R[y]+<span class="number">1</span>,n));</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> query(<span class="number">1</span>,<span class="number">1</span>,n,L[x],R[x]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  deep[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		f[i]=read();  v[i]=read();</div><div class="line">		insert(i,f[i]);  insert(f[i],i);</div><div class="line">	&#125;</div><div class="line">	dfs(<span class="number">1</span>);	 root=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) change(<span class="number">1</span>,<span class="number">1</span>,n,L[i],v[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">char</span> ch[<span class="number">5</span>]; <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch); <span class="keyword">int</span> x,y;</div><div class="line">		<span class="keyword">switch</span>(ch[<span class="number">0</span>])&#123;</div><div class="line">			<span class="keyword">case</span> <span class="string">'V'</span>:x=read(),y=read();change(<span class="number">1</span>,<span class="number">1</span>,n,L[x],y);<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="string">'E'</span>:x=read(),root=x;<span class="keyword">break</span>;</div><div class="line">			<span class="keyword">case</span> <span class="string">'Q'</span>:x=read();<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,getans(x));<span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<p>此外还有一种比较玄妙的LCT做法，来自POPOQQQ</p>
<p>用multiset维护每个点所连接的虚边所代表的子树的最小值</p>
<p>这样的话换根操作用LCT维护就名正言顺了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,len,Link[MAXN],f[MAXN],v[MAXN],tag[MAXN],mn[MAXN],sta[MAXN],son[MAXN][<span class="number">2</span>];</div><div class="line"><span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt;S[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="keyword">namespace</span> Link_Cut_Tree&#123;</div><div class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">1</span>]==x;&#125;</div><div class="line">	<span class="function"><span class="keyword">bool</span> <span class="title">isroot</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> (son[f[x]][<span class="number">0</span>]!=x&amp;&amp;son[f[x]][<span class="number">1</span>]!=x);&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">		mn[x]=(*S[x].begin());</div><div class="line">		<span class="keyword">if</span>(son[x][<span class="number">0</span>])  cmin(mn[x],mn[son[x][<span class="number">0</span>]]);</div><div class="line">		<span class="keyword">if</span>(son[x][<span class="number">1</span>])  cmin(mn[x],mn[son[x][<span class="number">1</span>]]);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">		<span class="keyword">if</span>(tag[x])&#123;</div><div class="line">			swap(son[x][<span class="number">0</span>],son[x][<span class="number">1</span>]);</div><div class="line">			tag[son[x][<span class="number">0</span>]]^=<span class="number">1</span>;  tag[son[x][<span class="number">1</span>]]^=<span class="number">1</span>;</div><div class="line">			tag[x]=<span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> y=f[x],z=f[y],which=get(x);</div><div class="line">		<span class="keyword">if</span>(!isroot(y))  son[z][son[z][<span class="number">1</span>]==y]=x;</div><div class="line">		son[y][which]=son[x][which^<span class="number">1</span>];  f[son[y][which]]=y;</div><div class="line">		son[x][which^<span class="number">1</span>]=y;  f[y]=x;  f[x]=z;</div><div class="line">		updata(y);  updata(x);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">		<span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">(<span class="number">0</span>)</span></span>;  sta[++top]=x;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=x;!isroot(i);i=f[i])sta[++top]=f[i];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=top;i;--i)  pushdown(sta[i]);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> y=f[x];!isroot(x);rotate(x),y=f[x])</div><div class="line">			<span class="keyword">if</span>(!isroot(y))  rotate(get(x)==get(y)?y:x);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> temp=<span class="number">0</span>;x;temp=x,x=f[x])&#123;</div><div class="line">			splay(x);</div><div class="line">			<span class="keyword">if</span>(son[x][<span class="number">1</span>])  S[x].insert(mn[son[x][<span class="number">1</span>]]);</div><div class="line">			<span class="keyword">if</span>(temp)  S[x].erase(S[x].find(mn[temp]));</div><div class="line">			son[x][<span class="number">1</span>]=temp;</div><div class="line">			updata(x);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;access(x);splay(x);tag[x]^=<span class="number">1</span>;&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> Link_Cut_Tree;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=f[x])&#123;</div><div class="line">		dfs(e[i].y);</div><div class="line">		S[x].insert(mn[e[i].y]);</div><div class="line">	&#125;</div><div class="line">	updata(x);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		f[i]=read();  v[i]=read();  S[i].insert(v[i]);</div><div class="line">		insert(f[i],i);  insert(i,f[i]);</div><div class="line">	&#125;</div><div class="line">	dfs(<span class="number">1</span>);  <span class="keyword">char</span> ch[<span class="number">5</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch);</div><div class="line">		<span class="keyword">if</span>(ch[<span class="number">0</span>]==<span class="string">'V'</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=read(),value=read();</div><div class="line">			access(x);  splay(x);  </div><div class="line">			S[x].erase(S[x].find(v[x]));</div><div class="line">			S[x].insert(value);  v[x]=value;</div><div class="line">			updata(x);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(ch[<span class="number">0</span>]==<span class="string">'E'</span>)&#123;<span class="keyword">int</span> x=read(); reverse(x);&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> x=read();</div><div class="line">			access(x);  splay(x);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(*S[x].begin()));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> bzoj </tag>
            
            <tag> LCT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【51nod】序列求和v1~v5解题报告]]></title>
      <url>/2017/04/12/%E3%80%9051nod%E3%80%91%E5%BA%8F%E5%88%97%E6%B1%82%E5%92%8Cv1-v5%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<hr>
<p>今天考了机房最强妹子wyj的互测题，跪在了T2</p>
<p>然后uoj大佬说这是一道51nod上的题，于是我便去创建了一个账号</p>
<p>然后发现51nod上有5道这样的题目</p>
<p>于是我就立下了一个flag，然将这5道题目切掉</p>
<p>(flag毕竟是flag，有很大的可能性刚不动而弃疗</p>
<h2 id="序列求和-level-1"><a href="#序列求和-level-1" class="headerlink" title="序列求和$level 1$"></a>序列求和$level 1$</h2><p><a href="http://www.51nod.com/onlineJudge/questionCode.html#!problemId=1228" target="_blank" rel="external">传送门</a></p>
<p>【一句话题意】</p>
<blockquote>
<p>给定$n$和$k$，求$\sum_{i=1}^{n}i^k$，结果对$10^9+7$取模</p>
</blockquote>
<p>【解析】</p>
<blockquote>
<p>有一个叫做伯努利数的东西，它是这样定义的：$\sum_{k=0}^{n} C_{n+1}^kB_{k}=0$<br> 　　<br>通过定义我们可以得到它的递推式：$b_{n}=-\frac{1}{n+1}(C_{n+1}^0B_{0}+C_{n+1}^1B_{1}+…+C_{n+1}^{n-1} B_{n-1})$<br>　　<br>然后给出自然数幂求和的公式(我不会证明)：$\sum_{i=1}^{n}i^k=\frac{1}{k+1}\sum_{i=1}^{k+1} C_{k+1}^i B_{k+1-i} (n+1)^i$<br>　　<br>那么这个问题就完美的解决了，我们只需要递推出所有的伯努利数，就能求出自然数幂的和<br>　　<br>时间复杂度：$O(n^2)$</p>
</blockquote>
<p>【AC代码】(话说这东西直接在51nod上看还得花60个点头盾)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> D 50</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=(<span class="keyword">int</span>)<span class="number">1e9</span>+<span class="number">7</span>;</div><div class="line">ll n,k,ans,p[MAXN+D],b[MAXN+D],inv[MAXN+D],c[MAXN+D][MAXN+D];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		c[i][<span class="number">0</span>]=c[i][i]=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;++j)</div><div class="line">			c[i][j]=(c[i<span class="number">-1</span>][j]+c[i<span class="number">-1</span>][j<span class="number">-1</span>])%mod;</div><div class="line">	&#125;</div><div class="line">	inv[<span class="number">1</span>]=<span class="number">1</span>;<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;++i)inv[i]=(mod-mod/i)*inv[mod%i]%mod;</div><div class="line">	b[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;++j)  (b[i]+=b[j]*c[i+<span class="number">1</span>][j]%mod)%=mod;</div><div class="line">		b[i]*=-inv[i+<span class="number">1</span>];  b[i]=(b[i]%mod+mod)%mod;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  k=read();  n%=mod;  p[<span class="number">0</span>]=<span class="number">1</span>;  ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k+<span class="number">1</span>;++i)  p[i]=p[i<span class="number">-1</span>]*(n+<span class="number">1</span>)%mod;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k+<span class="number">1</span>;++i)  (ans+=c[k+<span class="number">1</span>][i]*b[k+<span class="number">1</span>-i]%mod*p[i]%mod)%=mod;</div><div class="line">	ans=ans*inv[k+<span class="number">1</span>]%mod;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre();<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T)solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="序列求和-level2"><a href="#序列求和-level2" class="headerlink" title="序列求和$level2$"></a>序列求和$level2$</h2><p><a href="http://www.51nod.com/onlineJudge/questionCode.html#!problemId=1229" target="_blank" rel="external">传送门</a></p>
<p>【一句话题意】</p>
<blockquote>
<p>给定$n$，$k$，$r$，求$\sum_{i=1}^{n}i^k r^i$，结果对$10^9+7$取模</p>
</blockquote>
<p>【解析】</p>
<blockquote>
<p>错位相减法 （似乎是高中数学知识）<br>　　<br>设$S(n,k)=\sum_{i=1}^{n}i^k r^i$，那么有：<br>　　<br>$S(n,k)=1^k r^1+2^k r^2+…+n^k r^n$<br>　　<br>$rS(n,k)=1^k r^2+2^k r^3+…+n^k r^{n+1}$<br>　　<br>$(1-r)S(n,k)=r+(2^k-1^k)r^2+(3^k-2^k)r^3+…+[(n+1)^k-n^k)]r^{n+1}-(n+1)^k r^{n+1}$<br>　　<br>重点关注$(n+1)^k-n^k$，因为我们发现$(n+1)^k$可以使用二项式定理展开<br>　　<br>$(n+1)^k-n^k=C_{k}^1 n^{k-1}+C_{k}^2 n^{k-2}+…+C_{k}^k n^0$<br>　　<br>所以$S(n,k)=\sum_{i=1}^{k} \sum_{j=1}^{n}C_{k}^i j^{k-i}r^j+r-(n+1)^k r^{n+1}$<br>　　<br>所以$S(n,k)=\sum_{i=1}^{k}C_{k}^{i} S(n,k-i)+r-(n+1)^k r^{n+1}$<br>　　<br>这是一个递归式，当$k=0$时，$S(n,0)=\frac{r(r^n-1)}{r-1}$<br>　　<br>所以我们使用记忆化搜索就能解决这个问题<br>　　<br>注意当$r=1$时，分母为$0$，此时需要特判，解法和$level1$是一样的</p>
</blockquote>
<p>【AC代码】</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=(<span class="keyword">int</span>)<span class="number">1e9</span>+<span class="number">7</span>,MAXN=<span class="number">2000</span>,D=<span class="number">50</span>;</div><div class="line">ll n,k,r,c[MAXN+D][MAXN+D],inv[MAXN+D],b[MAXN+D],f[MAXN+D],p[MAXN+D];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">fast</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="function">ll <span class="title">temp</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=a*a%mod)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)temp=temp*a%mod;<span class="keyword">return</span> temp;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		c[i][<span class="number">0</span>]=c[i][i]=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;++j)</div><div class="line">			c[i][j]=(c[i<span class="number">-1</span>][j<span class="number">-1</span>]+c[i<span class="number">-1</span>][j])%mod;</div><div class="line">	&#125;</div><div class="line">	inv[<span class="number">1</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;++i) inv[i]=(mod-mod/i)*inv[mod%i]%mod;</div><div class="line">	b[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;++j)  (b[i]+=c[i+<span class="number">1</span>][j]*b[j]%mod)%=mod;</div><div class="line">		b[i]*=-inv[i+<span class="number">1</span>];  b[i]=(b[i]%mod+mod)%mod;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(f[k]!=<span class="number">-1</span>)  <span class="keyword">return</span> f[k];</div><div class="line">	<span class="keyword">if</span>(!k)&#123;</div><div class="line">		f[k]=r*(fast(r,n)<span class="number">-1</span>)%mod*fast(r<span class="number">-1</span>,mod<span class="number">-2</span>)%mod;  </div><div class="line">		f[k]=(f[k]%mod+mod)%mod;</div><div class="line">		<span class="keyword">return</span> f[k];</div><div class="line">	&#125;</div><div class="line">	f[k]=fast((n+<span class="number">1</span>)%mod,k)*fast(r,n+<span class="number">1</span>)%mod*fast(r<span class="number">-1</span>,mod<span class="number">-2</span>)%mod;  ll temp=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;++i)  (temp+=c[k][i]*dfs(k-i)%mod)%=mod;</div><div class="line">	f[k]=f[k]-r*fast(r<span class="number">-1</span>,mod<span class="number">-2</span>)%mod*temp%mod;  f[k]=(f[k]%mod+mod)%mod;</div><div class="line">	<span class="keyword">return</span> f[k];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  k=read();  r=read()%mod;  </div><div class="line">	<span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">	<span class="keyword">if</span>(r==<span class="number">1</span>)&#123;</div><div class="line">		ll ans=<span class="number">0</span>;  n%=mod;  p[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k+<span class="number">1</span>;++i)  p[i]=p[i<span class="number">-1</span>]*(n+<span class="number">1</span>)%mod;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k+<span class="number">1</span>;++i)  ans=(ans+c[k+<span class="number">1</span>][i]*b[k+<span class="number">1</span>-i]%mod*p[i]%mod)%mod;</div><div class="line">		ans=ans*inv[k+<span class="number">1</span>]%mod;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dfs(k));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre();<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T)solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="序列求和-level3"><a href="#序列求和-level3" class="headerlink" title="序列求和$level3$"></a>序列求和$level3$</h2><p><a href="http://www.51nod.com/onlineJudge/questionCode.html#!problemId=1236" target="_blank" rel="external">传送门</a></p>
<p>【一句话题意】</p>
<blockquote>
<p>给定$n$和$k$，求$\sum_{i=1}^{n} f[i]^k$，其中$f[i]$为斐波那契数列第$i$项，结果对$10^9+9$取模</p>
</blockquote>
<p>【解析】</p>
<blockquote>
<p>首先我们知道菲波那切数列的通项为$f[n]=\frac{1}{\sqrt 5}[(\frac{1+\sqrt 5}{2})^n-(\frac{1-\sqrt 5}{2})^n]$<br>　　<br>所以$ans=\sum_{i=1}^{n}(\frac{1}{\sqrt 5})^k [(\frac{1+\sqrt 5}{2})^i-(\frac{1-\sqrt 5}{2})^i]^k$<br>　　<br>根据二项式定理展开得到：$ans=(\frac{1}{\sqrt 5})^k \sum_{i=1}^{n} \sum_{j=0}^{k} (-1)^j C_{k}^{j} [(\frac{1+\sqrt 5}{2})^{k-j}-(\frac{1-\sqrt 5}{2})^j]^i$<br>　　<br>变换求和号位置得到：$ans=(\frac{1}{\sqrt 5})^k \sum_{i=0}^{k} (-1)^i C_{k}^{i} \sum_{j=1}^{n} [(\frac{1+\sqrt 5}{2})^{k-i}-(\frac{1-\sqrt 5}{2})^i]^j$<br>　　<br>然后我们发现$\sum_{j=1}^{n} [(\frac{1+\sqrt 5}{2})^{k-i}-(\frac{1-\sqrt 5}{2})^i]^j$相当于等比数列求和，直接计算就好了<br>　　<br>时间复杂度：$O(k\log n)$<br>　　<br>注意：求$\sqrt 5$在模意义下的值需要使用二次剩余，即计算$x^2 = 5 (mod p)$的方程的解</p>
</blockquote>
<p>【AC代码】</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> D 50</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> ll mod=(ll)<span class="number">1e9</span>+<span class="number">9</span>;</div><div class="line">ll n,k,B,w,A[<span class="number">5</span>],p[MAXN+D],inv[MAXN+D];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">	ll p,d;</div><div class="line">	node(ll a=<span class="number">0</span>,ll b=<span class="number">0</span>):p(a),d(b)&#123;&#125;</div><div class="line">	<span class="keyword">inline</span> node <span class="keyword">operator</span> *(<span class="keyword">const</span> node &amp;b)&#123;</div><div class="line">		<span class="keyword">return</span> node((p*b.p%mod+d*b.d%mod*w%mod)%mod,(p*b.d%mod+d*b.p%mod)%mod);</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line"><span class="function">ll <span class="title">fast</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="function">ll <span class="title">temp</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=a*a%mod)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)temp=temp*a%mod;<span class="keyword">return</span> temp;&#125;</div><div class="line"><span class="function">node <span class="title">Fast</span><span class="params">(node a,ll b)</span></span>&#123;<span class="function">node <span class="title">temp</span><span class="params">(<span class="number">1</span>,<span class="number">0</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=a*a)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)temp=temp*a;<span class="keyword">return</span> temp;&#125;</div><div class="line"><span class="function">ll <span class="title">C</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> p[a]*inv[b]%mod*inv[a-b]%mod;&#125;</div><div class="line"><span class="function">ll <span class="title">Lerangde</span><span class="params">(ll x)</span></span>&#123;<span class="keyword">return</span> fast(x,(mod<span class="number">-1</span>)&gt;&gt;<span class="number">1</span>);&#125;</div><div class="line"><span class="function">ll <span class="title">solve</span><span class="params">(ll n)</span></span>&#123;</div><div class="line">	<span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">		ll a=rand()%mod;  w=((a*a-n)%mod+mod)%mod;</div><div class="line">		<span class="keyword">if</span>(Lerangde(w)==mod<span class="number">-1</span>)&#123;</div><div class="line">			<span class="function">node <span class="title">temp</span><span class="params">(a,<span class="number">1</span>)</span></span>;  temp=Fast(temp,(mod+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>);</div><div class="line">			<span class="keyword">return</span> temp.p;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	B=solve(<span class="number">5</span>); p[<span class="number">0</span>]=<span class="number">1</span>; </div><div class="line">	A[<span class="number">1</span>]=(<span class="number">1</span>+B)*fast(<span class="number">2</span>,mod<span class="number">-2</span>)%mod;</div><div class="line">	A[<span class="number">2</span>]=(<span class="number">1</span>-B)*fast(<span class="number">2</span>,mod<span class="number">-2</span>)%mod;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i) p[i]=p[i<span class="number">-1</span>]*i%mod;</div><div class="line">	inv[MAXN]=fast(p[MAXN],mod<span class="number">-2</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=MAXN<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)  inv[i]=inv[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  k=read();  ll ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;++i)&#123;</div><div class="line">		ll q=fast(A[<span class="number">1</span>],k-i)*fast(A[<span class="number">2</span>],i)%mod;</div><div class="line">		<span class="keyword">if</span>(q==<span class="number">1</span>)&#123;</div><div class="line">			ans+=C(k,i)*fast(<span class="number">-1</span>,i)%mod*(n%mod)%mod;</div><div class="line">			ans=(ans%mod+mod)%mod;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			ans+=C(k,i)*fast(<span class="number">-1</span>,i)%mod*q%mod*(fast(q,n)<span class="number">-1</span>)%mod*fast(q<span class="number">-1</span>,mod<span class="number">-2</span>)%mod;</div><div class="line">			ans=(ans%mod+mod)%mod;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	ans=ans*fast(fast(B,k),mod<span class="number">-2</span>)%mod;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre();<span class="keyword">for</span>(ll T=read();T;--T)work();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>　　</p>
<p>　　</p>
<p>　　</p>
<h2 id="序列求和-level4"><a href="#序列求和-level4" class="headerlink" title="序列求和$level4$"></a>序列求和$level4$</h2><p><a href="http://www.51nod.com/onlineJudge/questionCode.html#!problemId=1258" target="_blank" rel="external">传送门</a></p>
<p>【一句话题意】</p>
<blockquote>
<p>给定$n$和$k$，求$\sum_{i=1}^{n}i^k$，结果对$10^9+7$取模<br>　　<br>$level4$是$level1$的加强版</p>
</blockquote>
<p>【解析】</p>
<blockquote>
<p>$k$的范围到了$50000$，所以我们不能用$level1$中的方法预处理伯努利数了，要想办法把$N^2$的复杂度降下来<br>　　<br>伯努利数的生成函数是$G(x)=\sum_{i=0}^{+oo}\frac{B_i}{i!} x_i$<br>　　<br>其中$G(x)$的计算式为$G(x)=\frac{x}{e^x-1}$<br>　　<br>将$e^x$进行泰勒展开得到$G(x)=\frac{1}{\sum_{i=0}^{+oo} \frac{x^i}{(i+1)!}}$<br>　　<br>所以我们只需要求多项式$\frac{1}{\sum_{i=0}^{+oo} \frac{x^i}{(i+1)!}}$的逆元就能求出$G(x)$，从而预处理出伯努利数<br>　　<br>时间复杂度：$O(n\log n)$<br>　　<br>注意：多项式逆元需要用到$NTT$，但是模数不符合要求，所以我们采用三模数$NTT$再用$CRT$还原系数<br>　　<br>写起来非常糟心，博主调了整整三天才A掉，千万注意$CRT$还原系数时必须一步一步还原<br>　　<br>具体参考代码，不明白的地方可以留言</p>
</blockquote>
<p>【AC代码】</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 264000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> M[<span class="number">3</span>]=&#123;<span class="number">998244353</span>,<span class="number">1004535809</span>,<span class="number">469762049</span>&#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> G[<span class="number">3</span>]=&#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>&#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</div><div class="line"><span class="keyword">const</span> ll MOD=(ll)M[<span class="number">0</span>]*M[<span class="number">1</span>];</div><div class="line">ll fac[MAXN],inv[MAXN],a[MAXN],b[MAXN],c[MAXN],temp[MAXN],p[MAXN],B[MAXN],_b[<span class="number">3</span>][MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">	ll P,G,w[MAXN],R[MAXN],wn[<span class="number">2</span>][MAXN];</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(ll &amp;a,ll &amp;b)</span></span>&#123;a=a^b;b=a^b;a=a^b;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> ll <span class="title">add</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> (a+=b)&gt;=P?a-P:a;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> ll <span class="title">sub</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> (a-=b)&lt;<span class="number">0</span>?a+P:a;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> ll <span class="title">mul</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1L</span>L*a*b%P;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> ll <span class="title">fast</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="function">ll <span class="title">sum</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=mul(a,a))<span class="keyword">if</span>(b&amp;<span class="number">1</span>)sum=mul(sum,a);<span class="keyword">return</span> sum;&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">(ll p,ll g)</span></span>&#123;</div><div class="line">		P=p; G=g; w[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">		wn[<span class="number">0</span>][<span class="number">18</span>]=fast(G,(P<span class="number">-1</span>)/(<span class="number">1</span>&lt;&lt;<span class="number">18</span>));</div><div class="line">		wn[<span class="number">1</span>][<span class="number">18</span>]=fast(wn[<span class="number">0</span>][<span class="number">18</span>],P<span class="number">-2</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">17</span>;i&gt;=<span class="number">0</span>;--i)<span class="keyword">for</span>(ll k=<span class="number">0</span>;k&lt;=<span class="number">1</span>;++k)wn[k][i]=mul(wn[k][i+<span class="number">1</span>],wn[k][i+<span class="number">1</span>]);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">NTT</span><span class="params">(ll *a,ll H,ll f=<span class="number">0</span>)</span></span>&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;H);++i) <span class="keyword">if</span>(i&lt;(R[i]=(R[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)&lt;&lt;(H<span class="number">-1</span>))))  swap(a[i],a[R[i]]);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">1</span>;e&lt;=H;++e)&#123;</div><div class="line">			<span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;(e<span class="number">-1</span>);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;++i) w[i]=mul(w[i<span class="number">-1</span>],wn[f][e]);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> st=<span class="number">0</span>;st&lt;(<span class="number">1</span>&lt;&lt;H);st+=l&lt;&lt;<span class="number">1</span>) <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;l;++k)&#123;</div><div class="line">				ll x=a[st+k],y=mul(w[k],a[st+k+l]);</div><div class="line">				a[st+k]=add(x,y);  a[st+k+l]=sub(x,y);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(f) <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;H);++i) a[i]=mul(a[i],fast((<span class="number">1</span>&lt;&lt;H),P<span class="number">-2</span>));</div><div class="line">	&#125;</div><div class="line">&#125;ntt[<span class="number">3</span>];</div><div class="line"><span class="function">ll <span class="title">C</span><span class="params">(ll n,ll m)</span></span>&#123;<span class="keyword">return</span> fac[n]*inv[m]%mod*inv[n-m]%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">mul</span><span class="params">(ll x,ll y,ll p)</span></span>&#123;<span class="keyword">return</span> ((x*y-(ll)(((<span class="keyword">long</span> <span class="keyword">double</span>)x*y+<span class="number">0.5</span>)/p)*p)%p+p)%p;&#125;<span class="comment">//一行快速乘</span></div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">fast</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;<span class="function">ll <span class="title">ret</span><span class="params">(<span class="number">1</span>)</span></span>;a%=p;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=a*a%p)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=ret*a%p;<span class="keyword">return</span> ret;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">CRT</span><span class="params">(ll a1,ll a2,ll a3)</span></span>&#123;</div><div class="line">	ll A=(mul(a1*M[<span class="number">1</span>]%MOD,fast(M[<span class="number">1</span>],M[<span class="number">0</span>]<span class="number">-2</span>,M[<span class="number">0</span>]),MOD)+mul(a2*M[<span class="number">0</span>]%MOD,fast(M[<span class="number">0</span>],M[<span class="number">1</span>]<span class="number">-2</span>,M[<span class="number">1</span>]),MOD))%MOD;</div><div class="line">	ll k=(a3+M[<span class="number">2</span>]-A%M[<span class="number">2</span>])*fast(MOD,M[<span class="number">2</span>]<span class="number">-2</span>,M[<span class="number">2</span>])%M[<span class="number">2</span>];</div><div class="line">	<span class="keyword">return</span> (k*(MOD%mod)%mod+A)%mod;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">getinv</span><span class="params">(ll *a,<span class="keyword">int</span> L)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;++i)  ntt[i].pre(M[i],G[i]);</div><div class="line">	b[<span class="number">0</span>]=CRT(ntt[<span class="number">0</span>].fast(a[<span class="number">0</span>],M[<span class="number">0</span>]<span class="number">-2</span>),ntt[<span class="number">1</span>].fast(a[<span class="number">0</span>],M[<span class="number">1</span>]<span class="number">-2</span>),ntt[<span class="number">2</span>].fast(a[<span class="number">0</span>],M[<span class="number">2</span>]<span class="number">-2</span>));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;++i)  _b[i][<span class="number">0</span>]=ntt[i].fast(a[<span class="number">0</span>],M[i]<span class="number">-2</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> now=<span class="number">0</span>;(<span class="number">1</span>&lt;&lt;now)&lt;L;++now)&#123;</div><div class="line">		<span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;(now+<span class="number">1</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">3</span>;++k)&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)  temp[i]=a[i],temp[i+l]=<span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)  _b[k][i]=b[i],_b[k][i+l]=<span class="number">0</span>;</div><div class="line">			ntt[k].NTT(_b[k],now+<span class="number">2</span>);  ntt[k].NTT(temp,now+<span class="number">2</span>);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(l&lt;&lt;<span class="number">1</span>);++i)  _b[k][i]=ntt[k].mul(temp[i],_b[k][i]);</div><div class="line">			ntt[k].NTT(_b[k],now+<span class="number">2</span>,<span class="number">1</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)  c[i]=CRT(_b[<span class="number">0</span>][i],_b[<span class="number">1</span>][i],_b[<span class="number">2</span>][i]);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)  c[i]=(c[i]==<span class="number">0</span>?<span class="number">0</span>:mod-c[i]);  c[<span class="number">0</span>]+=<span class="number">2</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">3</span>;++k)&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)  temp[i]=c[i],temp[i+l]=<span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)  _b[k][i]=b[i],_b[k][i+l]=<span class="number">0</span>;</div><div class="line">			ntt[k].NTT(_b[k],now+<span class="number">2</span>);  ntt[k].NTT(temp,now+<span class="number">2</span>);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(l&lt;&lt;<span class="number">1</span>);++i)  _b[k][i]=ntt[k].mul(temp[i],_b[k][i]);</div><div class="line">			ntt[k].NTT(_b[k],now+<span class="number">2</span>,<span class="number">1</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)  b[i]=CRT(_b[<span class="number">0</span>][i],_b[<span class="number">1</span>][i],_b[<span class="number">2</span>][i]);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> H,L;  <span class="keyword">for</span>(H=<span class="number">0</span>,L=<span class="number">1</span>;L&lt;=<span class="number">50000</span>;L&lt;&lt;=<span class="number">1</span>,++H);</div><div class="line">	fac[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=L;++i) fac[i]=fac[i<span class="number">-1</span>]*i%mod;</div><div class="line">	inv[<span class="number">1</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=L;++i) inv[i]=(mod-mod/i)*inv[mod%i]%mod;</div><div class="line">	inv[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=L;++i) inv[i]=inv[i<span class="number">-1</span>]*inv[i]%mod;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i)  a[i]=inv[i+<span class="number">1</span>]; getinv(a,L);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;L;++i)  B[i]=b[i]*fac[i]%mod;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	ll n=read()%mod,k=read(),ans=<span class="number">0</span>;  p[<span class="number">0</span>]=<span class="number">1</span>;  </div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k+<span class="number">1</span>;++i)  p[i]=p[i<span class="number">-1</span>]*(n+<span class="number">1</span>)%mod;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k+<span class="number">1</span>;++i)&#123;</div><div class="line">		ans+=C(k+<span class="number">1</span>,i)*B[k+<span class="number">1</span>-i]%mod*p[i]%mod;</div><div class="line">		ans=(ans%mod+mod)%mod;</div><div class="line">	&#125;</div><div class="line">	ans=ans*fast(k+<span class="number">1</span>,mod<span class="number">-2</span>,mod)%mod;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre();<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 51nod </tag>
            
            <tag> 多项式 </tag>
            
            <tag> 伯努利数 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】时间复杂度分析初探]]></title>
      <url>/2017/04/11/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%E5%88%9D%E6%8E%A2/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="主定理"><a href="#主定理" class="headerlink" title="主定理"></a>主定理</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>主定理适用于求解形如$T(n)=aT(n/b)+f(n)$的递归式</p>
<p>其中$a$表示子问题个数，$n/b$表示子问题规模，$f(n)$表示分解与合并的复杂度</p>
<p>　　</p>
<h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>(1)若$f(n)&lt;n^{\log_{b} a}$，且是多项式意义上的小于，则$T(n)=O(n^{\log_{b} a})$</p>
<p>(2)若$f(n)=n^{\log_{b} a}$，则$T(n)=O(f(n)\lg n)$</p>
<p>(3)若$f(n)&gt;n^{\log_{b} a}$，且是多项式意义上的大于，且$\forall c&lt;1$和所有足够大的$n$有 $af(n/b)&lt;=cf(n)$，则$T(n)=O(f(n))$</p>
<p>　　</p>
<h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p>以上三条中的大于或小于指的是多项式意义上的</p>
<p>多项式意义上的小于和大于：若$\exists \varepsilon &gt;0$使得f(n)n^{\varepsilon}=g(n)，则称f(n)在多项式意义上小于g(n)，g(n)在多项式意义上大于f(n)</p>
<p>第三条中后面的限制条件称为正则条件</p>
<p>但是以上三条未覆盖所有的情况，不是多项式意义上的大于或小于的递归式是无法用主定理求解的</p>
<p>　　</p>
<h3 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>我们知道CDQ分治套莫队算法的递归式为$T(n)=2(T/2)+O(n\sqrt n)$</p>
<p>由于$a=2,b=2$,所以$g(n)=n^{\log_{a}^{b}}=n，f(n)=n\sqrt n$</p>
<p>由于存在$\varepsilon=0.5$使得$g(n)n^\varepsilon=f(n)$，所以$f(n)$在多项式意义上大于$g(n)$</p>
<p>将正则条件解出后得到$c^2&gt;=0.5$，所以存在c使得正则条件满足</p>
<p>所以$T(n)=O(n\sqrt n)$</p>
<p>　　</p>
<h2 id="调和级数"><a href="#调和级数" class="headerlink" title="调和级数"></a>调和级数</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>级数$S=\sum_{i=1}^{+oo} \frac{1}{i}$称为调和级数</p>
<p>实际上$S=ln(n+1)+r$,其中$r$被称为“欧拉常数”</p>
<p>　　</p>
<h3 id="证明"><a href="#证明" class="headerlink" title="证明"></a>证明</h3><p>因为$ln(\frac{x+1}{x})=\frac{1}{x}-\frac{1}{2x^2}+\frac{1}{3x^3}-…$</p>
<p>所以：$\frac{1}{x}=ln(\frac{x+1}{x})+\frac{1}{2x^2}-\frac{1}{3x^3}+…$</p>
<p>于是将$x=1,2…$带入得到：</p>
<p>(1)$\frac{1}{1}=ln(2)+\frac{1}{2}-\frac{1}{3}+…$</p>
<p>(2)$\frac{1}{2}=ln(\frac{3}{2})+\frac{1}{2\times 4}-\frac{1}{3\times 8}+…$</p>
<p>…</p>
<p>(n)$\frac{1}{n}=ln(\frac{n+1}{n})+\frac{1}{2\times n^2}-\frac{1}{3\times n^3}+…$</p>
<p>将(1)~(n)相加得到$S=\sum_{i=1}^{+oo}=ln(n+1)+r$</p>
<p>　　</p>
<h3 id="举个栗子-1"><a href="#举个栗子-1" class="headerlink" title="举个栗子"></a>举个栗子</h3><p>调和级数在证明时间复杂度上应用广泛，有时与微积分联系起来</p>
<p>还是上面那个例子：CDQ分治套莫队算法，$T(n)=2T(n/2)+O(n\sqrt n)$</p>
<p>我们注意到递归的层数为$x$时，有$2^x$个块，每个块的大小为$\frac{n}{2^x}$，处理大小为d的块需要$O(d\sqrt d)$的时间</p>
<p>所以处理每一层的复杂度是$O(\frac{n^{1.5}}{2^{1.5x}})$</p>
<p>一共有$\log n$层，所以总的复杂度为$O(\sum_{x=1}^{\log n} \frac{n^{1.5}}{2^{1.5x}})$</p>
<p>把$n^{1.5}$提出来得到$O(n^{1.5}\sum_{x=1}^{\log n} 2^{-0.5})$</p>
<p>右边的和式不好求，我们将它近似到微积分的形式：$\sum_{x=1}^{\log n} 2^{-0.5}&lt;=\int_{0}^{\log n}(2^{-0.5}ln2)dx$</p>
<p>直接展开得到 $1-\frac{1}{\sqrt n}$</p>
<p>因此算法复杂度为$O(n^{1.5}\times (1-n^{-0.5}))=O(n\sqrt n-n)=O(n\sqrt n)$</p>
<p>　　</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><hr>
<ul>
<li>《算法导论》</li>
<li>《级数相关》——blue <a href="https://ruanx.pw/post/%E7%BA%A7%E6%95%B0%E7%9B%B8%E5%85%B3.html" target="_blank" rel="external">传送门</a></li>
<li>《主定理和递归式复杂度分析》——NeoMc <a href="http://blog.csdn.net/neomc/article/details/8035693" target="_blank" rel="external">传送门</a></li>
<li>《多项式大于和渐进大于的区别》——bin314 <a href="http://blog.csdn.net/bin314/article/details/8181807" target="_blank" rel="external">传送门</a></li>
<li>《调和级数》——百度百科<a href="http://baike.baidu.com/link?url=LuREjZfNywUR0mhAT8Vb7-04zZG_c4Gp8KTlBCEzBn6VtnIq-aNvgGGI6KhYDLKcREFiNidQsRkQQcmqd02ij8lkcsiHqx7F6NVQZrnnkTn6T_L0d56rB3yowQxMar1i" target="_blank" rel="external">传送门</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 算法笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4816】数字表格]]></title>
      <url>/2017/04/11/4816/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4816" target="_blank" rel="external">AC通道</a></p>
<p>设$f(n)=\sum_{d|n} g(d)$</p>
<p>则$g(n)=\frac{f(n)}{\sum_{d|n且d\neq n} g(d)}$</p>
<p>f和g都可以递推求出</p>
<p>$ans=\sum_{i=1}^{n} \sum_{j=1}^{m} \sum_{d|i且d|j} f(gcd(i,j))$</p>
<p>$ans=\sum_{d=1}^{min(n,m)}g(d)^{\left [ \frac{n}{d} \right ]\left [ \frac{m}{d} \right ]}$</p>
<p>注意到$\left [ \frac{n}{d} \right ]\left [ \frac{m}{d} \right ]$只有最多$\sqrt n+\sqrt m$个取值</p>
<p>所以可以分块优化</p>
<p>感觉这个g函数设置的好玄妙啊！</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=(<span class="keyword">int</span>)<span class="number">1e9</span>+<span class="number">7</span>,MAXN=(<span class="keyword">int</span>)<span class="number">1e6</span>,D=<span class="number">50</span>;</div><div class="line">ll g[MAXN+D],sum[MAXN+D],sumv[MAXN+D];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">fast</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="function">ll <span class="title">temp</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=a*a%mod)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)temp=temp*a%mod;<span class="keyword">return</span> temp;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	g[<span class="number">1</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;++i) g[i]=(g[i<span class="number">-1</span>]+g[i<span class="number">-2</span>])%mod;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		ll temp=fast(g[i],mod<span class="number">-2</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=(i&lt;&lt;<span class="number">1</span>);j&lt;=MAXN;j+=i)</div><div class="line">			g[j]=g[j]*temp%mod;</div><div class="line">	&#125;</div><div class="line">	sum[<span class="number">0</span>]=<span class="number">1</span>;  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i) sum[i]=sum[i<span class="number">-1</span>]*g[i]%mod;</div><div class="line">	sumv[<span class="number">0</span>]=<span class="number">1</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i)  sumv[i]=fast(sum[i],mod<span class="number">-2</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> n=read(),m=read(),last; <span class="function">ll <span class="title">ans</span><span class="params">(<span class="number">1</span>)</span></span>;</div><div class="line">	<span class="keyword">if</span>(n&gt;m)  swap(n,m);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i=last+<span class="number">1</span>)&#123;</div><div class="line">		last=min(n/(n/i),m/(m/i));</div><div class="line">		ans=ans*fast(sum[last]*sumv[i<span class="number">-1</span>]%mod,(ll)(n/i)*(m/i))%mod;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre(); <span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 公式推导 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4818】序列计数]]></title>
      <url>/2017/04/11/4818/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4818" target="_blank" rel="external">AC通道</a></p>
<p>设$f[i][j]$表示前$i$个数的和模$p$结果为$j$的方案数</p>
<p>那么$f[i][j]=\sum_{k=0}^{p} f[i-1][k]*v[j-k]$　　$v[x]$表示$[1,m]$中模$p$等于$x$的数的数量</p>
<p>然后这个东西可以用矩阵乘法优化(是时候恶补一发矩阵乘法了)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN (int)2e7+50</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">20170408</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;ll p[<span class="number">110</span>][<span class="number">110</span>];&#125;a,zh;</div><div class="line"><span class="keyword">int</span> n,m,p,cnt,v[<span class="number">110</span>],prime[MAXN];</div><div class="line"><span class="keyword">bool</span> check[MAXN];</div><div class="line">ll ans[<span class="number">2</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">inline</span> node <span class="keyword">operator</span>*(node a,node b)&#123;</div><div class="line">	node c;  <span class="built_in">memset</span>(c.p,<span class="number">0</span>,<span class="keyword">sizeof</span>(c.p));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;++i)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;p;++j)</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;p;++k)</div><div class="line">				c.p[i][j]=(c.p[i][j]+a.p[i][k]*b.p[k][j]%mod)%mod;</div><div class="line">	<span class="keyword">return</span> c;</div><div class="line">&#125; </div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i])  prime[++cnt]=i;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=m;++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)  <span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;check[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  p=read();  pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)<span class="keyword">if</span>(check[i])v[i%p]++;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;p;++j)(zh.p[i][(i+j)%p]+=v[j])%=mod;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;++i)a.p[i][i]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> b=n;b;b&gt;&gt;=<span class="number">1</span>,zh=zh*zh)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)a=a*zh;</div><div class="line">	ans[<span class="number">0</span>]=a.p[<span class="number">0</span>][<span class="number">0</span>];  </div><div class="line">	<span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="keyword">sizeof</span>(v));</div><div class="line">	<span class="built_in">memset</span>(zh.p,<span class="number">0</span>,<span class="keyword">sizeof</span>(zh.p));</div><div class="line">	<span class="built_in">memset</span>(a.p,<span class="number">0</span>,<span class="keyword">sizeof</span>(a.p));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)v[i%p]++;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;p;++j)(zh.p[i][(i+j)%p]+=v[j])%=mod;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;p;++i)a.p[i][i]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> b=n;b;b&gt;&gt;=<span class="number">1</span>,zh=zh*zh)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)a=a*zh;</div><div class="line">	ans[<span class="number">1</span>]=a.p[<span class="number">0</span>][<span class="number">0</span>];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans[<span class="number">1</span>]-ans[<span class="number">0</span>]+mod)%mod);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 矩阵乘法 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4817】树点涂色]]></title>
      <url>/2017/04/11/4817/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4817" target="_blank" rel="external">AC通道</a></p>
<p>做完这道题我才知道LCT还可以这样用：用虚边和实边统计答案</p>
<p>刚开始时所有的边都是虚边，答案就是路径上的虚边数量</p>
<p>操作一就是LCT中的access操作</p>
<p>操作二求一下lca减一下就好了</p>
<p>操作三搞一个dfs序维护子树即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,len,dfs_clock,Link[MAXN],deep[MAXN],size[MAXN],dfn[MAXN],pos[MAXN],f[MAXN],delta[MAXN&lt;&lt;<span class="number">2</span>],tr[MAXN&lt;&lt;<span class="number">2</span>],son[MAXN][<span class="number">2</span>],anc[MAXN][<span class="number">25</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)  &#123;tr[p]=deep[pos[l]]; <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid);  build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">	tr[p]=max(tr[p&lt;&lt;<span class="number">1</span>],tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> temp=delta[p];</div><div class="line">	tr[p&lt;&lt;<span class="number">1</span>]+=temp;  tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]+=temp;</div><div class="line">	delta[p&lt;&lt;<span class="number">1</span>]+=temp;  delta[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]+=temp;</div><div class="line">	delta[p]=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  &#123;tr[p]+=v; delta[p]+=v; <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,v);  updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,v);</div><div class="line">	tr[p]=max(tr[p&lt;&lt;<span class="number">1</span>],tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  <span class="keyword">return</span> tr[p];</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">return</span> max(query(p&lt;&lt;<span class="number">1</span>,l,mid,x,y),query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">1</span>]==x;&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isroot</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> son[f[x]][<span class="number">0</span>]!=x&amp;&amp;son[f[x]][<span class="number">1</span>]!=x;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> y=f[x],z=f[y],which=get(x);</div><div class="line">	<span class="keyword">if</span>(!isroot(y))  son[z][son[z][<span class="number">1</span>]==y]=x;</div><div class="line">	son[y][which]=son[x][which^<span class="number">1</span>];  f[son[y][which]]=y;</div><div class="line">	son[x][which^<span class="number">1</span>]=y;  f[y]=x;  f[x]=z;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> y=f[x];!isroot(x);rotate(x),y=f[x])</div><div class="line">		<span class="keyword">if</span>(!isroot(y))  rotate(get(x)==get(y)?y:x);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">while</span>(son[x][<span class="number">0</span>])x=son[x][<span class="number">0</span>];<span class="keyword">return</span> x;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">access</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> t(<span class="number">0</span>);x;t=x,x=f[x])&#123;</div><div class="line">		splay(x); </div><div class="line">		<span class="keyword">int</span> y=find(son[x][<span class="number">1</span>]);  updata(<span class="number">1</span>,<span class="number">1</span>,n,dfn[y],dfn[y]+size[y]<span class="number">-1</span>,<span class="number">1</span>);</div><div class="line">		y=find(t);  updata(<span class="number">1</span>,<span class="number">1</span>,n,dfn[y],dfn[y]+size[y]<span class="number">-1</span>,<span class="number">-1</span>);</div><div class="line">		son[x][<span class="number">1</span>]=t;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(deep[x]&lt;deep[y])  swap(x,y);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;--i)  <span class="keyword">if</span>(deep[anc[x][i]]&gt;=deep[y])  x=anc[x][i];</div><div class="line">	<span class="keyword">if</span>(x==y)  <span class="keyword">return</span> x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;--i)  <span class="keyword">if</span>(anc[x][i]!=anc[y][i])  x=anc[x][i],y=anc[y][i];</div><div class="line">	<span class="keyword">return</span> anc[x][<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	anc[x][<span class="number">0</span>]=f[x];  size[x]=<span class="number">1</span>;  dfn[x]=++dfs_clock;  pos[dfs_clock]=x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;++i)  anc[x][i]=anc[anc[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		f[e[i].y]=x;  deep[e[i].y]=deep[x]+<span class="number">1</span>;  dfs(e[i].y,x);</div><div class="line">		size[x]+=size[e[i].y];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();  deep[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;<span class="keyword">int</span> x=read(),y=read();insert(x,y);&#125;</div><div class="line">	dfs(<span class="number">1</span>,<span class="number">0</span>);  build(<span class="number">1</span>,<span class="number">1</span>,n);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> opt=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;<span class="keyword">int</span> x=read();access(x);&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">2</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=read(),y=read(),t=lca(x,y);</div><div class="line">			<span class="keyword">int</span> ans=query(<span class="number">1</span>,<span class="number">1</span>,n,dfn[x],dfn[x])+query(<span class="number">1</span>,<span class="number">1</span>,n,dfn[y],dfn[y])<span class="number">-2</span>*query(<span class="number">1</span>,<span class="number">1</span>,n,dfn[t],dfn[t])+<span class="number">1</span>;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;<span class="keyword">int</span> x=read();<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,query(<span class="number">1</span>,<span class="number">1</span>,n,dfn[x],dfn[x]+size[x]<span class="number">-1</span>));&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	init();  solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> bzoj </tag>
            
            <tag> LCT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1070】修车]]></title>
      <url>/2017/04/09/1070/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1070" target="_blank" rel="external">AC通道</a></p>
<p>我真是废了，这么水的题我居然没看出来是费用流</p>
<p>把每个人拆成n个点，表示次数即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF (int)1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,w;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,S,T,cnt,ans,len(<span class="number">1</span>),a[<span class="number">110</span>][<span class="number">110</span>],Link[MAXN],vis[MAXN],dis[MAXN],id[<span class="number">110</span>][<span class="number">110</span>],LN[MAXN],LE[MAXN],flow[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch&gt;<span class="string">'9'</span>||ch&lt;<span class="string">'0'</span>)  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">'0'</span>&amp;&amp;ch&lt;=<span class="string">'9'</span>)  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].w=w;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;e[len].w=-w;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">	<span class="built_in">memset</span>(dis,<span class="number">10</span>,<span class="keyword">sizeof</span>(dis)); </div><div class="line">	<span class="keyword">int</span> oo=dis[<span class="number">0</span>];q.push(S);dis[S]=<span class="number">0</span>;vis[S]=<span class="number">1</span>;flow[S]=INF;  </div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front();  q.pop();  vis[x]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(dis[x]+e[i].w&lt;dis[e[i].y]&amp;&amp;e[i].v)&#123;</div><div class="line">			dis[e[i].y]=dis[x]+e[i].w; flow[e[i].y]=min(flow[x],e[i].v);</div><div class="line">			LN[e[i].y]=x; LE[e[i].y]=i;</div><div class="line">			<span class="keyword">if</span>(!vis[e[i].y])  q.push(e[i].y),vis[e[i].y]=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(dis[T]==oo)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	ans+=flow[T]*dis[T];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=T;i!=S;i=LN[i]) e[LE[i]].v-=flow[T],e[LE[i]^<span class="number">1</span>].v+=flow[T];</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	m=read();  n=read();  S=++cnt;  T=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)a[i][j]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">		id[i][j]=++cnt,insert(S,id[i][j],<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=++cnt; insert(x,T,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;++k)insert(id[j][k],x,<span class="number">1</span>,k*a[i][j]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(spfa());</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,(<span class="keyword">double</span>)ans/n);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 费用流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jzyz互测出题总结]]></title>
      <url>/2017/04/09/%E5%87%BA%E9%A2%98%E7%BF%BB%E8%BD%A6%EF%BC%8C%E8%BA%AB%E8%B4%A5%E5%90%8D%E8%A3%82/</url>
      <content type="html"><![CDATA[<ul>
<li>出题翻车，身败名裂<a id="more"></a></li>
</ul>
<p>今天我的互测题上线了！然后就翻车了。。。</p>
<p>由于评测环境的问题，T3的std被卡掉了</p>
<p>然后T2的std有一种情况没有特判，导致数据造错</p>
<p>然后机房两位大佬大显神通，把我原来设置的部分分强行写成了AC</p>
<p>cydiater用十分简单的方法碾压了T2的标程</p>
<p>哎，身败名裂啊</p>
<p>不过，这次出题让我对知识点的理解加深了不少，以及造数据的方法熟练了很多</p>
<p>T2和T3均是我的原创题目，虽然都被水过，但是T2可以加大r的范围，T3可以加大T的范围，这样就能成功卡掉不正确算法</p>
<p>如果以后能混OI圈，似乎可以用这两道题骗钱？</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1084】最大子矩阵]]></title>
      <url>/2017/04/09/1084/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>刚看到题的时候我傻眼了，这东西不是npc问题吗</p>
<p>然后看到数据范围m&lt;=2，我*分类大讨论！</p>
<p>当m=1时，显然 </p>
<blockquote>
<p>$f[i][j]=f[i-1][j]$</p>
<hr>
<p>$f[i][j]=f[k][k-1]+sum[i]-sum[k]$</p>
<hr>
</blockquote>
<p>当m=2是，状态要设成三维的</p>
<blockquote>
<p>$f[i][j][k]=f[i-1][j][k],f[i][j-1][k]$</p>
<hr>
<p>$f[i][j][k]=max(f[l][j][k-1]+sum[i][1]-sum[l][1],f[i][l][k-1]+sum[j][2]-sum[l][2])$</p>
<hr>
<p>$f[i][j][k]=max(f[l][l][k-1],sum[i][1]+sum[j][2]-sum[l][1]-sum[l][2])　　(i==j)$</p>
<hr>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF (int)1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,T,sum[<span class="number">110</span>][<span class="number">5</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">namespace</span> solution1&#123;</div><div class="line">	<span class="keyword">int</span> f[<span class="number">110</span>][<span class="number">110</span>];</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=T;++j)f[i][j]=-INF;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=T;++j)&#123;</div><div class="line">			f[i][j]=f[i<span class="number">-1</span>][j];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;i;++k) </div><div class="line">				cmax(f[i][j],f[k][j<span class="number">-1</span>]+sum[i][<span class="number">1</span>]-sum[k][<span class="number">1</span>]);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[n][T]);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">namespace</span> solution2&#123;</div><div class="line">	<span class="keyword">int</span> f[<span class="number">110</span>][<span class="number">110</span>][<span class="number">110</span>];</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=n;++j)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=T;++k)f[i][j][k]=-INF;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=T;++k)&#123;</div><div class="line">			f[i][j][k]=max(f[i<span class="number">-1</span>][j][k],f[i][j<span class="number">-1</span>][k]);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;i;++l)  cmax(f[i][j][k],f[l][j][k<span class="number">-1</span>]+sum[i][<span class="number">1</span>]-sum[l][<span class="number">1</span>]);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;j;++l)  cmax(f[i][j][k],f[i][l][k<span class="number">-1</span>]+sum[j][<span class="number">2</span>]-sum[l][<span class="number">2</span>]);</div><div class="line">			<span class="keyword">if</span>(i==j) <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;i;++l) cmax(f[i][j][k],f[l][l][k<span class="number">-1</span>]+sum[i][<span class="number">1</span>]+sum[j][<span class="number">2</span>]-sum[l][<span class="number">1</span>]-sum[l][<span class="number">2</span>]);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[n][n][T]);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  T=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j) sum[i][j]=sum[i<span class="number">-1</span>][j]+read();</div><div class="line">	<span class="keyword">if</span>(m==<span class="number">1</span>) &#123;</div><div class="line">		<span class="keyword">using</span> <span class="keyword">namespace</span> solution1;</div><div class="line">		solve();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">using</span> <span class="keyword">namespace</span> solution2;</div><div class="line">		solve();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1492】货币兑换]]></title>
      <url>/2017/04/09/1492/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1492" target="_blank" rel="external">AC通道</a></p>
<p>建议阅读CDQ的论文《从Cash谈一类分治算法的应用》：<a href="https://wenku.baidu.com/view/3b913556fd0a79563d1e7245.html?from=search" target="_blank" rel="external">传送门</a></p>
<p>这东西还挺好写的</p>
<p>注意：在计算左边对右边贡献时，必须保证左边是按f排序，右边是按k排序，由于f是现求的，所以在分治前必须先按k排序，归并时按f排序</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN (int)1e5+10</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">	<span class="keyword">double</span> a,b,rate,x,y,k;  <span class="keyword">int</span> id;</div><div class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node z)<span class="keyword">const</span> &#123;<span class="keyword">return</span> k&gt;z.k;&#125;</div><div class="line">&#125;p[MAXN],sta[MAXN];</div><div class="line"><span class="keyword">int</span> n,st[MAXN];</div><div class="line"><span class="keyword">double</span> f[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">slop</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(!b)<span class="keyword">return</span> <span class="number">-1e20</span>;</div><div class="line">	<span class="keyword">if</span>(<span class="built_in">fabs</span>(p[a].x-p[b].x)&lt;eps)<span class="keyword">return</span> <span class="number">1e20</span>;</div><div class="line">	<span class="keyword">return</span> (p[b].y-p[a].y)/(p[b].x-p[a].x);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;</div><div class="line">		cmax(f[l],f[l<span class="number">-1</span>]);</div><div class="line">		p[l].x=f[l]*p[l].rate/(p[l].a*p[l].rate+p[l].b);</div><div class="line">		p[l].y=p[l].x/p[l].rate;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>,ta=l,tb=mid+<span class="number">1</span>,top=<span class="number">0</span>,j=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(p[i].id&lt;=mid)  sta[ta++]=p[i];</div><div class="line">		<span class="keyword">else</span> sta[tb++]=p[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i)  p[i]=sta[i];</div><div class="line">	solve(l,mid);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=mid;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(top&gt;<span class="number">1</span>&amp;&amp;slop(i,st[top])+eps&gt;slop(st[top],st[top<span class="number">-1</span>]))  --top;</div><div class="line">		st[++top]=i;</div><div class="line">	&#125;st[++top]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mid+<span class="number">1</span>;i&lt;=r;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(j&lt;top&amp;&amp;slop(st[j],st[j+<span class="number">1</span>])+eps&gt;p[i].k) ++j;</div><div class="line">		cmax(f[p[i].id],p[st[j]].x*p[i].a+p[st[j]].y*p[i].b);</div><div class="line">	&#125;</div><div class="line">	solve(mid+<span class="number">1</span>,r);  ta=l;  tb=mid+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i)&#123;</div><div class="line">		<span class="keyword">if</span>((p[ta].x&lt;p[tb].x||(<span class="built_in">abs</span>(p[ta].x-p[tb].x)&lt;eps)&amp;&amp;p[ta].y&lt;p[tb].y||tb&gt;r)&amp;&amp;ta&lt;=mid) sta[i]=p[ta++];</div><div class="line">		<span class="keyword">else</span> sta[i]=p[tb++];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i)  p[i]=sta[i];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  f[<span class="number">0</span>]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>,&amp;p[i].a,&amp;p[i].b,&amp;p[i].rate);</div><div class="line">		p[i].id=i;  p[i].k=-p[i].a/p[i].b;</div><div class="line">	&#125;</div><div class="line">	sort(p+<span class="number">1</span>,p+n+<span class="number">1</span>);</div><div class="line">	solve(<span class="number">1</span>,n);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,f[n]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 斜率优化 </tag>
            
            <tag> CDQ分治 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1855】股票交易]]></title>
      <url>/2017/04/09/1855/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1855" target="_blank" rel="external">AC通道</a></p>
<p>设f[i][j]表示第i天拥有j股股票的最大收益</p>
<p>首先列出朴素的状态转移方程：</p>
<blockquote>
<p>$f[i][j]=f[i-1][j]$</p>
<hr>
<p>$f[i][j]=max{f[i-w-1][k]-(j-k)\times A[i]}　　(k&gt;=j-AS[i])$</p>
<hr>
<p>$f[i][j]=max{f[i-w-1][k]+(k-j)\times B[i]}　　(k&lt;=max(MaxP,AS[i]+j))$</p>
<hr>
</blockquote>
<p>然后我们发现可以用单调队列维护$f[i-w-1][k]+k\times A[i]$和$f[i-w-1][k]+k\times B[i]$</p>
<p>这样就能把复杂度降到O(n^2)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,maxp,w,ans,a[MAXN],b[MAXN],as[MAXN],bs[MAXN],q[MAXN],f[MAXN][MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">    <span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">    n=read();  maxp=read();  w=read();  <span class="built_in">memset</span>(f,<span class="number">-10</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read(),b[i]=read(),as[i]=read(),bs[i]=read();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=as[i];j++)  f[i][j]=-a[i]*j;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=maxp;++j)  cmax(f[i][j],f[i<span class="number">-1</span>][j]);</div><div class="line">        <span class="keyword">if</span>(i-w<span class="number">-1</span>&lt;<span class="number">0</span>)  <span class="keyword">continue</span>;</div><div class="line">        <span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=maxp;++j)&#123;</div><div class="line">            <span class="keyword">while</span>(head&lt;tail&amp;&amp;q[head]&lt;j-as[i])  ++head;</div><div class="line">            <span class="keyword">while</span>(head&lt;tail&amp;&amp;f[i-w<span class="number">-1</span>][j]+j*a[i]&gt;=f[i-w<span class="number">-1</span>][q[tail<span class="number">-1</span>]]+q[tail<span class="number">-1</span>]*a[i])  --tail;</div><div class="line">            q[tail++]=j;</div><div class="line">            <span class="keyword">if</span>(head&lt;tail) cmax(f[i][j],f[i-w<span class="number">-1</span>][q[head]]-a[i]*(j-q[head]));</div><div class="line">        &#125;</div><div class="line">        head=<span class="number">0</span>,tail=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=maxp;j&gt;=<span class="number">0</span>;--j)&#123;</div><div class="line">            <span class="keyword">while</span>(head&lt;tail&amp;&amp;q[head]&gt;j+bs[i])  ++head;</div><div class="line">            <span class="keyword">while</span>(head&lt;tail&amp;&amp;f[i-w<span class="number">-1</span>][j]+j*b[i]&gt;=f[i-w<span class="number">-1</span>][q[tail<span class="number">-1</span>]]+q[tail<span class="number">-1</span>]*b[i])  --tail;</div><div class="line">            q[tail++]=j;</div><div class="line">            <span class="keyword">if</span>(head&lt;tail) cmax(f[i][j],f[i-w<span class="number">-1</span>][q[head]]+b[i]*(q[head]-j));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=maxp;++i)  cmax(ans,f[n][i]);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 单调性优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3688】折线统计]]></title>
      <url>/2017/04/09/3688/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3688" target="_blank" rel="external">AC通道</a></p>
<p>首先写出方程：</p>
<blockquote>
<p>$f[i][j][0]=f[k][j][0]+f[k][j-1][1]  (y[i]&gt;y[k])$</p>
<hr>
<p>$f[i][j][1]=f[k][j][1]+f[k][j-1][0]  (y[i]&lt;y[k])$</p>
<hr>
</blockquote>
<p>然后我们发现这个东西随便搞个区间求和就行了，我选择树状数组</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">	<span class="keyword">int</span> x,y;</div><div class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span> &lt;(<span class="keyword">const</span> node a)<span class="keyword">const</span> &#123;<span class="keyword">return</span> x&lt;a.x;&#125;</div><div class="line">&#125;a[MAXN];</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">100007</span>;</div><div class="line"><span class="keyword">int</span> n,m,ans,lim,f[MAXN][<span class="number">20</span>][<span class="number">2</span>],tr[<span class="number">20</span>][<span class="number">2</span>][MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> j,<span class="keyword">int</span> k,<span class="keyword">int</span> v)</span></span>&#123;<span class="keyword">while</span>(x&lt;=lim)tr[j][k][x]=(tr[j][k][x]+v)%mod,x+=(x&amp;-x);&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">temp</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="keyword">while</span>(x)temp=(temp+tr[j][k][x])%mod,x-=(x&amp;-x);<span class="keyword">return</span> temp;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  lim=<span class="number">100000</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i].x=read(),a[i].y=read();</div><div class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		f[i][<span class="number">0</span>][<span class="number">0</span>]=f[i][<span class="number">0</span>][<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">		add(a[i].y,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);  add(a[i].y,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</div><div class="line">			f[i][j][<span class="number">0</span>]+=get(a[i].y<span class="number">-1</span>,j<span class="number">-1</span>,<span class="number">1</span>)+get(a[i].y<span class="number">-1</span>,j,<span class="number">0</span>);</div><div class="line">			f[i][j][<span class="number">1</span>]+=get(lim,j<span class="number">-1</span>,<span class="number">0</span>)-get(a[i].y,j<span class="number">-1</span>,<span class="number">0</span>)+get(lim,j,<span class="number">1</span>)-get(a[i].y,j,<span class="number">1</span>);</div><div class="line">			f[i][j][<span class="number">0</span>]%=mod;  f[i][j][<span class="number">1</span>]%=mod; <span class="keyword">if</span>(f[i][j][<span class="number">1</span>]&lt;<span class="number">0</span>) f[i][j][<span class="number">1</span>]+=mod;</div><div class="line">			add(a[i].y,j,<span class="number">0</span>,f[i][j][<span class="number">0</span>]);  add(a[i].y,j,<span class="number">1</span>,f[i][j][<span class="number">1</span>]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  ans+=(f[i][m][<span class="number">0</span>]+f[i][m][<span class="number">1</span>])%mod,ans%=mod;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> dp </tag>
            
            <tag> 树状数组 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4327】玄武密码]]></title>
      <url>/2017/04/08/4327/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4327" target="_blank" rel="external">AC传送门</a></p>
<p>SAM一眼题</p>
<p>出题人丧心病狂卡空间</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN (int)1e7+10</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,cnt(<span class="number">1</span>),now(<span class="number">1</span>),mx[MAXN&lt;&lt;<span class="number">1</span>],par[MAXN&lt;&lt;<span class="number">1</span>],tr[MAXN&lt;&lt;<span class="number">1</span>][<span class="number">4</span>];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(ch==<span class="string">'S'</span>)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">'E'</span>)  <span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">'N'</span>)  <span class="keyword">return</span> <span class="number">2</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">3</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> np=++cnt,p=now;  </div><div class="line">	mx[np]=mx[p]+<span class="number">1</span>;  now=np;</div><div class="line">	<span class="keyword">while</span>(!tr[p][x]&amp;&amp;p) tr[p][x]=np,p=par[p];</div><div class="line">	<span class="keyword">if</span>(!p)  par[np]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> q=tr[p][x];</div><div class="line">		<span class="keyword">if</span>(mx[q]==mx[p]+<span class="number">1</span>)  par[np]=q;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> nq=++cnt;  mx[nq]=mx[p]+<span class="number">1</span>;</div><div class="line">			<span class="built_in">memcpy</span>(tr[nq],tr[q],<span class="keyword">sizeof</span>(tr[q]));</div><div class="line">			par[nq]=par[q];  par[q]=par[np]=nq;</div><div class="line">			<span class="keyword">while</span>(p&amp;&amp;tr[p][x]==q)  tr[p][x]=nq,p=par[p];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>); <span class="keyword">int</span> len=<span class="built_in">strlen</span>(ch+<span class="number">1</span>),now=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i)&#123;</div><div class="line">		<span class="keyword">int</span> temp=get(ch[i]);</div><div class="line">		<span class="keyword">if</span>(tr[now][temp])  now=tr[now][temp];</div><div class="line">		<span class="keyword">else</span> <span class="keyword">return</span> i<span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> len;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  <span class="keyword">int</span> len=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i) extend(get(ch[i]));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solve());</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 后缀自动机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】CDC分治]]></title>
      <url>/2017/04/07/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91CDC%E5%88%86%E6%B2%BB/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>首先我们注意到所有的必达点一定不在环上，或者是环上的割点，所以我们用BCC算法将图缩成树</p>
<p>至于在树上求这个东西，需要大力推一波公式，具体参考特教的理性愉悦一题</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN (int)2e6+5</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,Q,cnt,len,top,bcnt,dfs_clock,sta[MAXN],Link[MAXN],deep[MAXN],dfn[MAXN],low[MAXN],anc[MAXN][<span class="number">25</span>];</div><div class="line">ll ans,v[MAXN],sumv[MAXN],sumvd[MAXN],sumvdd[MAXN];</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;bcc[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	dfn[x]=low[x]=++dfs_clock;  sta[++top]=x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(!dfn[e[i].y])&#123;</div><div class="line">		tarjan(e[i].y);  cmin(low[x],low[e[i].y]);</div><div class="line">		<span class="keyword">if</span>(low[e[i].y]&gt;=dfn[x])&#123;</div><div class="line">			bcnt++;  <span class="keyword">int</span> y;</div><div class="line">			<span class="keyword">do</span>&#123;</div><div class="line">				y=sta[top--];</div><div class="line">				bcc[bcnt].push_back(y);</div><div class="line">			&#125;<span class="keyword">while</span>(y!=e[i].y);</div><div class="line">			bcc[bcnt].push_back(x);</div><div class="line">		&#125;</div><div class="line">	&#125;<span class="keyword">else</span> cmin(low[x],dfn[e[i].y]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> flag=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa&amp;&amp;e[i].y)&#123;</div><div class="line">		deep[e[i].y]=deep[x]+<span class="number">1</span>; anc[e[i].y][<span class="number">0</span>]=x;</div><div class="line">		sumv[e[i].y]=sumv[x]+v[e[i].y];</div><div class="line">		sumvd[e[i].y]=sumvd[x]+v[e[i].y]*deep[e[i].y];</div><div class="line">		sumvdd[e[i].y]=sumvdd[x]+v[e[i].y]*deep[e[i].y]*deep[e[i].y];</div><div class="line">		dfs(e[i].y,x);  flag=<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(!flag)&#123;<span class="comment">//叶子结点则新建方点</span></div><div class="line">		insert(x,++cnt); deep[cnt]=deep[x]+<span class="number">1</span>; anc[cnt][<span class="number">0</span>]=x;</div><div class="line">		sumv[cnt]=sumv[x]; sumvd[cnt]=sumvd[x]; sumvdd[cnt]=sumvdd[x];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(deep[x]&lt;deep[y])  swap(x,y);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;--i)  <span class="keyword">if</span>(deep[anc[x][i]]&gt;=deep[y])  x=anc[x][i];</div><div class="line">	<span class="keyword">if</span>(x==y)  <span class="keyword">return</span> x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&gt;=<span class="number">0</span>;--i)  <span class="keyword">if</span>(anc[x][i]!=anc[y][i])  x=anc[x][i],y=anc[y][i];</div><div class="line">	<span class="keyword">return</span> anc[x][<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">get</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> lca,<span class="keyword">int</span> k)</span></span>&#123;</div><div class="line">	ll temp1=(sumv[x]-sumv[lca])*(k-deep[lca])*(deep[x]+<span class="number">1</span>);</div><div class="line">	ll temp2=(sumvd[x]-sumvd[lca])*(deep[x]+<span class="number">1</span>-k+deep[lca]);</div><div class="line">	ll temp3=sumvdd[x]-sumvdd[lca];</div><div class="line">	<span class="keyword">return</span> temp1+temp2-temp3;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> __size__=<span class="number">256</span>&lt;&lt;<span class="number">20</span>;</div><div class="line">	<span class="keyword">char</span> *__p__=(<span class="keyword">char</span>*)<span class="built_in">malloc</span>(__size__)+__size__;</div><div class="line">	__asm__(<span class="string">"movl %0, %%esp\n"</span>::<span class="string">"r"</span>(__p__));</div><div class="line">	n=cnt=read(); m=read(); Q=read(); deep[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  v[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;<span class="keyword">int</span> x=read(),y=read();insert(x,y);&#125;</div><div class="line">	tarjan(<span class="number">1</span>);  <span class="built_in">memset</span>(Link,<span class="number">0</span>,<span class="keyword">sizeof</span>(Link));  len=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=bcnt;++i)&#123;</div><div class="line">		++cnt; <span class="keyword">int</span> size=bcc[i].size();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=size<span class="number">-1</span>;j&gt;=<span class="number">0</span>;--j)</div><div class="line">			insert(cnt,bcc[i][j]);</div><div class="line">	&#125;</div><div class="line">	sumv[<span class="number">1</span>]=sumvd[<span class="number">1</span>]=sumvdd[<span class="number">1</span>]=v[<span class="number">1</span>];</div><div class="line">	dfs(<span class="number">1</span>,<span class="number">0</span>);  anc[<span class="number">1</span>][<span class="number">0</span>]=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;++i)<span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>;x&lt;=cnt;++x)</div><div class="line">		anc[x][i]=anc[anc[x][i<span class="number">-1</span>]][i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=<span class="number">1</span>;T&lt;=Q;++T)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),lca=LCA(x,y);</div><div class="line">		<span class="keyword">if</span>(x==lca)  x=anc[x][<span class="number">0</span>];</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=anc[x][<span class="number">0</span>]&amp;&amp;e[i].y)&#123;x=e[i].y;<span class="keyword">break</span>;&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(y==lca)  y=anc[y][<span class="number">0</span>];</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[y];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=anc[y][<span class="number">0</span>]&amp;&amp;e[i].y)&#123;y=e[i].y;<span class="keyword">break</span>;&#125;</div><div class="line">		&#125;</div><div class="line">		lca=LCA(x,y);</div><div class="line">		<span class="keyword">int</span> k1=deep[y]-deep[lca]+<span class="number">1</span>,k2=deep[x]-deep[lca]+<span class="number">1</span>;</div><div class="line">		ans=get(x,lca,k1)+get(y,lca,k2)+v[lca]*k1*k2;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans&gt;&gt;<span class="number">2</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> tarjan </tag>
            
            <tag> 公式推导 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3203】保护出题人]]></title>
      <url>/2017/04/06/3203/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3203" target="_blank" rel="external">AC通道</a></p>
<p>好题一道！</p>
<p>测试时专注于此题，然而还是只拿到了暴力分，果然是我弱啊</p>
<p>好吧，我不会凸包。。。。。。</p>
<p>令sumi表示第i个僵尸以及之前的僵尸的体力总和，disi表示第i个僵尸与房屋的初始距离 </p>
<p>我们发现我们能消灭一个僵尸当且仅当y&gt;=sumidisi </p>
<p>那么我们要求的显然就是max{sumidisi} </p>
<p>我们将一个僵尸抽象成一个点sumidisi，那么我们发现每个回合僵尸之间的相对位置是不变的 </p>
<p>因此我们可以维护一个凸包，三分即可</p>
<p>——来自POPOQQQ</p>
<p>注意：强制转换不能四舍五入，只能输出0位小数了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"plant"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-7</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">	ll x,y; node()&#123;&#125;</div><div class="line">	node(<span class="keyword">const</span> ll a,<span class="keyword">const</span> ll b):x(a),y(b)&#123;&#125;</div><div class="line">&#125;p[MAXN],sta[MAXN];</div><div class="line"><span class="keyword">int</span> n,top;</div><div class="line">ll d,a[MAXN],sum[MAXN];</div><div class="line"><span class="keyword">double</span> ans;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">slop</span><span class="params">(node a,node b)</span></span>&#123;<span class="keyword">return</span> (<span class="keyword">double</span>)(a.y-b.y)/(a.x-b.x);&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> node &amp;b)</span></span>&#123;</div><div class="line">	<span class="keyword">while</span>(top&gt;=<span class="number">2</span>&amp;&amp;slop(sta[top<span class="number">-1</span>],sta[top])&gt;=slop(sta[top],b)-eps) --top;</div><div class="line">	sta[++top]=b;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">find</span><span class="params">(node b)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> l=<span class="number">1</span>,r=top;  <span class="keyword">double</span> temp=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(l+<span class="number">3</span>&lt;=r)&#123;</div><div class="line">		<span class="keyword">int</span> mid1=(r-l)/<span class="number">3</span>+l,mid2=(r-l)*<span class="number">2</span>/<span class="number">3</span>+l;</div><div class="line">		<span class="keyword">if</span>(slop(sta[mid1],b)&gt;slop(sta[mid2],b))  r=mid2;</div><div class="line">		<span class="keyword">else</span> l=mid1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i)  temp=max(temp,slop(sta[i],b));</div><div class="line">	<span class="keyword">return</span> temp;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  d=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		a[i]=read();  sum[i]=sum[i<span class="number">-1</span>]+a[i];</div><div class="line">		ll x=read();  insert(node(d*i,sum[i<span class="number">-1</span>]));</div><div class="line">		ans+=find(node(d*i+x,sum[i]));</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.0lf\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 凸包 </tag>
            
            <tag> 三分 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】二维数组]]></title>
      <url>/2017/04/06/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="题面描述"><a href="#题面描述" class="headerlink" title="题面描述"></a>题面描述</h2><p>在坐标系下，有n个矩形，每个矩形的长宽均为奇数。</p>
<p>第i个矩形的左下角的坐标为$(a_i,b_i)$，右上角的坐标为(c_i,d_i)。</p>
<p>两个矩形是相邻的当且仅当它们有至少一个公共点。</p>
<p>你需要4种颜色来给坐标系上的每个矩形染色。</p>
<p>我们称一种染色方案是合法的，当且仅当不存在两个相邻的矩形颜色相同，你需要输出一种合法的方案。</p>
<h2 id="题解及吐槽"><a href="#题解及吐槽" class="headerlink" title="题解及吐槽"></a>题解及吐槽</h2><p>测试时，我的想法是把相邻的矩形之间连一条边，然后在图上做四分图染色</p>
<p>但是四分图染色不是NPC问题吗？</p>
<p>然后我就gg了</p>
<p>其实我注意到了矩形的长宽都是奇数，但没有想出怎么用这个条件</p>
<p>正解的做法就是按照矩形的奇偶性分组，可以证明同一组中的矩形一定不相邻</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),l=read(),r=read();</div><div class="line">		<span class="keyword">if</span>((x&amp;<span class="number">1</span>)&amp;&amp;(y&amp;<span class="number">1</span>))  <span class="built_in">puts</span>(<span class="string">"0"</span>);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>((x&amp;<span class="number">1</span>)&amp;&amp;!(y&amp;<span class="number">1</span>))  <span class="built_in">puts</span>(<span class="string">"1"</span>);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(!(x&amp;<span class="number">1</span>)&amp;&amp;(y&amp;<span class="number">1</span>))  <span class="built_in">puts</span>(<span class="string">"2"</span>);</div><div class="line">		<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"3"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 构造 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2442】修剪草坪]]></title>
      <url>/2017/04/05/2442/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2442" target="_blank" rel="external">AC通道</a></p>
<p>f[i]=max{f[j]+sum[i]-sum[j+1]} (i-j-1&lt;=k)</p>
<p>这个式子可以用单调性来优化</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line">ll n,k,head,tail,a[MAXN],sum[MAXN],f[MAXN],q[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  k=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read(),sum[i]=sum[i<span class="number">-1</span>]+a[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;i-q[head]<span class="number">-1</span>&gt;k)  ++head;</div><div class="line">		<span class="keyword">if</span>(i&lt;=k)  f[i]=sum[i];</div><div class="line">		<span class="keyword">else</span> f[i]=f[q[head]]+sum[i]-sum[q[head]+<span class="number">1</span>];</div><div class="line">		<span class="keyword">while</span>(head&lt;tail&amp;&amp;f[i]-sum[i+<span class="number">1</span>]&gt;=f[q[tail]]-sum[q[tail]+<span class="number">1</span>])  --tail;</div><div class="line">		q[++tail]=i;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,f[n]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 单调性优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4035】数组操作]]></title>
      <url>/2017/04/05/4035/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4035" target="_blank" rel="external">AC通道</a></p>
<hr>
<iframe src="http://songyiqun2018.blog.uoj.ac/slide/2553#/" height="600px" width="90%" align="center"></iframe>

<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> l,r,v;&#125;a[MAXN];</div><div class="line"><span class="keyword">int</span> n,Time,block,vis[MAXN];</div><div class="line"><span class="built_in">vector</span>&lt;node&gt;b;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> node &amp;a,<span class="keyword">int</span> b)&#123;<span class="keyword">return</span> a.l&gt;b;&#125;</div><div class="line"><span class="function">node <span class="title">merge</span><span class="params">(node a,node b)</span></span>&#123;</div><div class="line">	a.l=min(a.l,b.l);  a.r=max(a.r,b.r);</div><div class="line">	<span class="keyword">return</span> a;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	Time++;  <span class="keyword">int</span> now=<span class="number">0</span>,value=<span class="number">0</span>;  vis[now]=Time;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=b.size()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		<span class="keyword">int</span> temp=b[i].r/r-(b[i].l<span class="number">-1</span>)/r;</div><div class="line">		<span class="keyword">if</span>(temp&gt;=<span class="number">1</span>)  vis[now^b[i].v]=Time;</div><div class="line">		<span class="keyword">if</span>(temp&amp;<span class="number">1</span>)  now^=b[i].v;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;;++i)  <span class="keyword">if</span>(vis[i]!=Time)  &#123;value=i; <span class="keyword">break</span>;&#125;</div><div class="line">	node c;  c=(node)&#123;l,r,value&#125;;</div><div class="line">    <span class="keyword">if</span>(!b.empty()&amp;&amp;value==b.back().v) b.back()=merge(b.back(),c);</div><div class="line">    <span class="keyword">else</span> b.push_back(c);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	block=<span class="built_in">sqrt</span>(n*<span class="number">1.0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;block;++i)  get(n/(i+<span class="number">1</span>)+<span class="number">1</span>,n/i);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n/block;i;--i)  get(i,i);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> k=lower_bound(b.begin(),b.end(),x)-b.begin();</div><div class="line">	<span class="keyword">return</span> b[k].v;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T)&#123;</div><div class="line">		<span class="keyword">int</span> m=read(),ans=<span class="number">0</span>; </div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">			<span class="keyword">int</span> x=read();  </div><div class="line">			ans^=find(x);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">puts</span>(ans?<span class="string">"Yes"</span>:<span class="string">"No"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 博弈论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【hdu3709】Balanced Number]]></title>
      <url>/2017/04/02/%E5%B9%B3%E8%A1%A1%E6%95%B0/</url>
      <content type="html"><![CDATA[<ul>
<li>数位dp重修系列第三题<a id="more"></a></li>
</ul>
<p><a href="https://vjudge.net/problem/HDU-3709" target="_blank" rel="external">AC通道</a></p>
<h2 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h2><p>定义一个数是平衡的，当且仅当把它看成一个杠杆，存在一个支点使它平衡。</p>
<p>例如4139。当3作为支点时，左边的力矩是4×2+1×1=9，右边的力矩是9×1=9。所以这个杠杆是平衡的，4139是平衡数。</p>
<p>询问[L,R]中有多少个平衡数。</p>
<p>$0≤L≤R≤10^{18}$</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>设f[i][j][k]表示前i位，支点为j，当前力矩位k的方案数</p>
<p>则f[i][j][k]=f[i-1][j][k+(i-j)*x]</p>
<p>注意在枚举支点的过程中，0被算了tot次，要减去</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line">ll f[<span class="number">20</span>][<span class="number">20</span>][<span class="number">1550</span>];</div><div class="line"><span class="keyword">int</span> num[<span class="number">20</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,ll k,<span class="keyword">int</span> flag)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(k&lt;<span class="number">0</span>)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(!i)  <span class="keyword">return</span> k==<span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(f[i][j][k]!=<span class="number">-1</span>&amp;&amp;!flag) <span class="keyword">return</span> f[i][j][k];</div><div class="line">	ll temp=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;=(flag?num[i]:<span class="number">9</span>);++x)</div><div class="line">		temp+=dfs(i<span class="number">-1</span>,j,k+(i-j)*x,flag&amp;&amp;x==num[i]);</div><div class="line">	<span class="keyword">if</span>(!flag)  f[i][j][k]=temp;</div><div class="line">	<span class="keyword">return</span> temp;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">get</span><span class="params">(ll x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> tot=<span class="number">0</span>;  ll ans=<span class="number">0</span>;  <span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">	<span class="keyword">while</span>(x)  num[++tot]=x%<span class="number">10</span>,x/=<span class="number">10</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;++i) ans+=dfs(tot,i,<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">	<span class="keyword">return</span> ans-tot+<span class="number">1</span>;<span class="comment">//计算每个平衡点时，0都被计算了一次，要去重</span></div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	ll l=read(),r=read();</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,get(r)-(l?get(l<span class="number">-1</span>):<span class="number">0</span>));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 数位dp </tag>
            
            <tag> hdu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1799】同类分布]]></title>
      <url>/2017/04/02/1799/</url>
      <content type="html"><![CDATA[<ul>
<li>数位dp重修系列第二题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1799" target="_blank" rel="external">AC通道</a></p>
<p>这道题方法很妙，get到了一些经验</p>
<p>我们发现数位之和在1~162的范围内，所以可以直接枚举数位和sum</p>
<p>然后用f[i][j][k]记录前i位的数位和为j，且当前数模sum等于k，那么判断合法的条件就是j==sum&amp;&amp;k==0</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> sum,num[<span class="number">20</span>];</div><div class="line">ll ans,f[<span class="number">20</span>][<span class="number">170</span>][<span class="number">170</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k,<span class="keyword">int</span> flag)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(j&gt;sum)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">if</span>(!i)  <span class="keyword">return</span> (j==sum&amp;&amp;!k);</div><div class="line">	<span class="keyword">if</span>(!flag&amp;&amp;f[i][j][k]!=<span class="number">-1</span>) <span class="keyword">return</span> f[i][j][k];</div><div class="line">	ll temp=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;=(flag?num[i]:<span class="number">9</span>);++x)</div><div class="line">		temp+=dfs(i<span class="number">-1</span>,j+x,(k*<span class="number">10</span>+x)%sum,flag&amp;&amp;x==num[i]);</div><div class="line">	<span class="keyword">if</span>(!flag)  f[i][j][k]=temp;</div><div class="line">	<span class="keyword">return</span> temp;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">cal</span><span class="params">(ll x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> tot=<span class="number">0</span>;  <span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">	<span class="keyword">while</span>(x) num[++tot]=x%<span class="number">10</span>,x/=<span class="number">10</span>;</div><div class="line">	<span class="keyword">if</span>(tot*<span class="number">9</span>&lt;sum)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">return</span> dfs(tot,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	ll l=read(),r=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">162</span>;++i) sum=i,ans+=cal(r)-cal(l<span class="number">-1</span>); </div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 数位dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CF#55D】beautiful numbers]]></title>
      <url>/2017/04/02/numbers/</url>
      <content type="html"><![CDATA[<ul>
<li>数位dp重修系列第一题<a id="more"></a></li>
</ul>
<p><a href="http://codeforces.com/problemset/problem/55/D" target="_blank" rel="external">AC传送门</a></p>
<h2 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h2><p>定义一个数是美丽的，当且仅当它能整除自身的每个非零数位。</p>
<p>例如 $250$ 是美丽的，$2333$ 就是不美丽的。</p>
<p>询问 $[L,R]$ 中有多少个数是美丽的。</p>
<p>$1≤L≤R≤9 \times 10^{18}$
　</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>考虑到 $1~9$ 的$LCM$只是$2520$，所以一个数的所有非零数位的$LCM$一定是$2520$的因数。</p>
<p>我们设当前状态为$f[i][j][k]$。</p>
<p>表示当前转移到了第$i$位，当前所有非零数位的$LCM$为$j$，当前这个数$%2520 = k$。</p>
<p>枚举当前位$x$。</p>
<p>那些状态可以转移到当前状态呢？</p>
<p>f[i-1][LCM(j,x)][(k*10+x)%2520]</p>
<p>因为$2520$的因数只有$48$个，所以把$lcm$这维优化成$48$这样空间就够了。</p>
<p>　</p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>数位dp代码的三种实现方式</p>
<p><strong>１、预处理</strong></p>
<p>预处理出所有的状态，然后枚举数位进行转移，转移时判断限制条件</p>
<p>优点：对于多组询问特别好用</p>
<p>缺点：对于有些题目可能很麻烦，甚至不能预处理</p>
<p><strong> 2、迭代</strong></p>
<p>对于每次询问单独dp，记录限制条件</p>
<p>优点：代码好写（不用于处理，直接写一个dp就成）</p>
<p>缺点：多组询问没法处理</p>
<p><strong> 3、记忆化搜索</strong></p>
<p>对于每一次询问DFS，如果这一位没有受到任何限制就记忆化</p>
<p>优点：代码更好写，且对于多组询问相对友好</p>
<p>缺点：如果位数特别大（什么1e5,1e6之类的），则效果可能不太好</p>
<hr>
<p>所以以后做数位dp题目时，我首选第三种</p>
<p>比如说这道题：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> cnt,num[<span class="number">25</span>],p[<span class="number">55</span>],id[<span class="number">2550</span>],lcm[<span class="number">55</span>][<span class="number">55</span>];</div><div class="line">ll f[<span class="number">25</span>][<span class="number">55</span>][<span class="number">2550</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> !b?a:gcd(b,a%b);&#125;</div><div class="line"><span class="function">ll <span class="title">Lcm</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> a*b/gcd(a,b);&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2520</span>;++i)<span class="keyword">if</span>(!(<span class="number">2520</span>%i))p[++cnt]=i; p[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)id[p[i]]=i;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=cnt;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=cnt;++j)lcm[i][j]=id[Lcm(p[i],p[j])];</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k,<span class="keyword">bool</span> flag)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(!i) <span class="keyword">return</span> (k%p[j]==<span class="number">0</span>);</div><div class="line">	<span class="keyword">if</span>(f[i][j][k]!=<span class="number">-1</span>&amp;&amp;!flag)  <span class="keyword">return</span> f[i][j][k];</div><div class="line">	ll temp=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>;x&lt;=(flag?num[i]:<span class="number">9</span>);++x)</div><div class="line">		temp+=dfs(i<span class="number">-1</span>,lcm[j][x],(k*<span class="number">10</span>+x)%<span class="number">2520</span>,flag&amp;&amp;x==num[i]);</div><div class="line">	<span class="keyword">if</span>(!flag)  f[i][j][k]=temp;</div><div class="line">	<span class="keyword">return</span> temp;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">get</span><span class="params">(ll x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> tot=<span class="number">0</span>; <span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">	<span class="keyword">while</span>(x) num[++tot]=x%<span class="number">10</span>,x/=<span class="number">10</span>;</div><div class="line">	<span class="keyword">return</span> dfs(tot,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	ll l=read(),r=read();</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,get(r)-get(l<span class="number">-1</span>));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	pre();<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 数位dp </tag>
            
            <tag> CF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2563】阿狸和桃子的游戏]]></title>
      <url>/2017/03/31/2563/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>智商好题</p>
<p>对于一条边的两个端点x、y，我们把边权的一半附给他们</p>
<p>这样如果两点都选则贡献为v[x]+v[y]+e[i].v</p>
<p>如选其中一点，贡献为v[x]+e[i].v/2-v[y]-e[i].v/2=v[x]-v[y]</p>
<p>和原问题等价</p>
<p>将新的点权排序即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"><span class="keyword">double</span> ans[<span class="number">2</span>],v[<span class="number">10010</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span>&#123;<span class="keyword">return</span> a&gt;b;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  v[i]=(<span class="keyword">double</span>)read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),val=read();</div><div class="line">		v[x]+=(<span class="keyword">double</span>)val/<span class="number">2</span>;  v[y]+=(<span class="keyword">double</span>)val/<span class="number">2</span>;</div><div class="line">	&#125;</div><div class="line">	sort(v+<span class="number">1</span>,v+n+<span class="number">1</span>,cmp);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) ans[i&amp;<span class="number">1</span>]+=v[i];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(<span class="keyword">int</span>)(ans[<span class="number">1</span>]-ans[<span class="number">0</span>]));</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 贪心 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4518】征途]]></title>
      <url>/2017/03/31/4518/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4518" target="_blank" rel="external">AC通道</a></p>
<p>看到这题，我整个人都惊呆了，然后看了一下一句话题解，斜率优化</p>
<p>于是静下心来仔细推了推式子，发现真的是斜率优化</p>
<p>至于题解，网上很多，我就不写了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,m,a[<span class="number">3010</span>],sum[<span class="number">3010</span>],q[<span class="number">3010</span>],f[<span class="number">3010</span>][<span class="number">3010</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">slop</span><span class="params">(<span class="keyword">int</span> j,<span class="keyword">int</span> k,<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> (<span class="keyword">double</span>)(f[j][x]-f[k][x]+sum[j]*sum[j]-sum[k]*sum[k])/(sum[j]-sum[k]);&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  <span class="built_in">memset</span>(f,<span class="number">10</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  sum[i]=sum[i<span class="number">-1</span>]+a[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  f[i][<span class="number">1</span>]=sum[i]*sum[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=m;++j)&#123;</div><div class="line">		<span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">			<span class="keyword">while</span>(head&lt;tail&amp;&amp;slop(q[head],q[head+<span class="number">1</span>],j<span class="number">-1</span>)&lt;(<span class="keyword">double</span>)sum[i]*<span class="number">2</span>)  ++head;</div><div class="line">			<span class="keyword">int</span> temp=q[head];  f[i][j]=f[temp][j<span class="number">-1</span>]+(sum[i]-sum[temp])*(sum[i]-sum[temp]);</div><div class="line">			<span class="keyword">while</span>(head&lt;tail&amp;&amp;slop(q[tail],q[tail<span class="number">-1</span>],j<span class="number">-1</span>)&gt;slop(i,q[tail],j<span class="number">-1</span>))  --tail;</div><div class="line">			q[++tail]=i;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[n][m]*m-sum[n]*sum[n]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 斜率优化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1088】扫雷Mine]]></title>
      <url>/2017/03/31/1088/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1088" target="_blank" rel="external">AC通道</a></p>
<p>随机程序又摇出了一道水题，好开心啊</p>
<p>我们发现只要确定了前2个格子是否有雷，就可以确定整列的状态</p>
<p>模拟即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 10010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,ans,a[MAXN],f[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;++i)&#123;</div><div class="line">		f[i]=a[i<span class="number">-1</span>]-f[i<span class="number">-1</span>]-f[i<span class="number">-2</span>];</div><div class="line">		<span class="keyword">if</span>(f[i]&lt;<span class="number">0</span>||f[i]&gt;<span class="number">1</span>)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(a[n]!=f[n]+f[n<span class="number">-1</span>])  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read(); <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i]=read();</div><div class="line">	<span class="keyword">if</span>(a[<span class="number">1</span>]==<span class="number">0</span>)  ans+=check();</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(a[<span class="number">1</span>]==<span class="number">1</span>)&#123;</div><div class="line">		f[<span class="number">1</span>]=<span class="number">1</span>;  ans+=check(); <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">		f[<span class="number">2</span>]=<span class="number">1</span>;  ans+=check();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> f[<span class="number">1</span>]=f[<span class="number">2</span>]=<span class="number">1</span>,ans+=check();</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 模拟 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2734】集合选数]]></title>
      <url>/2017/03/31/2734/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2734" target="_blank" rel="external">AC通道</a></p>
<p>一道很巧妙的状压dp题</p>
<p>首先我们注意到给出的问题相当于在一个如下图所示的矩形中选一些不相邻的数的方案数</p>
<p>x   3x   9x   …<br>2x  6x   18x  …<br>4x  12x  36x  …</p>
<p>这个问题用状压dp解决</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">1</span>;</div><div class="line"><span class="keyword">int</span> n,vst[<span class="number">20</span>],vis[<span class="number">100010</span>],a[<span class="number">20</span>][<span class="number">20</span>],f[<span class="number">20</span>][<span class="number">1</span>&lt;&lt;<span class="number">11</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> (x&amp;(x&lt;&lt;<span class="number">1</span>))==<span class="number">0</span>;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	a[<span class="number">1</span>][<span class="number">1</span>]=x;  <span class="built_in">memset</span>(vst,<span class="number">0</span>,<span class="keyword">sizeof</span>(vst));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">18</span>;++i) &#123;a[i][<span class="number">1</span>]=a[i<span class="number">-1</span>][<span class="number">1</span>]*<span class="number">2</span>; <span class="keyword">if</span>(a[i][<span class="number">1</span>]&gt;n) a[i][<span class="number">1</span>]=n+<span class="number">1</span>;&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">18</span>;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=<span class="number">11</span>;++j)&#123;</div><div class="line">		a[i][j]=a[i][j<span class="number">-1</span>]*<span class="number">3</span>;</div><div class="line">		<span class="keyword">if</span>(a[i][j]&gt;n)  a[i][j]=n+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">18</span>;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">11</span>;++j)<span class="keyword">if</span>(a[i][j]&lt;=n)</div><div class="line">		vst[i]|=(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>)),vis[a[i][j]]=<span class="number">1</span>;</div><div class="line">	<span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f)); f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">18</span>;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=vst[i];++j)<span class="keyword">if</span>(judge(j))&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=vst[i<span class="number">-1</span>];++k)<span class="keyword">if</span>(judge(k)&amp;&amp;((k&amp;j)==<span class="number">0</span>))&#123;</div><div class="line">			f[i][j]+=f[i<span class="number">-1</span>][k];  f[i][j]%=mod;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> f[<span class="number">18</span>][<span class="number">0</span>];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  ll ans=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(!vis[i])ans=ans*solve(i)%mod;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 状压dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【NOI2001】炮兵阵地]]></title>
      <url>/2017/03/31/%E3%80%90NOI2001%E3%80%91%E7%82%AE%E5%85%B5%E9%98%B5%E5%9C%B0/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>这题好神，不看题解根本想不起来</p>
<p>用f[i][j][k]表示第i行状态为j，前一行状态为k的答案</p>
<p>则f[i][j][k]=max{f[i-1][k][l]}</p>
<p>至于如何判断状态是否合法，细节较多，详见代码</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,ans,cnt,vst[<span class="number">110</span>],sum[<span class="number">110</span>],check[<span class="number">110</span>],f[<span class="number">110</span>][<span class="number">110</span>][<span class="number">110</span>];</div><div class="line"><span class="keyword">char</span> ch[<span class="number">110</span>][<span class="number">20</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">temp</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="keyword">while</span>(x)temp+=(x&amp;<span class="number">1</span>),x&gt;&gt;=<span class="number">1</span>;<span class="keyword">return</span> temp;&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> (!(x&amp;(x&lt;&lt;<span class="number">1</span>)))&amp;&amp;(!(x&amp;(x&lt;&lt;<span class="number">2</span>)));&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read(); <span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch[i]+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)</div><div class="line">		<span class="keyword">if</span>(ch[i][j]==<span class="string">'H'</span>) check[i]|=(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;m);++i)<span class="keyword">if</span>(judge(i))vst[++cnt]=i,sum[cnt]=get(i);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)<span class="keyword">if</span>(!(check[<span class="number">1</span>]&amp;vst[i]))f[<span class="number">1</span>][i][<span class="number">1</span>]=sum[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)<span class="keyword">if</span>(!(check[i]&amp;vst[j]))&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=cnt;++k)<span class="keyword">if</span>(!(vst[j]&amp;vst[k]))&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=cnt;++l)<span class="keyword">if</span>(!(vst[j]&amp;vst[l]))&#123;</div><div class="line">				<span class="keyword">if</span>(f[i<span class="number">-1</span>][k][l]!=<span class="number">-1</span>) cmax(f[i][j][k],f[i<span class="number">-1</span>][k][l]+sum[j]);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)cmax(ans,f[n][i][j]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 状压dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3745】Norma]]></title>
      <url>/2017/03/30/3745/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3745" target="_blank" rel="external">AC通道</a></p>
<p>这题梓轩学长讲过线段树做法，但是写起来过于糟心，所以考场上果断暴力</p>
<p>然后题解上给出了单调队列的做法，依旧糟心</p>
<p>然后去膜拜神犇的题解，发现分治可做，虽然写起来依旧糟心。。。。。。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"xnum"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">const</span> ll mod=(ll)<span class="number">1e9</span>;</div><div class="line">ll n,ans,a[MAXN],mx[MAXN],mn[MAXN],f[MAXN],g[MAXN],c[MAXN],d[MAXN],p[MAXN],q[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">get</span><span class="params">(ll x,ll y)</span></span>&#123;<span class="keyword">return</span> ((x+y)*(y-x+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>)%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(ll l,ll r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)  &#123;ans=(ans+a[l]*a[l]%mod)%mod;  <span class="keyword">return</span>;&#125;</div><div class="line">	ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	solve(l,mid);  solve(mid+<span class="number">1</span>,r);</div><div class="line">	mx[mid]=mn[mid]=a[mid];</div><div class="line">	<span class="keyword">for</span>(ll i=mid<span class="number">-1</span>;i&gt;=l;--i)&#123;</div><div class="line">		mx[i]=max(mx[i+<span class="number">1</span>],a[i]);</div><div class="line">		mn[i]=min(mn[i+<span class="number">1</span>],a[i]);</div><div class="line">	&#125;</div><div class="line">	ll maxx=-mod,minn=mod;</div><div class="line">	f[mid]=g[mid]=c[mid]=d[mid]=p[mid]=q[mid]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(ll i=mid+<span class="number">1</span>;i&lt;=r;++i)&#123;</div><div class="line">		cmax(maxx,a[i]);  cmin(minn,a[i]);</div><div class="line">		f[i]=(f[i<span class="number">-1</span>]+minn*maxx*(i-mid)%mod)%mod;</div><div class="line">		g[i]=(g[i<span class="number">-1</span>]+minn*maxx%mod)%mod;</div><div class="line">		c[i]=(c[i<span class="number">-1</span>]+minn*(i-mid)%mod)%mod;</div><div class="line">		d[i]=(d[i<span class="number">-1</span>]+maxx*(i-mid)%mod)%mod;</div><div class="line">		p[i]=(p[i<span class="number">-1</span>]+minn)%mod;</div><div class="line">		q[i]=(q[i<span class="number">-1</span>]+maxx)%mod;</div><div class="line">	&#125;</div><div class="line">	ll j=mid,k=mid;</div><div class="line">	<span class="keyword">for</span>(ll i=mid;i&gt;=l;--i)&#123;</div><div class="line">		<span class="keyword">while</span>(j&lt;r&amp;&amp;a[j+<span class="number">1</span>]&gt;mn[i])  ++j;</div><div class="line">		<span class="keyword">while</span>(k&lt;r&amp;&amp;a[k+<span class="number">1</span>]&lt;mx[i])  ++k;</div><div class="line">		ans+=mx[i]*mn[i]%mod*get(mid+<span class="number">2</span>-i,min(j,k)-i+<span class="number">1</span>)%mod;ans%=mod;</div><div class="line">		ans+=(g[r]-g[max(j,k)])*(mid-i+<span class="number">1</span>)%mod+f[r]-f[max(j,k)];ans%=mod;</div><div class="line">		<span class="keyword">if</span>(j&lt;k) ans+=((p[k]-p[j])*(mid-i+<span class="number">1</span>)%mod+c[k]-c[j])*mx[i]%mod;</div><div class="line">		<span class="keyword">else</span> ans+=((q[j]-q[k])*(mid-i+<span class="number">1</span>)%mod+d[j]-d[k])*mn[i]%mod;</div><div class="line">		ans%=mod;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">	solve(<span class="number">1</span>,n);  </div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans+mod)%mod);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 分治 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2096】Pilots]]></title>
      <url>/2017/03/28/2096/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a>\</li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2096" target="_blank" rel="external">AC通道</a></p>
<p>这题显然使用双指针扫描一遍，然后的问题就是维护区间的最大值和最小值</p>
<p>用线段树可以做到$O(n\log n)$，但是此题的数据范围不支持</p>
<p>考虑用单调队列维护，方法同单调队列经典例题window</p>
<p>感谢cdcq同学帮我查错</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 3000010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">int</span> n,k,ans,cur(<span class="number">1</span>),a[MAXN],head[<span class="number">3</span>],tail[<span class="number">3</span>],q[<span class="number">3</span>][MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	k=read();  n=read();  head[<span class="number">1</span>]=head[<span class="number">2</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(a[i]&gt;a[q[<span class="number">1</span>][tail[<span class="number">1</span>]]]&amp;&amp;head[<span class="number">1</span>]&lt;=tail[<span class="number">1</span>])  tail[<span class="number">1</span>]--;</div><div class="line">		<span class="keyword">while</span>(a[i]&lt;a[q[<span class="number">2</span>][tail[<span class="number">2</span>]]]&amp;&amp;head[<span class="number">2</span>]&lt;=tail[<span class="number">2</span>])  tail[<span class="number">2</span>]--;</div><div class="line">		q[<span class="number">1</span>][++tail[<span class="number">1</span>]]=i;</div><div class="line">		q[<span class="number">2</span>][++tail[<span class="number">2</span>]]=i;</div><div class="line">		<span class="keyword">while</span>(a[q[<span class="number">1</span>][head[<span class="number">1</span>]]]-a[q[<span class="number">2</span>][head[<span class="number">2</span>]]]&gt;k)&#123;</div><div class="line">			<span class="keyword">if</span>(cur==q[<span class="number">1</span>][head[<span class="number">1</span>]]&amp;&amp;head[<span class="number">1</span>]&lt;=tail[<span class="number">1</span>])  ++head[<span class="number">1</span>];</div><div class="line">			<span class="keyword">if</span>(cur==q[<span class="number">2</span>][head[<span class="number">2</span>]]&amp;&amp;head[<span class="number">2</span>]&lt;=tail[<span class="number">2</span>])  ++head[<span class="number">2</span>];</div><div class="line">			++cur;</div><div class="line">		&#125;</div><div class="line">		cmax(ans,i-cur+<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 单调队列 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】IQ测试]]></title>
      <url>/2017/03/26/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91IQ%E6%B5%8B%E8%AF%95/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2083" target="_blank" rel="external">AC通道</a></p>
<p>这是bzoj2083的原题</p>
<p>考试时我居然写的是AC自动机。。。。。。</p>
<p>这道题让我对邻接链表的理解加深了不少</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN (int)1e6+10</span></div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN];</div><div class="line"><span class="keyword">int</span> n,m,tot,len,cnt[MAXN],a[MAXN],b[MAXN],Link[MAXN],f[MAXN],ans[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++tot].next=Link[x];Link[x]=tot;e[tot].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(f[x])  ans[f[x]]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span> insert(b[x+<span class="number">1</span>],x+<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">	m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		cnt[i]=read();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt[i];++j)b[++len]=read();</div><div class="line">		insert(b[len-cnt[i]+<span class="number">1</span>],len-cnt[i]+<span class="number">1</span>); f[len]=i;;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> temp=Link[a[i]];  Link[a[i]]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=temp;j;j=e[j].next)updata(e[j].y);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) <span class="built_in">puts</span>(ans[i]?<span class="string">"TAK"</span>:<span class="string">"NIE"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 链表 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CF#786B】Legacy]]></title>
      <url>/2017/03/25/Legacy/</url>
      <content type="html"><![CDATA[<ul>
<li>线段树优化建图的好题<a id="more"></a></li>
</ul>
<p><a href="http://codeforces.com/problemset/problem/786/B" target="_blank" rel="external">AC通道</a></p>
<h2 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h2><p>有n的地点和m张机票，机票有三种：</p>
<p>第一种：可以从x到达y</p>
<p>第二种：可以由x到达区间[l,r]的地点</p>
<p>第三种：可以由区间[l,r]的地点到达x</p>
<p>机票的价格为w，种类用opt表示</p>
<p>问从S到达各个地点的最小花费</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>看到区间，我们自然而然地想到线段树，但是由于考场上死磕C题而错过了这道题目。</p>
<p>我们用线段树优化建图，然后跑最短路即可。</p>
<p>注意：</p>
<ol>
<li><p>线段树要建两颗，原因很显然。</p>
</li>
<li><p>priority_queue默认是less，而这里用的是greater</p>
</li>
</ol>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt; pii;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN (ll)2e6+10</span></div><div class="line"><span class="keyword">struct</span> node&#123;ll y,next,v;&#125;e[MAXN];</div><div class="line">ll n,m,S,cnt,len,root[<span class="number">5</span>],Link[MAXN],dis[MAXN],vis[MAXN],tr[MAXN][<span class="number">2</span>];</div><div class="line">priority_queue&lt;pii,<span class="built_in">vector</span>&lt;pii &gt;,greater&lt;pii&gt; &gt; q;</div><div class="line"><span class="comment">//priority_queue&lt;pii&gt;q;</span></div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(ll x,ll y,ll v)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(ll &amp;p,ll l,ll r,ll opt)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r) &#123;p=l; <span class="keyword">return</span>;&#125;</div><div class="line">	p=++cnt;  ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(tr[p][<span class="number">0</span>],l,mid,opt);  build(tr[p][<span class="number">1</span>],mid+<span class="number">1</span>,r,opt);</div><div class="line">	<span class="keyword">if</span>(!opt) insert(p,tr[p][<span class="number">0</span>],<span class="number">0</span>),insert(p,tr[p][<span class="number">1</span>],<span class="number">0</span>);</div><div class="line">	<span class="keyword">else</span> insert(tr[p][<span class="number">0</span>],p,<span class="number">0</span>),insert(tr[p][<span class="number">1</span>],p,<span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(ll p,ll l,ll r,ll x,ll y,ll pos,ll v,ll opt)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">2</span>)  insert(pos,p,v);</div><div class="line">		<span class="keyword">else</span> insert(p,pos,v);</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	updata(tr[p][<span class="number">0</span>],l,mid,x,y,pos,v,opt); </div><div class="line">	updata(tr[p][<span class="number">1</span>],mid+<span class="number">1</span>,r,x,y,pos,v,opt);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(dis,<span class="number">10</span>,<span class="keyword">sizeof</span>(dis));</div><div class="line">	ll oo=dis[<span class="number">0</span>];  dis[S]=<span class="number">0</span>;  vis[S]=<span class="number">1</span>;</div><div class="line">	q.push(make_pair(dis[S],S));</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		ll v=q.top().first,x=q.top().second; q.pop();</div><div class="line">		<span class="comment">//if(v&gt;dis[x])  continue;</span></div><div class="line">		<span class="keyword">for</span>(ll i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(dis[x]+e[i].v&lt;dis[e[i].y])&#123;</div><div class="line">			dis[e[i].y]=dis[x]+e[i].v;</div><div class="line">			<span class="keyword">if</span>(!vis[e[i].y]) q.push(make_pair(dis[e[i].y],e[i].y));</div><div class="line">		&#125;</div><div class="line">		vis[x]=<span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(dis[i]==oo)  <span class="built_in">printf</span>(<span class="string">"-1 "</span>);</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%I64d "</span>,dis[i]);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=cnt=read();  m=read();  S=read();</div><div class="line">	build(root[<span class="number">1</span>],<span class="number">1</span>,n,<span class="number">0</span>);  build(root[<span class="number">2</span>],<span class="number">1</span>,n,<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		ll opt=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)  &#123;ll x=read(),y=read(),v=read();insert(x,y,v);&#125;</div><div class="line">		<span class="keyword">else</span>  &#123;ll x=read(),l=read(),r=read(),v=read();updata(root[opt<span class="number">-1</span>],<span class="number">1</span>,n,l,r,x,v,opt);&#125;</div><div class="line">	&#125;</div><div class="line">	dijkstra();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> 最短路 </tag>
            
            <tag> CF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CF786#A】Berzerk]]></title>
      <url>/2017/03/24/Berzerk/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://codeforces.com/problemset/problem/787/A" target="_blank" rel="external">AC通道</a></p>
<h2 id="题目翻译"><a href="#题目翻译" class="headerlink" title="题目翻译"></a>题目翻译</h2><p>有一个写着1~n的转盘，A和B各有一个数的集合a,b，他们分别可以将转盘的指针顺时针转动a[i]和b[j]格，先将指针转到1者胜。</p>
<p>对于每一个指针的初始位置以及先手情况，判断胜负。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>博弈论中有一个经典的结论：必胜态可以转移到必败态，必败态只能转移到必胜态。</p>
<p>我们知道1必败态，据此我们可以通过dfs或bfs来确定所有结点的状态，然后判断初始状态就行了。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">int</span> n,cnt[<span class="number">2</span>],a[<span class="number">2</span>][<span class="number">7010</span>],vis[<span class="number">2</span>][<span class="number">7010</span>],ans[<span class="number">2</span>][<span class="number">7010</span>];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="comment">//freopen(FILE".in","r",stdin);</span></div><div class="line">	<span class="comment">//freopen(FILE".out","w",stdout);</span></div><div class="line">	n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i)&#123;</div><div class="line">		cnt[i]=read();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt[i];++j) a[i][j]=read();</div><div class="line">	&#125;</div><div class="line">	q.push(<span class="number">1</span>);  q.push(<span class="number">-1</span>);  ans[<span class="number">0</span>][<span class="number">1</span>]=ans[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front(),y=<span class="built_in">abs</span>(x);q.pop();x=(x&lt;<span class="number">0</span>?<span class="number">0</span>:<span class="number">1</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt[x^<span class="number">1</span>];++i)&#123;</div><div class="line">			<span class="keyword">int</span> z=y-a[x^<span class="number">1</span>][i];  <span class="keyword">if</span>(z&lt;=<span class="number">0</span>)  z+=n;</div><div class="line">			<span class="keyword">if</span>(ans[x][y]==<span class="number">-1</span>) &#123;<span class="keyword">if</span>(ans[x^<span class="number">1</span>][z]!=<span class="number">1</span>)ans[x^<span class="number">1</span>][z]=<span class="number">1</span>,q.push(x?-z:z);&#125;</div><div class="line">			<span class="keyword">else</span>&#123;</div><div class="line">				<span class="keyword">if</span>(ans[x^<span class="number">1</span>][z]!=<span class="number">0</span>)  <span class="keyword">continue</span>;</div><div class="line">				vis[x^<span class="number">1</span>][z]++;</div><div class="line">				<span class="keyword">if</span>(vis[x^<span class="number">1</span>][z]==cnt[x^<span class="number">1</span>]) ans[x^<span class="number">1</span>][z]=<span class="number">-1</span>,q.push(x?-z:z);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=n;++j)&#123;</div><div class="line">			<span class="keyword">if</span>(ans[i][j]==<span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"Lose "</span>);</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(ans[i][j]==<span class="number">0</span>)  <span class="built_in">printf</span>(<span class="string">"Loop "</span>);</div><div class="line">			<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"Win "</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 博弈论 </tag>
            
            <tag> CF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【日常小测】C]]></title>
      <url>/2017/03/24/%E3%80%90%E6%97%A5%E5%B8%B8%E5%B0%8F%E6%B5%8B%E3%80%91C/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://pan.baidu.com/s/1o8lXqau" target="_blank" rel="external">数据</a></p>
<p><a href="http://pan.baidu.com/s/1eRUC7Hw" target="_blank" rel="external">官方题解</a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一棵n个结点的无根树，树上的每个点有一个非负点权。</p>
<p>定义一条路径的价值为：路径上的点权和-路径上的点权最大值。</p>
<p>给定参数P，我们想知道，有多少不同的树上简单路径，满足它的价值是P的倍数。</p>
<p>注意：单点算作一个路径，u≠v时，(u,v)和(v,u)只算一次。</p>
<p>n&lt;=1e5, P&lt;=1e7</p>
<h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>5 2<br>1 2<br>1 3<br>2 4<br>3 5<br>1 3 3 1 2</p>
<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>9</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>点分治，统计子树答案时记录路径上的最大点权，然后从小到大更新答案即可。</p>
<p>这样做保证了路径上的最大点权在当前的路径上。</p>
<p>注意：最后要把单点的情况加上。</p>
<p>PS：在测试时，我没能想到用这样的方法保证路径的合法性，也算是收获了一些人生的经验吧。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN (int)(1e5+10)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF (int)1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,P,sum,root,len,tail,ans,Link[MAXN],cnt[<span class="number">10000010</span>],v[MAXN],vsum[MAXN],vmax[MAXN],q[MAXN],size[MAXN],vis[MAXN],f[MAXN];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;<span class="keyword">return</span> vmax[x]&lt;vmax[y];&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">getroot</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	size[x]=<span class="number">1</span>;  f[x]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa&amp;&amp;!vis[e[i].y])&#123;</div><div class="line">		getroot(e[i].y,x);  size[x]+=size[e[i].y];</div><div class="line">		<span class="keyword">if</span>(size[e[i].y]&gt;f[x]) f[x]=size[e[i].y];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(sum-size[x]&gt;f[x])  f[x]=sum-size[x];</div><div class="line">	<span class="keyword">if</span>(f[x]&lt;f[root])  root=x;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">getv</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	vsum[x]=(vsum[fa]+v[x])%P;vmax[x]=max(vmax[fa],v[x]);q[++tail]=x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(e[i].y!=fa&amp;&amp;!vis[e[i].y])  getv(e[i].y,x);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> val,<span class="keyword">int</span> fv)</span></span>&#123;</div><div class="line">	vsum[<span class="number">0</span>]=vmax[<span class="number">0</span>]=val;  tail=<span class="number">0</span>;  getv(x,<span class="number">0</span>);</div><div class="line">	sort(q+<span class="number">1</span>,q+tail+<span class="number">1</span>,cmp); <span class="keyword">int</span> ret=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tail;++i)&#123;</div><div class="line">		<span class="keyword">int</span> now=q[i];  <span class="keyword">if</span>(vsum[now]&lt;<span class="number">0</span>)  vsum[now]+=P;</div><div class="line">		<span class="keyword">int</span> temp=(vmax[now]-vsum[now]+fv)%P;</div><div class="line">		<span class="keyword">if</span>(temp&lt;<span class="number">0</span>)  temp+=P;</div><div class="line">		ret+=cnt[temp];  cnt[vsum[now]]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tail;++i)  cnt[vsum[q[i]]]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	ans+=get(x,<span class="number">0</span>,v[x]);  vis[x]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(!vis[e[i].y])&#123;</div><div class="line">		ans-=get(e[i].y,v[x],v[x]);</div><div class="line">		sum=size[e[i].y];  root=<span class="number">0</span>;</div><div class="line">		getroot(e[i].y,<span class="number">0</span>); solve(root);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=sum=read();  P=read();  f[<span class="number">0</span>]=INF;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i) &#123;<span class="keyword">int</span> x=read(),y=read(); insert(x,y); insert(y,x);&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  v[i]=read();</div><div class="line">	getroot(<span class="number">1</span>,<span class="number">0</span>);  solve(root);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans+n);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 点分治 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4316】小C的独立集]]></title>
      <url>/2017/03/23/4316/</url>
      <content type="html"><![CDATA[<ul>
<li>仙人掌系列第二题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4316" target="_blank" rel="external">AC通道</a></p>
<p>仙人掌最大独立集问题</p>
<p>如果是在树上，直接dp即可：令f[i][0/1]表示i选与不选的答案</p>
<p>放在仙人掌上也是一样的，对于环上的情况单独处理即可</p>
<p>这道题调了1天，原因是环上必须按顺序更新答案</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 480010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF (int)1e9</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN];</div><div class="line"><span class="keyword">int</span> n,m,cnt,top,bcnt,len(<span class="number">1</span>),dfs_clock,Link[MAXN],dfn[MAXN],q[MAXN],f[MAXN][<span class="number">2</span>],g[MAXN][<span class="number">2</span>];</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ring[MAXN];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">    e[++len].next=Link[x];Link[x]=len;e[len].y=y;</div><div class="line">    e[++len].next=Link[y];Link[y]=len;e[len].y=x;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">    dfn[x]=++dfs_clock;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">        <span class="keyword">if</span>(!dfn[e[i].y])  q[++top]=i,dfs(e[i].y,x),--top;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(dfn[e[i].y]&lt;dfn[x])&#123;</div><div class="line">            ring[++bcnt].push_back(i);</div><div class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=top;j;--j)&#123;</div><div class="line">                <span class="keyword">if</span>(e[q[j]].y==e[i].y)  <span class="keyword">break</span>;</div><div class="line">                ring[bcnt].push_back(q[j]);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=bcnt;++k)&#123;</div><div class="line">        <span class="keyword">int</span> size=ring[k].size(),top=e[ring[k][<span class="number">0</span>]].y;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size;++i)&#123;</div><div class="line">            <span class="keyword">int</span> temp=e[ring[k][i]].y;</div><div class="line">            e[ring[k][i]].y=e[ring[k][i]^<span class="number">1</span>].y=<span class="number">0</span>;</div><div class="line">            ring[k][i]=temp;</div><div class="line">        &#125;insert(++cnt,top);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;size;++i) insert(ring[k][i],cnt);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">    <span class="keyword">if</span>(x&lt;=n)&#123;</div><div class="line">        f[x][<span class="number">0</span>]=<span class="number">0</span>;  f[x][<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y&amp;&amp;e[i].y!=fa)&#123;</div><div class="line">            dp(e[i].y,x);</div><div class="line">            <span class="keyword">if</span>(e[i].y&gt;n)  <span class="keyword">continue</span>;</div><div class="line">            f[x][<span class="number">0</span>]+=max(f[e[i].y][<span class="number">0</span>],f[e[i].y][<span class="number">1</span>]);</div><div class="line">            f[x][<span class="number">1</span>]+=f[e[i].y][<span class="number">0</span>];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">int</span> top=<span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y&amp;&amp;e[i].y!=fa)dp(e[i].y,x);</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y)&#123;</div><div class="line">            g[++top][<span class="number">0</span>]=f[e[i].y][<span class="number">0</span>];</div><div class="line">            g[top][<span class="number">1</span>]=f[e[i].y][<span class="number">1</span>];</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=top<span class="number">-1</span>;i;--i)&#123;</div><div class="line">            g[i][<span class="number">0</span>]+=max(g[i+<span class="number">1</span>][<span class="number">0</span>],g[i+<span class="number">1</span>][<span class="number">1</span>]);</div><div class="line">            g[i][<span class="number">1</span>]+=g[i+<span class="number">1</span>][<span class="number">0</span>];</div><div class="line">        &#125;</div><div class="line">        f[fa][<span class="number">0</span>]=g[<span class="number">1</span>][<span class="number">0</span>];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;top;++i)&#123;</div><div class="line">            g[i][<span class="number">0</span>]-=max(g[i+<span class="number">1</span>][<span class="number">0</span>],g[i+<span class="number">1</span>][<span class="number">1</span>]);</div><div class="line">            g[i][<span class="number">1</span>]-=g[i+<span class="number">1</span>][<span class="number">0</span>];</div><div class="line">        &#125;</div><div class="line">        g[top][<span class="number">1</span>]=-INF;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=top<span class="number">-1</span>;i;--i)&#123;</div><div class="line">            g[i][<span class="number">0</span>]+=max(g[i+<span class="number">1</span>][<span class="number">0</span>],g[i+<span class="number">1</span>][<span class="number">1</span>]);</div><div class="line">            g[i][<span class="number">1</span>]+=g[i+<span class="number">1</span>][<span class="number">0</span>];</div><div class="line">        &#125;</div><div class="line">        f[fa][<span class="number">1</span>]=g[<span class="number">1</span>][<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">    n=read();  m=read();  cnt=n;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;<span class="keyword">int</span> x=read(),y=read();insert(x,y);&#125;</div><div class="line">    dfs(<span class="number">1</span>,<span class="number">0</span>);  build();  dp(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,max(f[<span class="number">1</span>][<span class="number">0</span>],f[<span class="number">1</span>][<span class="number">1</span>]));</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 仙人掌 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4439】Landscaping]]></title>
      <url>/2017/03/21/4439/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4439" target="_blank" rel="external">AC通道</a></p>
<p>这题一眼看过去网络流，但是在建图时遇到了困难，只能偷窥了题解</p>
<p>果然是我弱啊</p>
<p>将’#’连到S，’.’连到T，然后对于每个点向周围四个点连边即可。</p>
<p>为什么这样做呢？</p>
<p>因为方向是不确定的，所以中间的点之间必须连双向边。</p>
<p>我居然没有想到。。。</p>
<p>交上去就1A了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2510</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF (int)1e9</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[MAXN*<span class="number">10</span>];</div><div class="line"><span class="keyword">int</span> n,m,A,B,S,T,len(<span class="number">1</span>),cnt,id[<span class="number">55</span>][<span class="number">55</span>],Link[MAXN],level[MAXN];</div><div class="line"><span class="keyword">char</span> <span class="built_in">map</span>[<span class="number">55</span>][<span class="number">55</span>];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front();  q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(level[e[i].y]&lt;<span class="number">0</span>&amp;&amp;e[i].v)</div><div class="line">			q.push(e[i].y),level[e[i].y]=level[x]+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))</div><div class="line">				e[i].v-=d,e[i^<span class="number">1</span>].v+=d,maxflow+=d;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  A=read();  B=read();  S=<span class="number">0</span>;  T=n*m+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="built_in">scanf</span>(<span class="string">"%s"</span>,<span class="built_in">map</span>[i]+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)id[i][j]=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</div><div class="line">		<span class="keyword">if</span>(<span class="built_in">map</span>[i][j]==<span class="string">'.'</span>)  insert(S,id[i][j],B);</div><div class="line">		<span class="keyword">else</span> insert(id[i][j],T,B);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;++k)&#123;</div><div class="line">			<span class="keyword">int</span> x=i+dx[k],y=j+dy[k];</div><div class="line">			<span class="keyword">if</span>(x&lt;=<span class="number">0</span>||y&lt;=<span class="number">0</span>||x&gt;n||y&gt;m)  <span class="keyword">continue</span>;</div><div class="line">			insert(id[i][j],id[x][y],A);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans+=d;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 最小割 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【HAOI2013】软件安装]]></title>
      <url>/2017/03/20/1365/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://cogs.pro/cogs/problem/problem.php?pid=1365" target="_blank" rel="external">AC通道</a></p>
<p>这道题一眼线段树，秒水题真是爽啊</p>
<p>然而还是调了2个小时。。。。。。</p>
<p>我们只需要用线段树维护lx,rx,maxx，分别表示区间的左起连续0的个数，右起连续的0的个数，最大的连续0的个数，就可以实现区间信息的合并。</p>
<p>坑点：标记必须提前下传，因为回答询问时需要用到子节点信息</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> lx,rx,maxx,tag;&#125;tr[MAXN&lt;&lt;<span class="number">3</span>];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>)),fs==ft)?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">relord</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(tr[p].tag==<span class="number">0</span>)  tr[p].lx=tr[p].rx=tr[p].maxx=r-l+<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(tr[p].tag==<span class="number">1</span>)  tr[p].lx=tr[p].rx=tr[p].maxx=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(tr[p].tag==<span class="number">-1</span>)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	tr[p&lt;&lt;<span class="number">1</span>].tag=tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].tag=tr[p].tag;</div><div class="line">	relord(p&lt;&lt;<span class="number">1</span>,l,mid);  relord(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">	tr[p].tag=<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	tr[p].maxx=max(tr[p&lt;&lt;<span class="number">1</span>].maxx,max(tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].maxx,tr[p&lt;&lt;<span class="number">1</span>].rx+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].lx));</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(tr[p&lt;&lt;<span class="number">1</span>].lx==mid-l+<span class="number">1</span>)  tr[p].lx=tr[p&lt;&lt;<span class="number">1</span>].lx+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].lx;</div><div class="line">	<span class="keyword">else</span> tr[p].lx=tr[p&lt;&lt;<span class="number">1</span>].lx;</div><div class="line">	<span class="keyword">if</span>(tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].rx==r-mid)  tr[p].rx=tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].rx+tr[p&lt;&lt;<span class="number">1</span>].rx;</div><div class="line">	<span class="keyword">else</span> tr[p].rx=tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].rx;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	pushdown(p,l,r);</div><div class="line">	<span class="keyword">if</span>(l==r)  <span class="keyword">return</span> l;  </div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; </div><div class="line">	<span class="keyword">if</span>(tr[p&lt;&lt;<span class="number">1</span>].maxx&gt;=x)  <span class="keyword">return</span> ask(p&lt;&lt;<span class="number">1</span>,l,mid,x);</div><div class="line">	<span class="keyword">if</span>(tr[p&lt;&lt;<span class="number">1</span>].rx+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].lx&gt;=x)  <span class="keyword">return</span> mid-tr[p&lt;&lt;<span class="number">1</span>].rx+<span class="number">1</span>;</div><div class="line">	<span class="keyword">return</span> ask(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	pushdown(p,l,r);</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  &#123;tr[p].tag=v; relord(p,l,r); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; </div><div class="line">	<span class="keyword">if</span>(mid&gt;=y)  updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,v);  </div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(mid&lt;x)  updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,v);  </div><div class="line">    <span class="keyword">else</span>&#123;  </div><div class="line">        updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,mid,v);  </div><div class="line">        updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,mid+<span class="number">1</span>,y,v);  </div><div class="line">    &#125;  	</div><div class="line">	pushup(p,l,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	pushdown(p,l,r);</div><div class="line">	<span class="keyword">if</span>(l==r)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid);  build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> n=read(),m=read();  relord(<span class="number">1</span>,<span class="number">1</span>,n);  build(<span class="number">1</span>,<span class="number">1</span>,n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> opt=read(),x=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(tr[<span class="number">1</span>].maxx&gt;=x)&#123;</div><div class="line">				<span class="keyword">int</span> t=ask(<span class="number">1</span>,<span class="number">1</span>,n,x);</div><div class="line">				updata(<span class="number">1</span>,<span class="number">1</span>,n,t,t+x<span class="number">-1</span>,<span class="number">1</span>);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,t);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"0"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;<span class="keyword">int</span> y=read();updata(<span class="number">1</span>,<span class="number">1</span>,n,x,x+y<span class="number">-1</span>,<span class="number">0</span>);&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1023】cactus仙人掌图]]></title>
      <url>/2017/03/19/1023/</url>
      <content type="html"><![CDATA[<ul>
<li>仙人掌系列第一题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1023" target="_blank" rel="external">AC通道</a></p>
<p>求仙人掌直径，仙人掌经典问题之一。</p>
<p>在仙人掌上做dp即可。</p>
<p>错误记录：dfs缩环过程变量名打错，查了一个小时</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,m,cnt,bcnt,top,ans,dfs_clock,len(<span class="number">1</span>),Link[MAXN],dfn[MAXN],f[MAXN],lenth[MAXN],dis[MAXN],q[MAXN&lt;&lt;<span class="number">1</span>],p[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ring[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=v;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	dfn[x]=++dfs_clock;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		<span class="keyword">if</span>(!dfn[e[i].y])  q[++top]=i,dfs(e[i].y,x),--top;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(dfn[e[i].y]&lt;dfn[x])&#123;</div><div class="line">			ring[++bcnt].push_back(i);</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=top;j;--j)&#123;</div><div class="line">				<span class="keyword">if</span>(e[q[j]].y==e[i].y)  <span class="keyword">break</span>;</div><div class="line">				ring[bcnt].push_back(q[j]);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=bcnt;++k)&#123;</div><div class="line">		<span class="keyword">int</span> size=ring[k].size(),top=e[ring[k][<span class="number">0</span>]].y;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size;++i)&#123;</div><div class="line">			<span class="keyword">int</span> temp=e[ring[k][i]].y;  </div><div class="line">			lenth[k]+=e[ring[k][i]].v;  dis[i+<span class="number">1</span>]=lenth[k];</div><div class="line">			e[ring[k][i]].y=e[ring[k][i]^<span class="number">1</span>].y=<span class="number">0</span>;</div><div class="line">			ring[k][i]=temp;</div><div class="line">		&#125;insert(++cnt,top,<span class="number">0</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;size;++i)  insert(ring[k][i],cnt,min(dis[i],lenth[k]-dis[i]));</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y&amp;&amp;e[i].y!=fa)&#123;</div><div class="line">		dp(e[i].y,x);</div><div class="line">		<span class="keyword">if</span>(x&lt;=n)  cmax(ans,f[x]+f[e[i].y]+e[i].v);</div><div class="line">		cmax(f[x],f[e[i].y]+e[i].v);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=bcnt;++k)&#123;</div><div class="line">		<span class="keyword">int</span> size=ring[k].size(),top=ring[k][<span class="number">0</span>],temp=f[top];f[top]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;size;++i)  p[i+<span class="number">1</span>]=p[i+size+<span class="number">1</span>]=ring[k][i];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,head=<span class="number">1</span>,tail=<span class="number">0</span>;i&lt;=size*<span class="number">2</span>;++i)&#123;</div><div class="line">			<span class="keyword">while</span>(head&lt;=tail&amp;&amp;i-q[head]&gt;(size&gt;&gt;<span class="number">1</span>)) ++head;</div><div class="line">			<span class="keyword">if</span>(head&lt;=tail)  cmax(ans,i-q[head]+f[p[i]]+f[p[q[head]]]);</div><div class="line">			<span class="keyword">while</span>(head&lt;=tail&amp;&amp;f[p[q[tail]]]-q[tail]&lt;=f[p[i]]-i) --tail;</div><div class="line">			q[++tail]=i;</div><div class="line">		&#125;f[top]=temp;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=cnt=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> T=read(),temp=read();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>,t;j&lt;T;++j) insert((t=read()),temp,<span class="number">1</span>),temp=t;</div><div class="line">	&#125;</div><div class="line">	dfs(<span class="number">1</span>,<span class="number">0</span>);  build();  dp(<span class="number">1</span>,<span class="number">0</span>);  dp();</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 仙人掌 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2659】算不出的算式]]></title>
      <url>/2017/03/16/2659/</url>
      <content type="html"><![CDATA[<ul>
<li>数形结合好题一道<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2659" target="_blank" rel="external">AC通道</a></p>
<p>刚看到这道题的时候，我是懵逼的，这式子根本无法下手啊</p>
<p>难道是真· 欧几里得？或者维护数值之类的奇淫技巧？</p>
<p>然后看到了题解，真是妙啊，居然是数形结合</p>
<p>注意到 $\frac{p}{q}$ 可是看成一条直线的斜率，那么 $\sum_{k=1}^{\frac{p-1}{2}}[\frac{kp}{q}]$ 就可以看成直线 $y=\frac{p}{q}x与x=\frac{p-1}{2}$ 围成的三角形中整数点的数量</p>
<p>所以 $ans=\frac{(p-1)(q-1)}{4}$ </p>
<p>注意当 $p=q$ 时，直线上的点应该算两遍，$ans=\frac{p^2-1}{4}$</p>
<p>真是妙啊，蒟蒻完全没有想到应该这样做</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> q=read(),p=read();</div><div class="line">	<span class="keyword">if</span>(p==q)  <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,((ll)p*p<span class="number">-1</span>)&gt;&gt;<span class="number">2</span>);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ll)(p<span class="number">-1</span>)*(q<span class="number">-1</span>)&gt;&gt;<span class="number">2</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【暂时保密】]]></title>
      <url>/2017/03/16/3996/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<script>
    if("yxlm0824"==prompt("Please input password"))
    {
        alert("Right");
    }
    else
    {
        alert("Wrong");
        location="http://chty.me";
    }
</script>

<p>【bzoj3996】线性代数</p>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3996" target="_blank" rel="external">AC通道</a></p>
<p>我们知道 $(A \times B -C) \times A^T = A \times B \times A^T - C \times A^T$</p>
<p>我们可以考虑有n个物品，每个物品选不选对应A中每个位置是1还是0 </p>
<p>那么行向量C可以看做每个物品的代价，而矩阵B可以看做同时选择某两个物品时的收益 </p>
<p>那么这个模型就被我们直接分析出来了，网络流走起</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,rel;&#125;e[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,len,ans,cnt,S,T,Link[MAXN],id[MAXN],level[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].rel=len+<span class="number">1</span>;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;e[len].rel=len<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front(); q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">			<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)&#123;</div><div class="line">				q.push(e[i].y);</div><div class="line">				level[e[i].y]=level[x]+<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))</div><div class="line">				e[i].v-=d,e[e[i].rel].v+=d,maxflow+=d;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  S=<span class="number">0</span>;  T=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</div><div class="line">		<span class="keyword">int</span> x=++cnt,v=read();  insert(S,x,v); ans+=v; </div><div class="line">		<span class="keyword">if</span>(!id[i])  id[i]=++cnt;</div><div class="line">		<span class="keyword">if</span>(!id[j])  id[j]=++cnt;</div><div class="line">		insert(x,id[i],INF);  insert(x,id[j],INF);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) insert(id[i],T,read());</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>; <span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans-=d;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3993】星际战争]]></title>
      <url>/2017/03/16/3993/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3993" target="_blank" rel="external">AC通道</a></p>
<p>二分答案+最大流验证</p>
<p>检验的条件是所有连向T的边满流</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 510</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1e9</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,rel;<span class="keyword">double</span> v;&#125;e[MAXN*MAXN*<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,m,S,T,len,sum,a[MAXN],b[MAXN],Map[MAXN][MAXN],level[MAXN],Link[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">double</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].rel=len+<span class="number">1</span>;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;e[len].rel=len<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front();  q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">			<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v&gt;eps)&#123;</div><div class="line">				q.push(e[i].y);</div><div class="line">				level[e[i].y]=level[x]+<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">double</span> flow)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">double</span> maxflow=<span class="number">0</span>,d=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow-flow&lt;eps;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v&gt;eps)</div><div class="line">			<span class="keyword">if</span>((d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))&gt;eps)</div><div class="line">				e[i].v-=d,e[e[i].rel].v+=d,maxflow+=d;</div><div class="line">	<span class="keyword">if</span>(maxflow&lt;eps)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;len=<span class="number">0</span>;<span class="built_in">memset</span>(Link,<span class="number">0</span>,<span class="keyword">sizeof</span>(Link));&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> x)</span></span>&#123;</div><div class="line">	S=<span class="number">0</span>;  T=n+m+<span class="number">1</span>;  pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  insert(i+m,T,(<span class="keyword">double</span>)a[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)  insert(S,i,(<span class="keyword">double</span>)x*b[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">if</span>(Map[i][j]) insert(i,j+m,INF);</div><div class="line">	<span class="keyword">double</span> d=<span class="number">0</span>,ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(bfs()) <span class="keyword">while</span>((d=MAXFLOW(S,INF))&gt;eps)  ans+=d;</div><div class="line">	<span class="keyword">return</span> <span class="built_in">fabs</span>(sum-ans)&lt;eps;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read(),sum+=a[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)  b[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)Map[i][j]=read();</div><div class="line">	<span class="keyword">double</span> l=<span class="number">0</span>,r=INF;</div><div class="line">	<span class="keyword">while</span>(l+eps&lt;r)&#123;</div><div class="line">		<span class="keyword">double</span> mid=(l+r)/<span class="number">2</span>;</div><div class="line">		<span class="keyword">if</span>(check(mid))  r=mid;</div><div class="line">		<span class="keyword">else</span> l=mid;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.6lf\n"</span>,check(l)?l:r);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 二分 </tag>
            
            <tag> 网络流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4435】Juice Junctions]]></title>
      <url>/2017/03/15/4435/</url>
      <content type="html"><![CDATA[<ul>
<li>分治最小割系列第三题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4435" target="_blank" rel="external">AC通道</a></p>
<p>这道题题中有流量不大于3的限制，所以我们可以愉快地使用哈希大法将分治复杂度由O(n^2)降到O(n)</p>
<p>用hash[i][j]表示流量为j时，i节点是否与S联通即可</p>
<p>由于这道题中边数较少，KM算法跑得飞快，而我写的dinic只能垫底了。。。</p>
<p>小技巧：做到这题我突然发现用来求vis数组的dfs过程是不需要的，level数组就是vis数组，我真是一个制杖</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 3010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,rel;&#125;e[<span class="number">9010</span>];</div><div class="line"><span class="keyword">int</span> n,m,len,ans,S,T,value(<span class="number">1</span>),Link[MAXN],level[MAXN],a[MAXN],temp[MAXN],hash[MAXN][<span class="number">5</span>];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].rel=len+<span class="number">1</span>;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=v;e[len].rel=len<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front(); q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">			<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)&#123;</div><div class="line">				q.push(e[i].y);</div><div class="line">				level[e[i].y]=level[x]+<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))&#123;</div><div class="line">				e[i].v-=d; e[e[i].rel].v+=d; maxflow+=d;</div><div class="line">			&#125;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)  <span class="keyword">return</span>;</div><div class="line">	S=a[l];  T=a[r];  <span class="keyword">int</span> d=<span class="number">0</span>,ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i) e[i].v=e[e[i].rel].v=(e[i].v+e[e[i].rel].v)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF))  ans+=d;</div><div class="line">	value*=<span class="number">233</span>; <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(level[i]==<span class="number">-1</span>) hash[i][ans]+=value;</div><div class="line">	<span class="keyword">int</span> ta=l,tb=r;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(level[a[i]]&gt;=<span class="number">0</span>)  temp[ta++]=a[i];</div><div class="line">		<span class="keyword">else</span> temp[tb--]=a[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i)  a[i]=temp[i];</div><div class="line">	solve(l,ta<span class="number">-1</span>);  solve(tb+<span class="number">1</span>,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y,<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=i;</div><div class="line">	solve(<span class="number">1</span>,n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">3</span>;++k)</div><div class="line">		<span class="keyword">if</span>(hash[i][k]!=hash[j][k])  &#123;ans+=k;  <span class="keyword">break</span>;&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 最小割 </tag>
            
            <tag> 分治 </tag>
            
            <tag> 哈希 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4519】不同的最小割]]></title>
      <url>/2017/03/15/4519/</url>
      <content type="html"><![CDATA[<ul>
<li>分治最小割系列第二题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4519" target="_blank" rel="external">AC通道</a></p>
<p>有了上一题的铺垫，这道题的做法是显然的</p>
<p>几分钟写完代码后就1A了，真是舒畅啊</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 855</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,rel;&#125;e[<span class="number">17010</span>];</div><div class="line"><span class="keyword">int</span> n,m,len,S,T,cnt,level[MAXN],Link[MAXN],val[MAXN],vis[MAXN],temp[MAXN],a[MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].rel=len+<span class="number">1</span>;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=v;e[len].rel=len<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S); level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front();  q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].v&amp;&amp;level[e[i].y]==<span class="number">-1</span>)</div><div class="line">			q.push(e[i].y),level[e[i].y]=level[x]+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))</div><div class="line">				e[i].v-=d,e[e[i].rel].v+=d,maxflow+=d;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	vis[x]=<span class="number">1</span>;<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(e[i].v&amp;&amp;!vis[e[i].y]) dfs(e[i].y);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)  <span class="keyword">return</span>;</div><div class="line">	S=a[l];  T=a[r];  <span class="keyword">int</span> ans=<span class="number">0</span>,d=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i) e[i].v=e[e[i].rel].v=(e[i].v+e[e[i].rel].v)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans+=d;</div><div class="line">	val[++cnt]=ans;  <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis)); </div><div class="line">	dfs(S);  <span class="keyword">int</span> ta=l,tb=r;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(vis[a[i]])  temp[ta++]=a[i];</div><div class="line">		<span class="keyword">else</span> temp[tb--]=a[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i) a[i]=temp[i];</div><div class="line">	solve(l,ta<span class="number">-1</span>);  solve(tb+<span class="number">1</span>,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),v=read();</div><div class="line">		insert(x,y,v);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=i;</div><div class="line">	solve(<span class="number">1</span>,n);  sort(val+<span class="number">1</span>,val+cnt+<span class="number">1</span>);  <span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  <span class="keyword">if</span>(val[i]!=val[i<span class="number">-1</span>]) ans++;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 最小割 </tag>
            
            <tag> 分治 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2229】最小割]]></title>
      <url>/2017/03/15/2229/</url>
      <content type="html"><![CDATA[<ul>
<li>分治最小割系列第一题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2229" target="_blank" rel="external">AC通道</a></p>
<p>分治最小割算法，用于求最小割树，即本质不同的最小割组成的树</p>
<p>结论如下：一张n个节点的图最多有有n-1个本质不同的最小割（我不会证明）</p>
<p>我也不知道这样做为什么是正确的，网上找不到任何证明资料</p>
<p>不过在OI界，证明是用来装逼的，会做题就行了吧QAQ</p>
<p>这里get到一个小技巧：令len的初值为1，就能用i^1求出i的反向边编号</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 350</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v;&#125;e[<span class="number">6010</span>];</div><div class="line"><span class="keyword">int</span> n,m,len,S,T,Link[MAXN],a[MAXN],vis[MAXN],level[MAXN],temp[MAXN],val[MAXN][MAXN];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	vis[x]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(e[i].v&amp;&amp;!vis[e[i].y])  dfs(e[i].y);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front(); q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">			<span class="keyword">if</span>(level[e[i].y]==<span class="number">-1</span>&amp;&amp;e[i].v)&#123;</div><div class="line">				q.push(e[i].y);</div><div class="line">				level[e[i].y]=level[x]+<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))</div><div class="line">				e[i].v-=d,e[i^<span class="number">1</span>].v+=d,maxflow+=d;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l==r)  <span class="keyword">return</span>;</div><div class="line">	S=a[l]; T=a[r];  <span class="keyword">int</span> d=<span class="number">0</span>,ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i)  e[i].v=e[i^<span class="number">1</span>].v=(e[i].v+e[i^<span class="number">1</span>].v)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans+=d;</div><div class="line">	<span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));  dfs(S);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(vis[i])&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">if</span>(!vis[j])</div><div class="line">			val[i][j]=val[j][i]=min(val[i][j],ans);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> ta=l,tb=r;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(vis[a[i]]) temp[ta++]=a[i];</div><div class="line">		<span class="keyword">else</span> temp[tb--]=a[i];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=l;i&lt;=r;++i) a[i]=temp[i];</div><div class="line">	solve(l,ta<span class="number">-1</span>);  solve(tb+<span class="number">1</span>,r); </div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	len=<span class="number">1</span>;  </div><div class="line">	<span class="built_in">memset</span>(Link,<span class="number">0</span>,<span class="keyword">sizeof</span>(Link));</div><div class="line">	<span class="built_in">memset</span>(val,<span class="number">10</span>,<span class="keyword">sizeof</span>(val));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();  pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=i;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),v=read();</div><div class="line">		insert(x,y,v); insert(y,x,v);</div><div class="line">	&#125;</div><div class="line">	solve(<span class="number">1</span>,n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),ans=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">			<span class="keyword">if</span>(val[i][j]&lt;=x)  ans++;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 最小割 </tag>
            
            <tag> 分治 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4443】小凸玩矩阵]]></title>
      <url>/2017/03/15/4443/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4443" target="_blank" rel="external">AC通道</a></p>
<p>这是随机程序摇出来的第三道水题</p>
<p>看到题面，很容易想到二分答案，那么怎么实现判定呢？</p>
<p>看到行列限制，我们很容易想到网络流，所以我们把第k大转换成第n-k+1小</p>
<p>如果a[i][j]&lt;=mid，就从i向j连边，跑最大流</p>
<p>如果maxflow&gt;=n-k+1，说明当前mid合法</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 510</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000000</span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,rel;&#125;e[MAXN*MAXN*<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,m,k,len,S,T,Link[MAXN],level[MAXN],a[<span class="number">255</span>][<span class="number">255</span>];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].rel=len+<span class="number">1</span>;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;e[len].rel=len<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S);  level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front(); q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">			<span class="keyword">if</span>(e[i].v&amp;&amp;level[e[i].y]==<span class="number">-1</span>)&#123;</div><div class="line">				q.push(e[i].y);</div><div class="line">				level[e[i].y]=level[x]+<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,maxflow=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(level[e[i].y]==level[x]+<span class="number">1</span>&amp;&amp;e[i].v)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))</div><div class="line">				e[i].v-=d,e[e[i].rel].v+=d,maxflow+=d;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	len=<span class="number">0</span>;</div><div class="line">	<span class="built_in">memset</span>(Link,<span class="number">0</span>,<span class="keyword">sizeof</span>(Link));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	pre();  S=<span class="number">0</span>;  T=n+m+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)</div><div class="line">		<span class="keyword">if</span>(a[i][j]&lt;=x) insert(i,j+n,<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  insert(S,i,<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)  insert(i+n,T,<span class="number">1</span>);</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>,ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans+=d;</div><div class="line">	<span class="keyword">return</span> ans&gt;=n-k+<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  k=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j) a[i][j]=read();</div><div class="line">	<span class="keyword">int</span> l=<span class="number">1</span>,r=INF;</div><div class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(check(mid))  r=mid;</div><div class="line">		<span class="keyword">else</span> l=mid;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,check(l)?l:r);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 二分 </tag>
            
            <tag> 最大流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4543】Hotel加强版]]></title>
      <url>/2017/03/15/4543/</url>
      <content type="html"><![CDATA[<ul>
<li>长链剖分优化树形dp真是一颗赛艇</li>
</ul>
<ul>
<li>获得成就：第一次使用指针<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4543" target="_blank" rel="external">AC通道</a></p>
<p>首先我们设：</p>
<blockquote>
<p>$f[i][j]$ 表示以 $i$ 为根的子树中与 $i$ 的距离为 $j$ 的点的个数</p>
<hr>
<p>$g[i][j]$ 表示以 $i$ 为根的子树内有 $g[i][j]$ 对点深度相同，设 $t$ 为 $lca(x,y)$ ，且满足 $dis(x,t)=dis(y,t)=d$ 且 $dis(i,t)=d-j$ </p>
<hr>
</blockquote>
<p>则状态转移方程(必须按顺序转移)：</p>
<blockquote>
<p>(1)$f[x][0]=1$</p>
<hr>
<p>(2)$ans+=g[x][0]$</p>
<hr>
<p>(3)$ans+=f[x][i-1]*g[y][i]+g[x][i+1]*f[y][i]$</p>
<hr>
<p>(4)$g[x][i-1]+=g[y][i]$</p>
<hr>
<p>(5)$g[x][i+1]+=f[x][i+1]*f[y][i]$</p>
<hr>
<p>(6)$f[x][i+1]+=f[y][i]$</p>
<hr>
</blockquote>
<p>然后我们发现状态数是 $O(n^2)$ 级别的，怎么办？</p>
<p>下面介绍一种套路：长链剖分优化树形 $dp$ </p>
<p>我们发现状态转移方程中的(4)和(6)在第一次转移时是可以 $O(1)$ 实现的</p>
<p>那么我们将树进行长链剖分，对于重儿子，我们直接进行 $O(1)$ 转移，对于轻儿子，只能暴力转移了</p>
<p>可以证明这样做的时间复杂度是 $O(n)$ 的</p>
<p>至于空间复杂度，我们使用动态内存分配即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,len,Link[MAXN],deep[MAXN],bot[MAXN];</div><div class="line">ll ans,*p,memp[MAXN*<span class="number">5</span>],*f[MAXN],*g[MAXN];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	bot[x]=x;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;<span class="comment">//长链剖分</span></div><div class="line">		deep[e[i].y]=deep[x]+<span class="number">1</span>; dfs(e[i].y,x);</div><div class="line">		<span class="keyword">if</span>(deep[bot[e[i].y]]&gt;deep[bot[x]]) bot[x]=bot[e[i].y];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;<span class="comment">//动态内存分配</span></div><div class="line">		<span class="keyword">if</span>(bot[x]==bot[e[i].y]&amp;&amp;x!=<span class="number">1</span>)  <span class="keyword">continue</span>;</div><div class="line">		p+=deep[bot[e[i].y]]-deep[x]+<span class="number">1</span>;</div><div class="line">		f[bot[e[i].y]]=p;  g[bot[e[i].y]]=(p+=<span class="number">1</span>);</div><div class="line">		p+=(deep[bot[e[i].y]]-deep[x])&lt;&lt;<span class="number">1</span>|<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		dp(e[i].y,x);</div><div class="line">		<span class="keyword">if</span>(bot[x]==bot[e[i].y])f[x]=f[e[i].y]<span class="number">-1</span>,g[x]=g[e[i].y]+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	f[x][<span class="number">0</span>]=<span class="number">1</span>; ans+=g[x][<span class="number">0</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		<span class="keyword">if</span>(bot[x]==bot[e[i].y])  <span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=deep[bot[e[i].y]]-deep[x];++j)</div><div class="line">			ans+=f[x][j<span class="number">-1</span>]*g[e[i].y][j]+g[x][j+<span class="number">1</span>]*f[e[i].y][j];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=deep[bot[e[i].y]]-deep[x];++j)&#123;</div><div class="line">			g[x][j<span class="number">-1</span>]+=g[e[i].y][j];</div><div class="line">			g[x][j+<span class="number">1</span>]+=f[e[i].y][j]*f[x][j+<span class="number">1</span>];</div><div class="line">			f[x][j+<span class="number">1</span>]+=f[e[i].y][j];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y); insert(y,x);</div><div class="line">	&#125;</div><div class="line">	p=memp+<span class="number">1</span>;  deep[<span class="number">1</span>]=<span class="number">1</span>;  </div><div class="line">	dfs(<span class="number">1</span>,<span class="number">0</span>);  dp(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 树形dp </tag>
            
            <tag> bzoj </tag>
            
            <tag> 树链剖分 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2160】拉拉队排练]]></title>
      <url>/2017/03/14/2160/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2160" target="_blank" rel="external">AC通道</a></p>
<p>这是随机程序摇出来的第二道水题。。。。。。</p>
<p>直接先上manacher，然后统计出cnt[i]数组表示长度为i的回文串的数量</p>
<p>这里注意在这道题中，偶数长度的串不算回文串（把我坑的好惨）</p>
<p>然后用k随便搞搞快速幂就行了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2000010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">19930726</span>;</div><div class="line"><span class="keyword">int</span> len[MAXN],cnt[MAXN];</div><div class="line">ll n,k,ans(<span class="number">1</span>);</div><div class="line"><span class="keyword">char</span> a[MAXN],b[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">fast</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="function">ll <span class="title">mul</span><span class="params">(<span class="number">1</span>)</span></span>;<span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>,a=a*a%mod)<span class="keyword">if</span>(b&amp;<span class="number">1</span>)mul=mul*a%mod;<span class="keyword">return</span> mul;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,a+<span class="number">1</span>); b[<span class="number">0</span>]=<span class="string">'&amp;'</span>;  </div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  b[i*<span class="number">2</span><span class="number">-1</span>]=<span class="string">'#'</span>,b[i*<span class="number">2</span>]=a[i];</div><div class="line">	b[n*<span class="number">2</span>+<span class="number">1</span>]=<span class="string">'#'</span>;  b[n*<span class="number">2</span>+<span class="number">2</span>]=<span class="string">'$'</span>;</div><div class="line">	n=n*<span class="number">2</span>+<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">manacher</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> pos=<span class="number">0</span>,mx=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		len[i]=i&lt;mx?min(len[pos*<span class="number">2</span>-i],mx-i):<span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span>(b[i-len[i]]==b[i+len[i]])  len[i]++;</div><div class="line">		<span class="keyword">if</span>(i+len[i]&gt;mx)  mx=i+len[i],pos=i;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  k=read();  <span class="keyword">int</span> flag=<span class="number">0</span>;</div><div class="line">	init();  manacher();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  <span class="keyword">if</span>(!(i&amp;<span class="number">1</span>)) cnt[len[i]<span class="number">-1</span>]++;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;<span class="number">2</span>;--i)  cnt[i<span class="number">-2</span>]+=cnt[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;--i)<span class="keyword">if</span>(cnt[i])&#123;</div><div class="line">		<span class="keyword">if</span>(k&gt;cnt[i])  k-=cnt[i],ans=ans*fast(i,cnt[i])%mod;</div><div class="line">		<span class="keyword">else</span> &#123;ans=ans*fast(i,k)%mod;flag=<span class="number">1</span>;<span class="keyword">break</span>;&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(!flag)  <span class="built_in">printf</span>(<span class="string">"-1"</span>);</div><div class="line">	<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> manacher </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1517】Met]]></title>
      <url>/2017/03/14/1517/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1517" target="_blank" rel="external">AC通道</a></p>
<p>上午被子祯的题虐了一通，下午便去做一发水题。</p>
<p>想知道我是怎么选中这道题的？写一个随机数生成器就行了。。。。。。</p>
<p>这是一道结论题。</p>
<p>首先我们按照拓扑序将图分层，对于一个点，我们都可以从它的子树中选出一个点使得这个点被覆盖。</p>
<p>考虑每一层，我们最多可以选$2l$个点，由于每层的节点数必然是单调递增的，所以假设在第i层选了x个点，那么i-1层一定可以选$min(x,cnt[i-1])$个点</p>
<p>所以我们只需要拓扑排序统计每层的节点数即可</p>
<p>结论就是$ans=\sum min(cnt[i],l*2)$   (cnt[i]表示第i层节点数)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,len,ans,Link[MAXN],d[MAXN],q[MAXN],cnt[MAXN],level[MAXN];</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;d[y]++;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">topsort</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(d[i]==<span class="number">1</span>) q[++tail]=i;</div><div class="line">	<span class="keyword">while</span>(++head&lt;=tail)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[q[head]];i;i=e[i].next)&#123;</div><div class="line">			<span class="keyword">if</span>(--d[e[i].y]==<span class="number">1</span>)&#123;</div><div class="line">				q[++tail]=e[i].y;</div><div class="line">				level[q[tail]]=level[q[head]]+<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y);  insert(y,x);</div><div class="line">	&#125;</div><div class="line">	topsort();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  cnt[level[i]]++;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;cnt[i];++i)  ans+=min(m*<span class="number">2</span>,cnt[i]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 拓扑排序 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3926】诸神眷顾的幻想乡]]></title>
      <url>/2017/03/13/3926/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p>广义后缀自动机真是exciting</p>
<p>只需要从叶子节点遍历出20颗trie树，然后把这些trie树建成SAM即可</p>
<p>至于把trie树建成SAM，只需要每次从root插入就行了</p>
<p>我也不知道为什么这么做是对的，回头要啃一下2015集训队论文</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 4000010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,len,cnt(<span class="number">1</span>),Link[MAXN],v[MAXN],d[MAXN],mx[MAXN],par[MAXN],tr[MAXN][<span class="number">15</span>];</div><div class="line">ll ans;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;d[y]++;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> np=++cnt; mx[np]=mx[p]+<span class="number">1</span>;</div><div class="line">	<span class="keyword">while</span>(p&amp;&amp;!tr[p][x])  tr[p][x]=np,p=par[p];</div><div class="line">	<span class="keyword">if</span>(!p)  par[np]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> q=tr[p][x];</div><div class="line">		<span class="keyword">if</span>(mx[q]==mx[p]+<span class="number">1</span>) par[np]=q;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> nq=++cnt; mx[nq]=mx[p]+<span class="number">1</span>;</div><div class="line">			<span class="built_in">memcpy</span>(tr[nq],tr[q],<span class="keyword">sizeof</span>(tr[q]));</div><div class="line">			par[nq]=par[q];  par[q]=par[np]=nq;</div><div class="line">			<span class="keyword">while</span>(tr[p][x]==q&amp;&amp;p)  tr[p][x]=nq,p=par[p];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> np;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa,<span class="keyword">int</span> last)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=extend(last,v[x]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(e[i].y!=fa) dfs(e[i].y,x,now);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  v[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y); insert(y,x);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(d[i]==<span class="number">1</span>)dfs(i,<span class="number">0</span>,<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i) ans+=mx[i]-mx[par[i]];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 广义后缀自动机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4516】生成魔咒]]></title>
      <url>/2017/03/13/4516/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得装载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4516" target="_blank" rel="external">AC通道</a></p>
<p>我们知道统计本质不同的子串个数是$SAM$的经典应用之一</p>
<p>这道题要求在线统计，且字符集大小为$1e9$，怎么办？</p>
<p>先解决字符集的问题，我们只需要将 tr[][] 数组改成$map$即可</p>
<p>至于统计本质不同的子串数，那就是$\sum max(x)-min(x)+1$</p>
<p>因为$min(x)=max(parent(x))+1$，所以也就是求 $\sum max(x)-max(parent(x))$</p>
<p>在线统计时，我们每新建一个节点$np$，就统计它的答案即可</p>
<p>在做题的时候，我一直有一个疑问，那就是为什么不统计新建的nq节点的答案呢？</p>
<p>新建节点前：</p>
<blockquote>
<p>(1) $ans(q)=max(q)-max(parent(q))$</p>
</blockquote>
<p>新建$nq$节点后：parent(q)$变成了nq，parent(nq)$变成了parent(q)</p>
<blockquote>
<p>(2) $ans(q)=max(q)-max(nq)$    </p>
<p>(3) $ans(nq)=max(nq)-max(parent(q))$  </p>
</blockquote>
<p>$(2)(3)$两式相加，我们发现新建节点后的$ans(q)+ans(nq)$的答案与新建节点前$ans(q)$是相等的</p>
<p>这就完美的解释了为什么不统计$nq$节点的答案</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">int</span> n,cnt(<span class="number">1</span>),now(<span class="number">1</span>),mx[MAXN],par[MAXN];</div><div class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; tr[MAXN];</div><div class="line">ll ans;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> np=++cnt,p=now;</div><div class="line">	mx[np]=mx[p]+<span class="number">1</span>;  now=np;</div><div class="line">	<span class="keyword">while</span>(p&amp;&amp;!tr[p][x])  tr[p][x]=np,p=par[p];</div><div class="line">	<span class="keyword">if</span>(!p)  par[np]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> q=tr[p][x];</div><div class="line">		<span class="keyword">if</span>(mx[q]==mx[p]+<span class="number">1</span>)  par[np]=q;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> nq=++cnt; mx[nq]=mx[p]+<span class="number">1</span>;</div><div class="line">			tr[nq]=tr[q];</div><div class="line">			par[nq]=par[q];  par[q]=par[np]=nq;</div><div class="line">			<span class="keyword">while</span>(tr[p][x]==q&amp;&amp;p)  tr[p][x]=nq,p=par[p];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	ans+=mx[np]-mx[par[np]];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(); extend(x);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 后缀自动机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2748】音量调节]]></title>
      <url>/2017/03/12/2748/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2748" target="_blank" rel="external">AC通道</a></p>
<p>刷水题的感觉真爽</p>
<p>很普通的dp，随手秒掉</p>
<p>用$f[i][j]$表示前i首曲子能否达到音量j，然后。。。随便转移了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,a[<span class="number">55</span>],f[<span class="number">55</span>][<span class="number">1010</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  f[<span class="number">0</span>][read()]=<span class="number">1</span>;  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=m;++j)&#123;</div><div class="line">			<span class="keyword">if</span>(j-a[i]&gt;=<span class="number">0</span>&amp;&amp;f[i<span class="number">-1</span>][j-a[i]])  f[i][j]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(j+a[i]&lt;=m&amp;&amp;f[i<span class="number">-1</span>][j+a[i]])  f[i][j]=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=m;i;--i) <span class="keyword">if</span>(f[n][i]) &#123;<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);  <span class="keyword">return</span> <span class="number">0</span>;&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"-1\n"</span>); </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1044】木棍分割]]></title>
      <url>/2017/03/12/1044/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1044" target="_blank" rel="external">AC通道</a></p>
<p>第一问二分答案，随便验证</p>
<blockquote>
<p>最大的最小，有一种二分的冲动</p>
</blockquote>
<p>第二问，蒟蒻无耻的偷看了题解。。。</p>
<p>用$f[i][j]$表示前j根木棍分成i块的方案数</p>
<p>则$f[i][j]= \sum f[i-1][k]$  (sum[j]-sum[k]&gt;=mx)</p>
<p>滚动数组优化空间，单调性优化时间即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 10007</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,mx,ans,sum[MAXN],a[MAXN],f[<span class="number">2</span>][MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> temp=<span class="number">0</span>,cnt=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		temp+=a[i];</div><div class="line">		<span class="keyword">if</span>(temp&gt;x)  temp=a[i],cnt++;</div><div class="line">		<span class="keyword">if</span>(temp&gt;x)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> cnt&lt;=m;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  <span class="keyword">int</span> l=<span class="number">0</span>,r=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read(),r+=a[i];</div><div class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(check(mid))  r=mid;</div><div class="line">		<span class="keyword">else</span> l=mid;</div><div class="line">	&#125;</div><div class="line">	mx=check(l)?l:r;</div><div class="line">	f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)  a[i]+=a[i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m+<span class="number">1</span>;++i)&#123;</div><div class="line">		<span class="keyword">int</span> now=(i&amp;<span class="number">1</span>),last=(now^<span class="number">1</span>),k=<span class="number">0</span>;  sum[<span class="number">0</span>]=f[last][<span class="number">0</span>];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)  sum[j]=(sum[j<span class="number">-1</span>]+f[last][j])%mod;</div><div class="line">		f[now][<span class="number">0</span>]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n;++j)&#123;</div><div class="line">			<span class="keyword">while</span>(a[j]-a[k]&gt;mx)  ++k;</div><div class="line">			f[now][j]=(sum[j<span class="number">-1</span>]-(k?sum[k<span class="number">-1</span>]:<span class="number">0</span>))%mod;</div><div class="line">		&#125;</div><div class="line">		ans=(ans+f[now][n])%mod;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,mx,(ans+mod)%mod);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> dp </tag>
            
            <tag> 二分 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1042】硬币购物]]></title>
      <url>/2017/03/12/1042/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1042" target="_blank" rel="external">AC通道</a></p>
<p>看到只有四种面额的硬币，以及每种硬币数量的限制，很容易想到容斥</p>
<p>我们用f[i]表示总面额为i且不考虑数量限制的方案数</p>
<p>则f[i]可以预处理出来</p>
<p>容斥时只需要令不合法的硬币数量为d[i]+1，然后计算f[s-(d[i]+1)*c[i]]即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e5</span>,D=<span class="number">50</span>;</div><div class="line"><span class="keyword">int</span> s,a[<span class="number">10</span>],c[<span class="number">10</span>],d[<span class="number">10</span>];</div><div class="line">ll f[MAXN+D];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	f[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;++i)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=c[i];j&lt;=MAXN;++j)</div><div class="line">			f[j]+=f[j-c[i]];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	ll ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;++i)  d[i]=read();  s=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;<span class="number">4</span>);++i)&#123;</div><div class="line">		<span class="keyword">int</span> cnt=<span class="number">0</span>,temp=s;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">4</span>;++j)<span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))&amp;i)a[++cnt]=j;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j) temp-=(d[a[j]]+<span class="number">1</span>)*c[a[j]];</div><div class="line">		<span class="keyword">if</span>(temp&lt;<span class="number">0</span>)  <span class="keyword">continue</span>;</div><div class="line">		ans+=(cnt&amp;<span class="number">1</span>)?-f[temp]:f[temp];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;++i)  c[i]=read();  pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T)  solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 容斥原理 </tag>
            
            <tag> dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4720/uoj#262】换教室]]></title>
      <url>/2017/03/12/4720/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4720" target="_blank" rel="external">AC通道</a></p>
<p>当时在考场上没有学过概率与期望，以至于看不懂样例，只能写k=1的情况，拿了4分</p>
<p>现在再看这道题就很简单了</p>
<p>floyd预处理出dis[x][y]</p>
<p>直接dp就行了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,v,e,c[MAXN],d[MAXN],dis[<span class="number">305</span>][<span class="number">305</span>];</div><div class="line"><span class="keyword">double</span> ans,f[MAXN][MAXN][<span class="number">2</span>],p[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=v;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=v;++j)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d "</span>,dis[i][j]);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  v=read();  e=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  c[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  d[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;p[i]);</div><div class="line">	<span class="built_in">memset</span>(dis,<span class="number">10</span>,<span class="keyword">sizeof</span>(dis));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=e;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),v=read();</div><div class="line">		cmin(dis[x][y],v);  cmin(dis[y][x],v);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=v;++i)  dis[i][i]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=v;++k)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=v;++i)</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=v;++j)</div><div class="line">				<span class="keyword">if</span>(dis[i][k]+dis[k][j]&lt;dis[i][j]) dis[i][j]=dis[i][k]+dis[k][j];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=v;++i)  dis[<span class="number">0</span>][i]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;++i) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=n;++j) <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=<span class="number">1</span>;++k) f[i][j][k]=<span class="number">1e9</span>;</div><div class="line">	f[<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>]=f[<span class="number">1</span>][<span class="number">1</span>][<span class="number">1</span>]=<span class="number">0</span>;  ans=<span class="number">1e9</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=m;++j)&#123;</div><div class="line">			f[i][j][<span class="number">0</span>]=min(f[i<span class="number">-1</span>][j][<span class="number">0</span>]+dis[c[i]][c[i<span class="number">-1</span>]],f[i<span class="number">-1</span>][j][<span class="number">1</span>]+dis[c[i]][c[i<span class="number">-1</span>]]*(<span class="number">1</span>-p[i<span class="number">-1</span>])+dis[c[i]][d[i<span class="number">-1</span>]]*p[i<span class="number">-1</span>]);</div><div class="line">			<span class="keyword">if</span>(j&gt;=<span class="number">1</span>) f[i][j][<span class="number">1</span>]=min(f[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">0</span>]+dis[d[i]][c[i<span class="number">-1</span>]]*p[i]+dis[c[i]][c[i<span class="number">-1</span>]]*(<span class="number">1</span>-p[i]),</div><div class="line">			f[i<span class="number">-1</span>][j<span class="number">-1</span>][<span class="number">1</span>]+dis[c[i]][d[i<span class="number">-1</span>]]*p[i<span class="number">-1</span>]*(<span class="number">1</span>-p[i])+dis[c[i]][c[i<span class="number">-1</span>]]*(<span class="number">1</span>-p[i])*(<span class="number">1</span>-p[i<span class="number">-1</span>])+dis[d[i]][c[i<span class="number">-1</span>]]*p[i]*(<span class="number">1</span>-p[i<span class="number">-1</span>])+dis[d[i]][d[i<span class="number">-1</span>]]*p[i]*p[i<span class="number">-1</span>]);</div><div class="line">		&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">1</span>;++j)cmin(ans,f[n][i][j]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 最短路 </tag>
            
            <tag> uoj </tag>
            
            <tag> 概率dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3270】博物馆]]></title>
      <url>/2017/03/12/3270/</url>
      <content type="html"><![CDATA[<ul>
<li>高斯消元重修系列第五题<a id="more"></a></li>
</ul>
<p>有了上一题【驱赶猪猡】的经验，这道题的大致做法就很显然了</p>
<p>但是，这道题是两个人，怎么办？</p>
<p>蒟蒻想不出解决方法，于是只能去膜拜POPOQQQ大爷的方法：</p>
<p>用一个状态表示一个点对(x,y)</p>
<p>这样在转移时可以用点之间的转移推出状态间的转移(具体看代码)</p>
<p>在找答案时可以直接找(i,i)对应的状态的答案</p>
<p>时间复杂度(n^6)</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-8</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 405</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[<span class="number">805</span>];</div><div class="line"><span class="keyword">int</span> n,m,len,st1,st2,Link[MAXN],d[MAXN];</div><div class="line"><span class="keyword">double</span> p[MAXN],a[MAXN][MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span> </span>&#123;<span class="keyword">return</span> (i<span class="number">-1</span>)*n+j;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();  st1=read();  st2=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y);  insert(y,x);</div><div class="line">		d[x]++;  d[y]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;p[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">1</span>;x&lt;=n;++x)<span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">1</span>;y&lt;=n;++y)<span class="keyword">if</span>(x!=y)&#123;</div><div class="line">		a[get(x,y)][get(x,y)]-=p[x]*p[y];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">			a[get(x,y)][get(e[i].y,y)]-=(<span class="number">1</span>-p[x])/d[x]*p[y];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[y];i;i=e[i].next)</div><div class="line">			a[get(x,y)][get(x,e[i].y)]-=(<span class="number">1</span>-p[y])/d[y]*p[x];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=Link[y];j;j=e[j].next)</div><div class="line">				a[get(x,y)][get(e[i].y,e[j].y)]-=(<span class="number">1</span>-p[x])/d[x]*(<span class="number">1</span>-p[y])/d[y];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n;++i)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;++j)</div><div class="line">			swap(a[i][j],a[j][i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n;++i) a[i][i]+=<span class="number">1</span>;</div><div class="line">	a[get(st1,st2)][n*n+<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">gauss</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,temp;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(temp=now;temp&lt;=n;++temp) <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[temp][i])&gt;eps) <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">if</span>(temp&gt;n) <span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">if</span>(temp!=now) swap(a[temp],a[now]);</div><div class="line">		<span class="keyword">double</span> t=a[now][i];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;++j)  a[now][j]/=t;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">if</span>(j!=now)&#123;</div><div class="line">			<span class="keyword">double</span> t=a[j][i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=i+<span class="number">1</span>;k&lt;=n+<span class="number">1</span>;++k) a[j][k]-=t*a[now][k];</div><div class="line">		&#125;</div><div class="line">		++now;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=now;i&lt;=n;++i) <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[i][n+<span class="number">1</span>])&gt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	gauss(n*n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">printf</span>(<span class="string">"%.6lf "</span>,a[get(i,i)][n*n+<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	init();  solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 高斯消元 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1778】驱逐猪猡]]></title>
      <url>/2017/03/12/1778/</url>
      <content type="html"><![CDATA[<ul>
<li>高斯消元重修系列第四题<a id="more"></a></li>
</ul>
<p>这种题目算是一种讨论题，给了我们很多关于用高斯消元求解带环$dp$的启示</p>
<p>设向量$T(i)=${$x_1,x_2,……,x_n$}表示 $i$ 时刻在点 $x$ 爆炸的概率</p>
<p>我们构造转移矩阵 $E_{i,j}$ 表示从 $j$ 转移到 $i$ 的概率</p>
<p>则$E_{i,j}=\sum (1-\frac{P}{Q}) \times \frac{1}{d_j}$</p>
<p>那么最终的答案向量$ans=\frac{P}{Q} \times T_0 (E^0+E^1+E^2+……)= \frac{P}{Q} \times T_0 \times \frac{I}{I-E}$ (I为单位矩阵)</p>
<p>如果你想用矩阵求逆的话直接做就行了，但是这里我们用高斯消元来做：</p>
<p>把分母移到左边得：$(I-E) \times ans = \frac{P}{Q} \times T_0 \times I$</p>
<p>然后就符合高斯消元的套路了：(I-E)是系数矩阵，ans是答案向量</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-10</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> x,y;&#125;e[<span class="number">50010</span>];</div><div class="line"><span class="keyword">double</span> a[<span class="number">305</span>][<span class="number">305</span>];</div><div class="line"><span class="keyword">int</span> n,m,p,q,d[<span class="number">305</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();  p=read();  q=read();</div><div class="line">	<span class="keyword">double</span> rate=(<span class="keyword">double</span>)p/q;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		e[i].x=read();  e[i].y=read();</div><div class="line">		d[e[i].x]++;  d[e[i].y]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		a[e[i].x][e[i].y]+=(rate<span class="number">-1</span>)/d[e[i].y];</div><div class="line">		a[e[i].y][e[i].x]+=(rate<span class="number">-1</span>)/d[e[i].x];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i][i]+=<span class="number">1.0</span>;</div><div class="line">	a[<span class="number">1</span>][n+<span class="number">1</span>]=rate;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">gauss</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,temp;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(temp=now;temp&lt;=n;++temp) <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[temp][i])&gt;eps) <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">if</span>(temp&gt;n)  <span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">if</span>(temp!=now) swap(a[temp],a[now]);</div><div class="line">		<span class="keyword">double</span> t=a[now][i];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;++j)  a[now][j]/=t;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">if</span>(j!=now)&#123;</div><div class="line">			<span class="keyword">double</span> t=a[j][i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=i+<span class="number">1</span>;k&lt;=n+<span class="number">1</span>;++k) a[j][k]-=t*a[now][k];</div><div class="line">		&#125;</div><div class="line">		++now;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=now;i&lt;=n;++i) <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[i][n+<span class="number">1</span>])&gt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">putout</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">printf</span>(<span class="string">"%.9lf\n"</span>,a[i][n+<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	init(); gauss(); putout();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 高斯消元 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3143】游走]]></title>
      <url>/2017/03/10/3143/</url>
      <content type="html"><![CDATA[<ul>
<li>高斯消元重修系列第三题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3143" target="_blank" rel="external">AC通道</a></p>
<p>这题很神，不看题解根本想不出来</p>
<p>如果我们能计算出经过每条边的期望次数，那么贪心编号即可</p>
<p>如果我们能计算出每个点的期望经过次数，那么就可以计算出每条边经过的期望次数（每个点每次经过，除了1和n必然一进一出）</p>
<p>如何求解每个点的经过次数？</p>
<p>设$x_i$为第i个点的经过次数的期望值，则 $x_i=\sum x_j \times \frac{1}{d_j}  (i，j有边相连)$</p>
<p>边界条件: </p>
<p>（1）$x_n=0$</p>
<p>（2）对于1号点,$x_1-1=\sum x_j \times \frac{1}{d_j}$</p>
<p>高斯消元求出所有的x之后，设每条边的经过次数的期望值$c_i$</p>
<p>则：$c_i=x_i \times frac{1}{d_i} + x_j \times frac{1}{d_j} (i，j为边的两端点)$  </p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 510</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> x,y;&#125;e[MAXN*MAXN];</div><div class="line"><span class="keyword">int</span> n,m,d[MAXN];</div><div class="line"><span class="keyword">double</span> ans,c[MAXN*MAXN],a[MAXN][MAXN];</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span>&#123;<span class="keyword">return</span> a&gt;b;&#125;</div><div class="line"><span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		e[i].x=read();e[i].y=read();</div><div class="line">		d[e[i].x]++; d[e[i].y]++;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		a[e[i].x][e[i].y]+=<span class="number">1.0</span>/d[e[i].y];</div><div class="line">		a[e[i].y][e[i].x]+=<span class="number">1.0</span>/d[e[i].x];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[n][i]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) a[i][i]=<span class="number">-1</span>;</div><div class="line">	a[<span class="number">1</span>][n+<span class="number">1</span>]=<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">gauss</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,temp;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(temp=now;temp&lt;=n;++temp)<span class="keyword">if</span>(<span class="built_in">fabs</span>(a[temp][i])&gt;eps)<span class="keyword">break</span>;</div><div class="line">		<span class="keyword">if</span>(temp&gt;n) <span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">if</span>(now!=temp) swap(a[temp],a[now]);</div><div class="line">		<span class="keyword">double</span> t=a[now][i];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;++j) a[now][j]/=t;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">if</span>(j!=now)&#123;</div><div class="line">			<span class="keyword">double</span> t=a[j][i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=i+<span class="number">1</span>;k&lt;=n+<span class="number">1</span>;++k) a[j][k]-=t*a[now][k];</div><div class="line">		&#125;</div><div class="line">		++now;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=now;i&lt;=n;++i) <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[i][n+<span class="number">1</span>])&gt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	gauss();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) c[i]=a[e[i].x][n+<span class="number">1</span>]/d[e[i].x]+a[e[i].y][n+<span class="number">1</span>]/d[e[i].y];</div><div class="line">	sort(c+<span class="number">1</span>,c+m+<span class="number">1</span>,cmp);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) ans+=c[i]*i;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	init(); solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 高斯消元 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2419】电阻]]></title>
      <url>/2017/03/10/2419/</url>
      <content type="html"><![CDATA[<ul>
<li>高斯消元重修系列第二题<a id="more"></a></li>
</ul>
<p>引用妹主席的一句话: </p>
<blockquote>
<p>如今的OI界啊，仙人掌当道，玄学题横行，物理题为[和谐]一方</p>
</blockquote>
<p>这种物理题我也是醉了</p>
<p>首先普及一下电流守恒定律：流入一个点的电流和等于流出这个点的电流和（和网络流有点像）</p>
<p>然后根据欧姆定律有：$I_{i,j}=\frac{E_i-E_j}{R_{i,j}}$</p>
<p>带入电流守恒定律有：$\sum \frac{E_i-E_j}{R_{i,j}}=0$  (i与j有电阻相连)</p>
<p>特别的，对于1号点：$\sum \frac{E_i-E_j}{R_{i,j}}=1$</p>
<p>对于n号点：$\sum \frac{E_i-E_j}{R_{i,j}}=-1$</p>
<p>根据这些列出n个方程，高斯消元即可</p>
<p>注意重边要累加电阻，自环要忽略，上邻接矩阵存图即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">double</span> a[<span class="number">510</span>][<span class="number">510</span>],Map[<span class="number">510</span>][<span class="number">510</span>];</div><div class="line"><span class="keyword">int</span> n,m;</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(Map,<span class="number">0</span>,<span class="keyword">sizeof</span>(Map));</div><div class="line">	<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read(),r=read();</div><div class="line">		Map[x][y]+=<span class="number">1.0</span>/r;  Map[y][x]+=<span class="number">1.0</span>/r;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</div><div class="line">		a[i][i]+=Map[i][j];  a[i][j]-=Map[i][j];</div><div class="line">	&#125;</div><div class="line">	a[<span class="number">1</span>][n+<span class="number">1</span>]=<span class="number">1</span>; a[n][n+<span class="number">1</span>]=<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">gauss</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,temp;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(temp=now;temp&lt;=n;++temp) <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[temp][i])&gt;eps) <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">if</span>(temp&gt;n) <span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">if</span>(temp!=now) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;++j) swap(a[now][j],a[temp][j]);</div><div class="line">		<span class="keyword">double</span> t=a[now][i];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;++j) a[now][j]/=t;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">if</span>(j!=now)&#123;</div><div class="line">			<span class="keyword">double</span> t=a[j][i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n+<span class="number">1</span>;++k) a[j][k]-=t*a[now][k];</div><div class="line">		&#125;</div><div class="line">		++now;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=now;i&lt;=n;++i)<span class="keyword">if</span>(<span class="built_in">fabs</span>(a[i][n+<span class="number">1</span>])&gt;eps)<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.2lf\n"</span>,a[<span class="number">1</span>][n+<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)&#123;</div><div class="line">		init();gauss();output();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 高斯消元 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1013】球形空间产生器]]></title>
      <url>/2017/03/10/1013/</url>
      <content type="html"><![CDATA[<ul>
<li>高斯消元重修系列第一题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1013" target="_blank" rel="external">AC通道</a></p>
<p>这题之前做过，但是今天妹主席讲了一发矩阵相关，我突然发现。。。我好像忘了高斯消元怎么写了</p>
<p>这道题思路很妙：</p>
<p>设圆心为$(r_1,r_2,……,r_n)$,然后任选两个点$(x_1,x_2,……,x_n),(y_1,y_2,……,y_n)$，则有：</p>
<p>$(r_1-x_1)^2+(r_2-x_2)^2+……+(r_n-x_n)^2=(r_1-y_1)^2+(r_2-y_2)^2+……+(r_n-y_n)^2$</p>
<p>展开后可将$r$的二次项消掉：$2(y_1-x_1)r_1+2(y_2-x_2)r_2+……+2(y_n-x_n)r_n=(y_1^2-x_1^2)+(y_2^2-x_2^2)+……+(y_n^2-x_n^2)$</p>
<p>使用高斯消元即可解出圆心坐标</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 1e-6</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">double</span> f[<span class="number">15</span>],a[<span class="number">15</span>][<span class="number">15</span>];</div><div class="line"><span class="keyword">int</span> n;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;f[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</div><div class="line">		<span class="keyword">double</span> x;<span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;x);</div><div class="line">		a[i][j]=<span class="number">2</span>*(x-f[j]);  a[i][n+<span class="number">1</span>]+=x*x-f[j]*f[j];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">gauss</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,temp;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(temp=now;temp&lt;=n;++temp) <span class="keyword">if</span>(<span class="built_in">fabs</span>(a[temp][i])&gt;eps) <span class="keyword">break</span>;</div><div class="line">		<span class="keyword">if</span>(temp&gt;n)  <span class="keyword">continue</span>;</div><div class="line">		<span class="keyword">if</span>(temp!=now)  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;++j)  swap(a[temp][j],a[now][j]);</div><div class="line">		<span class="keyword">double</span> t=a[now][i]; <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n+<span class="number">1</span>;++j)  a[now][j]/=t;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">if</span>(j!=now)&#123;</div><div class="line">			<span class="keyword">double</span> t=a[j][i];</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n+<span class="number">1</span>;++k)a[j][k]-=t*a[now][k];</div><div class="line">		&#125;</div><div class="line">		++now;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=now;i&lt;=n;++i)<span class="keyword">if</span>(<span class="built_in">fabs</span>(a[i][n+<span class="number">1</span>])&gt;eps) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;++i)  <span class="built_in">printf</span>(<span class="string">"%.3lf "</span>,a[i][n+<span class="number">1</span>]);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%.3lf"</span>,a[n][n+<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	init();</div><div class="line">	gauss();</div><div class="line">	output();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 高斯消元 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4455/uoj#185】小星星]]></title>
      <url>/2017/03/09/4455/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://uoj.ac/problem/185" target="_blank" rel="external">AC通道</a></p>
<p>吕老板的一句话题解我也是醉了 </p>
<p>我们可以搞一个容斥，枚举树中点映射到图中点的集合T(不一定是一一对应)，然后加加减减就行了</p>
<p>怎么计算当前集合T的答案呢？</p>
<p>考虑树形dp</p>
<p>设f[i][j]表示以i为根的子树映射到T，且i映射到了j的方案数</p>
<p>随手dp即可</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[<span class="number">805</span>];</div><div class="line"><span class="keyword">int</span> n,m,cnt,len,a[<span class="number">20</span>],Link[<span class="number">20</span>],bin[<span class="number">20</span>],Map[<span class="number">20</span>][<span class="number">20</span>];</div><div class="line">ll ans,f[<span class="number">20</span>][<span class="number">20</span>];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)dfs(e[i].y,x);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j)&#123;</div><div class="line">		f[x][a[j]]=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">			ll temp=<span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=cnt;++k)</div><div class="line">				<span class="keyword">if</span>(Map[a[j]][a[k]])  temp+=f[e[i].y][a[k]];</div><div class="line">			f[x][a[j]]*=temp; <span class="keyword">if</span>(!f[x][a[j]])  <span class="keyword">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  bin[<span class="number">0</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) bin[i]=bin[i<span class="number">-1</span>]*<span class="number">2</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;<span class="keyword">int</span> x=read(),y=read();Map[x][y]=Map[y][x]=<span class="number">1</span>;&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;<span class="keyword">int</span> x=read(),y=read();insert(x,y);insert(y,x);&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;bin[n];++i)&#123;</div><div class="line">		cnt=<span class="number">0</span>;  ll temp=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">if</span>(i&amp;bin[j<span class="number">-1</span>])a[++cnt]=j;</div><div class="line">		dfs(<span class="number">1</span>,<span class="number">0</span>); </div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;++j) temp+=f[<span class="number">1</span>][a[j]];</div><div class="line">		<span class="keyword">if</span>((n&amp;<span class="number">1</span>)==(cnt&amp;<span class="number">1</span>)) ans+=temp;  <span class="keyword">else</span> ans-=temp;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 树形dp </tag>
            
            <tag> bzoj </tag>
            
            <tag> 容斥原理 </tag>
            
            <tag> uoj </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4710】分特产]]></title>
      <url>/2017/03/09/4710/</url>
      <content type="html"><![CDATA[<ul>
<li>不要相信这个调了2个小时的sb<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4710" target="_blank" rel="external">AC通道</a></p>
<p>我们只需要枚举多少个同学没有分到即可进行容斥</p>
<p>错误记录：</p>
<p>（1）求组合数时没有令c[0][0]=1;<br>（2）搞错位运算优先级<br>（3）组合数取模没有加括号</p>
<p>我是不是应该滚去普及组了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>,MAXN=<span class="number">2000</span>,D=<span class="number">50</span>;</div><div class="line"><span class="keyword">int</span> n,m,a[MAXN+D];</div><div class="line">ll ans,c[MAXN+D][MAXN+D];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=MAXN;++i)  c[i][<span class="number">0</span>]=c[i][i]=<span class="number">1L</span>L;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;++j)</div><div class="line">			c[i][j]=(c[i<span class="number">-1</span>][j<span class="number">-1</span>]+c[i<span class="number">-1</span>][j])%mod;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)  a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		ll f=((i&amp;<span class="number">1</span>)==(n&amp;<span class="number">1</span>)?<span class="number">1</span>:<span class="number">-1</span>);  f=f*c[n][i]%mod; </div><div class="line">		<span class="keyword">for</span>(ll j=<span class="number">1</span>;j&lt;=m;++j)  f=(f*c[a[j]+i<span class="number">-1</span>][i<span class="number">-1</span>]+mod)%mod;</div><div class="line">		ans+=f;  ans=(ans+mod)%mod;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 容斥原理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】后缀自动机研究总结]]></title>
      <url>/2017/03/08/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E5%90%8E%E7%BC%80%E8%87%AA%E5%8A%A8%E6%9C%BA%E7%A0%94%E7%A9%B6%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="从有限状态自动机说起"><a href="#从有限状态自动机说起" class="headerlink" title="从有限状态自动机说起"></a>从有限状态自动机说起</h2><hr>
<h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>有限状态自动机，简称自动机，具有识别字符串的功能</p>
<p>若一个自动机$A$能识别字符串$S$，则记$A(S)=true$，否则$A(S)=false$</p>
<p>-<br>-</p>
<h3 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h3><p>$alpha$：字符集，一般为$26$个字母组成的集合</p>
<p>$state$：状态集合，即自动机上的点，其本质为若干字符串组成的集合</p>
<p>$init$：初始状态，一般为空集</p>
<p>$end$：结束状态集合，又称可接受态，表示读入新字符后可进行转移的状态</p>
<p>$trans$：状态转移函数，$trans(G,ch)$表示从状态$G$读入字符$ch$后所到达的状态</p>
<p>根据这些定义，我们知道自动机$A$能识别的字符串$S$必定满足$trans(init,S)\subset end$</p>
<p>-<br>-<br>-</p>
<h2 id="后缀自动机的构造原理"><a href="#后缀自动机的构造原理" class="headerlink" title="后缀自动机的构造原理"></a>后缀自动机的构造原理</h2><hr>
<h3 id="朴素状态后缀自动机"><a href="#朴素状态后缀自动机" class="headerlink" title="朴素状态后缀自动机"></a>朴素状态后缀自动机</h3><p>给定字符串$S$,$S$的后缀自动机($SAM$，以下简称$SAM$)是一个能识别$S$的所有后缀的自动机</p>
<p>即$SAM(x)=true$，当且仅当$x$是$S$的后缀</p>
<p>考虑字符串aabbabd，我们可以讲该字符串的所有后缀插入一个$Trie$树中，就像下图那样。</p>
<p><img src="http://images.cnblogs.com/cnblogs_com/chty/960092/o_%e5%9b%be%e7%89%871.png" alt=""></p>
<p>那么初始状态就是根，状态转移函数就是这颗树的边，结束状态集合就是所有的叶子</p>
<p>这样我们就得到了一个$S$的朴素状态后缀自动机</p>
<p>我们发现它的节点数和边数都是$O(n^2)$的，时间和空间上都无法承受</p>
<p>考虑进行优化</p>
<p>-<br>-</p>
<h3 id="最简状态后缀自动机"><a href="#最简状态后缀自动机" class="headerlink" title="最简状态后缀自动机"></a>最简状态后缀自动机</h3><p>在上面的朴素状态自动机里，每个结点表示一个子串，我们发现一些结点可以识别的字符串的集合是相同的，这就是我们进行优化的根源</p>
<p>对于可以识别相同的字符串的状态，我们称之为等价的状态，我们可以把它们压缩为一个状态，这样就可以大大节省结点数量</p>
<blockquote>
<p>注：一个状态$G$能识别字符串$x$，当且仅当$Gx$是$S$的后缀</p>
</blockquote>
<p>那么我们如何判断两个状态是等价的呢？</p>
<p>这里引入一个$Right$集合的概念</p>
<p>设子串$x$在母串$S$中的 [$l_1,r_1$) , [$l_2,r_2$) , [$l_3,r_3$) , [$l_n,r_n$) 位置出现 (注意：区间是左闭右开的)</p>
<p>那么$Right(x)=${$r_1,r_2,r_3,……,r_n$}</p>
<p>如$S=AB{\color{Red}B}{\color{Red} B}{\color{Red} A}{\color{Red} B}{\color{Red}B }{\color{Red}A }BBB{\color{Red}B }{\color{Red} B}{\color{Red}A }$,$x=BBA$</p>
<p>则$Right(x)=${$6,9,15$}</p>
<p>同时我们发现：</p>
<blockquote>
<p>状态  $AB{\color{Red}B}{\color{Red} B}{\color{Red} A}$ 可以识别串${\color{Red} B}{\color{Red}B }{\color{Red}A }BBB{\color{Red}B }{\color{Red} B}{\color{Red}A }$</p>
<p>状态  $AB{\color{Red}B}{\color{Red} B}{\color{Red} A}{\color{Red} B}{\color{Red}B }{\color{Red}A }$  可以识别串$BBB{\color{Red}B }{\color{Red} B}{\color{Red}A }$</p>
<p>状态  $AB{\color{Red}B}{\color{Red} B}{\color{Red} A}{\color{Red} B}{\color{Red}B }{\color{Red}A }BBB{\color{Red}B }{\color{Red} B}{\color{Red}A }$  只能识别空串</p>
</blockquote>
<p>即一个状态可以识别的字符串的集合只有该状态的$Right$集合决定</p>
<p>对于两个子串$a,b,$如果$Right(a)=Right(b)$，那么$trans(init,a)=trans(init,b)$</p>
<p>所以我们可以把$Right$集合相同的状态压缩成一个状态</p>
<p>我们把压缩后的自动机称为最简状态后缀自动机，可以证明它的状态数是线性的</p>
<p>假如现在我们已经得到了这个最简状态后缀自动机，以及每个结点的$Right$集合，那么只需要再给定一个长度$len$就可以确定子串了</p>
<p>考虑对于一个$Right$集合，如果长度l，r合适，那么区间[l,r]内的长度也一定合适</p>
<p>比如上面的例子中,$A$和$BBA$是合适的，所以可以令$l=1,r=3,$则当长度$len=2$时，$BA$也是合适的</p>
<p>对于一个状态$G$，我们令$Min(G)=l,Max(G)=r$，则$G$的子串的合适长度的范围就是$[Min(G),Max(G)]$</p>
<p>如在上面的例子中，$Min(x)=1,Max(x)=3$</p>
<blockquote>
<p>$Max(x)$表示的意义是：这个串如果更长的话，$right(x)$ 中的某些位置就无法和串匹配了</p>
<p>$Min(x)$表示的意义是：这个串如果更短的话，某些不属于 $right(p) $的位置也能和串匹配了</p>
</blockquote>
<p>-<br>-</p>
<h3 id="线性复杂度的证明"><a href="#线性复杂度的证明" class="headerlink" title="线性复杂度的证明"></a>线性复杂度的证明</h3><ul>
<li>温馨提示：证明过程纯属理性的愉悦，读者可以自行选择跳过</li>
</ul>
<p>先证明状态数是线性的：</p>
<blockquote>
<p>考虑两个状态$a,b,$若$Right(a)$和$Right(b)$有交集</p>
<p>因为一个子串至多属于一个状态，所以状态$a，b$中不会有相同的子串</p>
<p>所以$[Min(a),Max(a)]$和$[Min(b),Max(b)]$没有交集</p>
<p>不妨设$Max(a)&lt;Min(b)，$那么状态$a$中所有串都比$b$中的短，所以$a$中的串都是$b$中串的后缀</p>
<p>因此，$a$中某串的出现位置，$b$中某串也必然出现了</p>
<p>所以$Right(a)$是$Right(b)$的真子集</p>
<p>所以就有如下结论：任意两个状态的$Right$集合要么不想交，要么一个是另一个的真子集</p>
</blockquote>
<p>事实上，所有状态的$Right$集合构成了一个树形结构，如下图</p>
<p><img src="http://images.cnblogs.com/cnblogs_com/chty/960092/o_QQ%e5%9b%be%e7%89%8720170308222410.png" alt=""></p>
<blockquote>
<p>我们把这棵树称为$parent$树</p>
<p>在这颗树中，叶子结点有$n$个，内部结点至少有$2$个儿子，所以结点个数最多为$2n$个</p>
<p>这就是$SAM$为什么要开$2$倍数组的原因 (切记，切记，山神因为这个省选$gg$了)</p>
<p>这样我们就证明了$SAM$的状态数是线性的</p>
</blockquote>
<p>下面我们来证明边数也是线性的：</p>
<blockquote>
<p>我们首先来求一棵$SAM$的生成树，因为点数是$2n$，那么树上的边数就是$2n-1$</p>
<p>对于一条非树边$a\rightarrow b$，SAM上的一个后缀的路径可以表示为$(init\rightarrow a)+(a\rightarrow b)+(b\rightarrow end)$</p>
<p>所以一个后缀对应一条非树边，一条非树边可以对应到若干个后缀</p>
<p>所以非树边最多只有$n$条</p>
<p>所以边数也是线性的</p>
</blockquote>
<p>-<br>-</p>
<h3 id="性质与结论"><a href="#性质与结论" class="headerlink" title="性质与结论"></a>性质与结论</h3><p>（1）设两个状态$G、H，$若$Right(G)$是$Right(H)$的真子集，且$Right(H)$在是满足该条件的$Right(H_i)$中是最小的，那么我们称$H$为$G$的$parent$</p>
<blockquote>
<p>注：集合$A$的大小是指集合中元素的多少，用$|A|$表示</p>
</blockquote>
<p>（2）$Max(parent(G))=Min(G)-1$</p>
<blockquote>
<p>证明：</p>
<p>考虑一个状态$G，G$的范围是$[Min(G),Max(G)]，$设$H$为$parent(G),$因为$|Right(H)|&gt;|Right(G)|$</p>
<p>所以对于$Min(G)-1，$它的出现位置的右端点必定是超出了$Right(G)，$而属于$Right(H)$的范围，所以有如下结论：</p>
</blockquote>
<p>（3）母串$S$的每个子串必然在SAM的某个状态里</p>
<p>（4）一个状态的$Right$集合等于该状态在$parent$树中所有儿子$Right$集合的并集</p>
<p>（5）两个状态的$Right$集合要么不相交，要么一个是另一个的真子集</p>
<p>-<br>-</p>
<h3 id="状态的转移"><a href="#状态的转移" class="headerlink" title="状态的转移"></a>状态的转移</h3><p>考虑一个状态$G$，它的$Right$集为{$r_1,r_2,r_3,……,r_n$}，假如有一条$G\rightarrow H $且标号为$c$的边，考虑$H$的$Right$集</p>
<p>由于多了一个字符，$G$的$Right$集中只有$S[r_i]=c$的符合要求，那么$H$的$Right$集为{$r_i|S[r_i]==c$}</p>
<p>所以有如下两条结论：</p>
<p>（1）显然$|Right(G)|&gt;|Right(H)|$，且$Right(H)$是$Right(G)$的真子集，所以$Max(H)&gt;Max(G)$</p>
<p>（2）如果从$G$出发有标号为$c$的边，那么从$parent(G)$出发必然也有</p>
<p>-<br>-</p>
<h3 id="构造过程"><a href="#构造过程" class="headerlink" title="构造过程"></a>构造过程</h3><p>$SAM$的构建是$online$的，每插入一个字符完成一次状态转移，所以我们只需要考虑假设已经建好了前$i$个字符的$SAM$，然后插入了$S[i+1]$的情况</p>
<p>设当前字符串为$T$，新插入的字符为$x，T$的长度为$len$</p>
<p>则新加入一个$x$，就多了$len$个子串，且这些子串都是$Tx$的后缀</p>
<p>我们考虑所有表示T的后缀的结点（可接受态结点）$v_1,v_2,……v_n，$它们的$Right$集中包含$len$</p>
<p>由于必然存在一个状态$p=trans(init,T)$使得它的$Right$集中仅有$len$这个元素，那么其它的结点$v_1,v_2…….$在$parent$树中是$p$的祖先</p>
<p>可以用$parent$指针得到它们，不妨把这些结点按照从后代到祖先的顺序排序</p>
<p>我们新添加一个字符$x$后，令$np=trans(init,Tx),$则$Right(np)=len+1$</p>
<p>对于出发没有标号为$x$的边的结点$v$，它的$Right$集中只有$r_n$是符合要求的，直接连一条$v\rightarrow np$的边即可</p>
<p>对于第一个出发有标号为$x$的边的结点$v_p$，设它的$Right$集为{$r_1,r_2,……r_n$}，令$trans(v_p,x)=q$，则$q$的$Right$集为{$r_i+1|S[r_i]==x$}</p>
<p>因为$v_p\rightarrow q$有标号为$x$的边，所以$q$是一个可接受态结点，所以要在$q$的$Right$集中插入$len+1$</p>
<p>但是直接插入有可能会使$Max(q)$变小从而引发一系列问题</p>
<p>如果$Max(q)=Max(p)+1$自然不会有问题，直接令$parent(np)=q$即可</p>
<blockquote>
<p>注：因为$np$的$Right$集为{$L+1$},它必定是$q$的$Right$集的真子集，所以$Parent(np)=q$</p>
</blockquote>
<p>否则我们把$q$分成两个结点$q$和$nq$，$q$负责维护原来的状态转移，$nq$负责维护插入字符$x$之后的状态转移</p>
<p>显然$Right(nq)=Right(q)\cup L+1$ ,  $Max(nq)=Max(np)+1$</p>
<p>由于$Right(q)$和$Right(np)$是$Right(nq)$的真子集，所以$parent(q)=parent(np)=nq$</p>
<p>我们注意到$L+1$对$trans(init,q)$的转移是没有影响的，所以可以直接把$q$的信息赋值给$nq$</p>
<p>然后对于$trans(v,x)=q$的结点$v$，由于已经插入了$x$，把$trans(v,x)$设为$nq$即可</p>
<p>整个过程如下图所示：</p>
<p><img src="http://images.cnblogs.com/cnblogs_com/chty/960092/o_4.png" alt=""></p>
<p><img src="http://images.cnblogs.com/cnblogs_com/chty/960092/o_5.png" alt=""></p>
<p>在很多时候，我们需要用到Right集的大小，如何求Right集的大小呢？</p>
<p>我们发现构建好的SAM是个有向无环图，我们对它进行拓扑排序，parent树上叶子节点|Right|设为1，然后按照拓扑序更新parent即可</p>
<p>-<br>-</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> cnt=<span class="number">1</span>,last=<span class="number">1</span>;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> np=++cnt,p=last; Right[np]=<span class="number">1</span>;</div><div class="line">	mx[np]=mx[p]+<span class="number">1</span>;  last=np;</div><div class="line">	<span class="keyword">while</span>(p&amp;&amp;!tr[p][x])  tr[p][x]=np,p=par[p];</div><div class="line">	<span class="keyword">if</span>(!p)  par[np]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> q=tr[p][x];</div><div class="line">		<span class="keyword">if</span>(mx[q]==mx[p]+<span class="number">1</span>)  par[np]=q;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> nq=++cnt; mx[nq]=mx[p]+<span class="number">1</span>;</div><div class="line">			<span class="built_in">memcpy</span>(tr[nq],tr[q],<span class="keyword">sizeof</span>(tr[q]));</div><div class="line">			par[nq]=par[q];  par[q]=par[np]=nq;</div><div class="line">			<span class="keyword">while</span>(p&amp;&amp;tr[p][x]==q)  tr[p][x]=nq,p=par[p];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">topsort</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  c[mx[i]]++;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)    c[i]+=c[i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  id[c[mx[i]]--]=i;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=cnt;i;--i)  Right[par[id[i]]]+=Right[id[i]];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>-<br>-</p>
]]></content>
      
        
        <tags>
            
            <tag> 后缀自动机 </tag>
            
            <tag> 算法笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CF#235C】Cyclical Quest]]></title>
      <url>/2017/03/08/CF235-C/</url>
      <content type="html"><![CDATA[<ul>
<li>后缀自动机重修系列第三题<a id="more"></a></li>
</ul>
<p><a href="http://codeforces.com/problemset/problem/235/C" target="_blank" rel="external">AC通道</a></p>
<p>题目大意：是给定一个字符串S，再给Q个询问，每次询问字符串Xi的循环同构在S中出现的次数和</p>
<p>首先把模板串建成SAM，那么对于每一个串，把它扩成两倍，然后在SAM上匹配，注意每次计算贡献时要沿parent树找到mx[x]&gt;=l的最小的x，因为如果parent(x)可以匹配，那么parent(x)的贡献一定大于x</p>
<p>然后就是注意xi中可能出现重复子串，怎么处理呢？</p>
<p>我们知道SAM上的一个子串在SAM上对应唯一的一个节点，那么为了防止重复子串的影响，只需要计算过答案后标记一下该节点即可。</p>
<p>注意用memset会TLE，我们需要一些奇淫技巧，具体看代码</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 2000010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,m,cnt(<span class="number">1</span>),last(<span class="number">1</span>),mx[MAXN],par[MAXN],c[MAXN],vis[MAXN],id[MAXN],Right[MAXN],tr[MAXN][<span class="number">27</span>];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> np=++cnt,p=last; Right[np]=<span class="number">1</span>;</div><div class="line">	mx[np]=mx[p]+<span class="number">1</span>;  last=np;</div><div class="line">	<span class="keyword">while</span>(p&amp;&amp;!tr[p][x])  tr[p][x]=np,p=par[p];</div><div class="line">	<span class="keyword">if</span>(!p)  par[np]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> q=tr[p][x];</div><div class="line">		<span class="keyword">if</span>(mx[q]==mx[p]+<span class="number">1</span>)  par[np]=q;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> nq=++cnt; mx[nq]=mx[p]+<span class="number">1</span>;</div><div class="line">			<span class="built_in">memcpy</span>(tr[nq],tr[q],<span class="keyword">sizeof</span>(tr[q]));</div><div class="line">			par[nq]=par[q];  par[q]=par[np]=nq;</div><div class="line">			<span class="keyword">while</span>(p&amp;&amp;tr[p][x]==q)  tr[p][x]=nq,p=par[p];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">topsort</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  c[mx[i]]++;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)    c[i]+=c[i<span class="number">-1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  id[c[mx[i]]--]=i;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=cnt;i;--i)  Right[par[id[i]]]+=Right[id[i]];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">1</span>,len=<span class="number">0</span>,ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(now&amp;&amp;!tr[now][ch[i]-<span class="string">'a'</span>])  now=par[now],len=mx[now];</div><div class="line">		<span class="keyword">if</span>(!now)  len=<span class="number">0</span>,now=<span class="number">1</span>;</div><div class="line">		<span class="keyword">else</span> now=tr[now][ch[i]-<span class="string">'a'</span>],len++;</div><div class="line">		<span class="keyword">while</span>(now&amp;&amp;mx[par[now]]&gt;=n)  now=par[now],len=mx[now];</div><div class="line">		<span class="keyword">if</span>(vis[now]!=k&amp;&amp;len&gt;=n)  ans+=Right[now],vis[now]=k;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  extend(ch[i]-<span class="string">'a'</span>);</div><div class="line">	topsort();</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);  </div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)  ch[n+j]=ch[j];</div><div class="line">		solve(i);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 后缀自动机 </tag>
            
            <tag> CF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3998】弦论]]></title>
      <url>/2017/03/08/3998/</url>
      <content type="html"><![CDATA[<ul>
<li>后缀自动机重修系列第二题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3998" target="_blank" rel="external">AC通道</a></p>
<p>这题是后缀自动机的基础应用之一</p>
<p>首先构建$SAM$</p>
<p>每个子串对应了 $SAM$ 上的一条路径</p>
<p>我们考虑这个路径在SAM上某个状态 $p$ 停下：</p>
<ol>
<li><p>若去重，则只有一种方案</p>
</li>
<li><p>若不去重，则有 $|right(p)|$ 种方案</p>
</li>
</ol>
<p>记 $f[x]$ 表示从状态$x$ 向后走的不同的路径数</p>
<p>在 $SAM$ 上求 $K$ 大，逐个确定答案的每位字符即可</p>
<p>重点说一下我犯得低级错误吧</p>
<p>extend函数中又一个memcpy的过程，我打成了memcmp，结果一下午就进去了</p>
<p>其实这个问题可以通过GDB开警告解决</p>
<h3 id="g-g-3998-cpp-Wall-o-3998-exe"><a href="#g-g-3998-cpp-Wall-o-3998-exe" class="headerlink" title="$ g++ -g 3998.cpp -Wall -o 3998.exe"></a>$ g++ -g 3998.cpp -Wall -o 3998.exe</h3><p>这样就可以报错了</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,now(<span class="number">1</span>),cnt(<span class="number">1</span>),id[MAXN],c[MAXN],mx[MAXN],Right[MAXN],f[MAXN],parent[MAXN],tr[MAXN][<span class="number">27</span>];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">    <span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">    <span class="keyword">int</span> np=++cnt,p=now; Right[np]=<span class="number">1</span>;</div><div class="line">    mx[np]=mx[p]+<span class="number">1</span>;  now=np;</div><div class="line">    <span class="keyword">while</span>(p&amp;&amp;!tr[p][x])  tr[p][x]=np,p=parent[p];</div><div class="line">    <span class="keyword">if</span>(!p) parent[np]=<span class="number">1</span>;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="keyword">int</span> q=tr[p][x];</div><div class="line">        <span class="keyword">if</span>(mx[q]==mx[p]+<span class="number">1</span>)  parent[np]=q;</div><div class="line">        <span class="keyword">else</span>&#123;</div><div class="line">            <span class="keyword">int</span> nq=++cnt; mx[nq]=mx[p]+<span class="number">1</span>;</div><div class="line">            <span class="built_in">memcpy</span>(tr[nq],tr[q],<span class="keyword">sizeof</span>(tr[q]));</div><div class="line">            parent[nq]=parent[q]; parent[q]=parent[np]=nq;</div><div class="line">            <span class="keyword">while</span>(p&amp;&amp;tr[p][x]==q) tr[p][x]=nq,p=parent[p];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">topsort</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  c[mx[i]]++;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)    c[i]+=c[i<span class="number">-1</span>];</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  id[c[mx[i]]--]=i;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">    freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">    freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  extend(ch[i]-<span class="string">'a'</span>);</div><div class="line">    topsort();<span class="keyword">int</span> opt=read(),len=read();</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=cnt;i;--i)&#123;</div><div class="line">        <span class="keyword">if</span>(opt==<span class="number">1</span>) Right[parent[id[i]]]+=Right[id[i]];</div><div class="line">        <span class="keyword">else</span> Right[id[i]]=<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    Right[<span class="number">1</span>]=<span class="number">0</span>; now=<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=cnt;i;--i)&#123;</div><div class="line">        f[id[i]]=Right[id[i]];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">26</span>;++j) f[id[i]]+=f[tr[id[i]][j]];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(len&gt;f[<span class="number">1</span>])  &#123;<span class="built_in">puts</span>(<span class="string">"-1"</span>); <span class="keyword">return</span> <span class="number">0</span>;&#125;</div><div class="line">    <span class="keyword">while</span>(len&gt;Right[now])&#123;</div><div class="line">        len-=Right[now];</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)<span class="keyword">if</span>(tr[now][i])&#123;</div><div class="line">            <span class="keyword">if</span>(len&lt;=f[tr[now][i]])&#123;</div><div class="line">                <span class="built_in">putchar</span>(<span class="string">'a'</span>+i);</div><div class="line">                now=tr[now][i]; <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span> len-=f[tr[now][i]];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>附makedata程序</p>
<pre><code class="cpp"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span>
<span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span>
<span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span>
<span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span>
<span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span>
<span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span>
<span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span>
<span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span>
<span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;
<span class="keyword">const</span> <span class="keyword">int</span> INF=(<span class="keyword">int</span>)<span class="number">1e9</span>;
<span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{
    freopen(FILE<span class="string">".in"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);
    srand(time(<span class="number">0</span>));
    <span class="keyword">int</span> n=<span class="number">500000</span>;
    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i){
        <span class="built_in">putchar</span>(<span class="string">'a'</span>+rand()%<span class="number">26</span>);
    }
    <span class="built_in">printf</span>(<span class="string">"\n"</span>);
    <span class="built_in">printf</span>(<span class="string">"%d %lld"</span>,rand()%<span class="number">2</span>,<span class="number">1L</span>L*rand()*rand()%INF);
    <span class="keyword">return</span> <span class="number">0</span>;
}
</code></pre>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 后缀自动机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4199/uoj#131】品酒大会]]></title>
      <url>/2017/03/08/4199/</url>
      <content type="html"><![CDATA[<ul>
<li>后缀自动机重修系列第一题<a id="more"></a></li>
</ul>
<p><a href="http://uoj.ac/problem/131" target="_blank" rel="external">AC通道</a></p>
<p>突然发现我的SAM只会原理，不会应用，于是恶补一发</p>
<p>我们知道对于SAM，它的反串的parent树就是后缀树</p>
<p>于是我们可以轻松的建出后缀树然后在树上做dp即可</p>
<p>注意几点：</p>
<p>（1）后缀树的边权表示字符数，所以节点的深度应该按边权计算<br>（2）后缀树的节点表示状态，对应多个字符串，其size为right集的大小<br>（3）要维护子树中点权的最大值、次大值、最小值、次小值，因为点权可能是负的<br>（4）统计第一问的答案时，不能直接上组合数，因为这样做会有不合法情况</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 600010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> ll INF=(<span class="number">1L</span>L&lt;&lt;<span class="number">62</span>);</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;ll v;&#125;e[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,last(<span class="number">1</span>),cnt(<span class="number">1</span>),len,mx[MAXN],parent[MAXN],Link[MAXN],tr[MAXN][<span class="number">27</span>];</div><div class="line">ll v[MAXN],size[MAXN],deep[MAXN],f[MAXN][<span class="number">2</span>],g[MAXN][<span class="number">2</span>],ans[MAXN][<span class="number">2</span>];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,ll v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=v;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> x,ll val)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> np=++cnt,p=last; size[np]=<span class="number">1</span>;</div><div class="line">	mx[np]=mx[p]+<span class="number">1</span>; last=np;  f[np][<span class="number">0</span>]=g[np][<span class="number">0</span>]=val;</div><div class="line">	<span class="keyword">while</span>(p&amp;&amp;!tr[p][x])  tr[p][x]=np,p=parent[p];</div><div class="line">	<span class="keyword">if</span>(!p)  parent[np]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">int</span> q=tr[p][x];</div><div class="line">		<span class="keyword">if</span>(mx[q]==mx[p]+<span class="number">1</span>)  parent[np]=q;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> nq=++cnt;  mx[nq]=mx[p]+<span class="number">1</span>;</div><div class="line">			<span class="built_in">memcpy</span>(tr[nq],tr[q],<span class="keyword">sizeof</span>(tr[q]));</div><div class="line">			parent[nq]=parent[q]; parent[q]=parent[np]=nq;</div><div class="line">			<span class="keyword">while</span>(p&amp;&amp;tr[p][x]==q)  tr[p][x]=nq,p=parent[p];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)<span class="keyword">if</span>(e[i].y!=fa)&#123;</div><div class="line">		deep[e[i].y]=deep[x]+e[i].v;</div><div class="line">		dfs(e[i].y,x);</div><div class="line">		ans[deep[x]][<span class="number">0</span>]+=size[x]*size[e[i].y];</div><div class="line">		size[x]+=size[e[i].y];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">1</span>;++j)&#123;</div><div class="line">			<span class="keyword">if</span>(f[e[i].y][j]&gt;f[x][<span class="number">0</span>]) f[x][<span class="number">1</span>]=f[x][<span class="number">0</span>],f[x][<span class="number">0</span>]=f[e[i].y][j];</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(f[e[i].y][j]&gt;f[x][<span class="number">1</span>])  f[x][<span class="number">1</span>]=f[e[i].y][j];</div><div class="line">			<span class="keyword">if</span>(g[e[i].y][j]&lt;g[x][<span class="number">0</span>]) g[x][<span class="number">1</span>]=g[x][<span class="number">0</span>],g[x][<span class="number">0</span>]=g[e[i].y][j];</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(g[e[i].y][j]&lt;g[x][<span class="number">1</span>])  g[x][<span class="number">1</span>]=g[e[i].y][j];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(f[x][<span class="number">0</span>]!=-INF&amp;&amp;f[x][<span class="number">1</span>]!=-INF)  cmax(ans[deep[x]][<span class="number">1</span>],f[x][<span class="number">0</span>]*f[x][<span class="number">1</span>]);</div><div class="line">	<span class="keyword">if</span>(g[x][<span class="number">0</span>]!=INF&amp;&amp;g[x][<span class="number">1</span>]!=INF)    cmax(ans[deep[x]][<span class="number">1</span>],g[x][<span class="number">0</span>]*g[x][<span class="number">1</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=MAXN<span class="number">-1</span>;++i)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">1</span>;++j)</div><div class="line">			f[i][j]=-INF,g[i][j]=INF;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=MAXN<span class="number">-1</span>;++i) ans[i][<span class="number">1</span>]=-INF;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read(); <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);</div><div class="line">	reverse(ch+<span class="number">1</span>,ch+n+<span class="number">1</span>); pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  v[n-i+<span class="number">1</span>]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  extend(ch[i]-<span class="string">'a'</span>,v[i]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i) <span class="keyword">if</span>(parent[i]) insert(i,parent[i],mx[i]-mx[parent[i]]);</div><div class="line">	dfs(<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;--i)&#123;</div><div class="line">		ans[i][<span class="number">0</span>]+=ans[i+<span class="number">1</span>][<span class="number">0</span>];</div><div class="line">		cmax(ans[i][<span class="number">1</span>],ans[i+<span class="number">1</span>][<span class="number">1</span>]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)  <span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,ans[i][<span class="number">0</span>],ans[i][<span class="number">1</span>]==-INF?<span class="number">0</span>:ans[i][<span class="number">1</span>]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 树形dp </tag>
            
            <tag> bzoj </tag>
            
            <tag> 后缀自动机 </tag>
            
            <tag> uoj </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【CF#163E】E-Government]]></title>
      <url>/2017/03/08/CF-163E/</url>
      <content type="html"><![CDATA[<ul>
<li>AC自动机重修系列第三题<a id="more"></a></li>
</ul>
<p><a href="http://codeforces.com/contest/163/problem/E" target="_blank" rel="external">AC通道</a></p>
<p>昨晚写了阿狸的打字机之后，这道题就是套路了</p>
<h2 id="题目大意："><a href="#题目大意：" class="headerlink" title="题目大意："></a>题目大意：</h2><p>要求你写出一个网络市政系统，用于评定每篇文章的“政治程度”。每篇文章的“政治程度”的含义就是文章中出现了多少个参议员的名字。这里要注意，参议员的名字可能是交叉的。 这个系统还需支持三种操作：</p>
<p>1、将某个参议员的名字从名单中抹去（不再考虑此议员）</p>
<p>2、将某个已被删除的议员的名字重新加入名单。</p>
<p>3、输出给定的文章的“政治程度”。</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>一般统计串的出现次数，比较朴素的做法就是在AC自动机上跑到每个节点时沿着fail指针计算答案</p>
<p>但是在这里会TLE，我们考虑优化</p>
<p>我们可以建出fail树，求出dfs序，那么我们就可以用树状数组维护从根到该节点的链上的答案的和</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,ans,cnt,dfs_clock,len,pos[MAXN],vis[MAXN],fail[MAXN],Link[MAXN],q[MAXN],L[MAXN],R[MAXN],c[MAXN&lt;&lt;<span class="number">1</span>],tr[MAXN][<span class="number">27</span>];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span></span>&#123;<span class="keyword">while</span>(x&lt;=dfs_clock)c[x]+=v,x+=(x&amp;-x);&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">temp</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="keyword">while</span>(x)temp+=c[x],x-=(x&amp;-x);<span class="keyword">return</span> temp;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	L[x]=++dfs_clock;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">		dfs(e[i].y);</div><div class="line">	R[x]=++dfs_clock;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> &amp;now)</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  <span class="keyword">int</span> N=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!tr[now][ch[i]-<span class="string">'a'</span>])  tr[now][ch[i]-<span class="string">'a'</span>]=++cnt;</div><div class="line">		now=tr[now][ch[i]-<span class="string">'a'</span>];</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)  <span class="keyword">if</span>(tr[<span class="number">0</span>][i])  q[++tail]=tr[<span class="number">0</span>][i];</div><div class="line">	<span class="keyword">while</span>(++head&lt;=tail)&#123;</div><div class="line">		<span class="keyword">int</span> x=q[head];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)&#123;</div><div class="line">			<span class="keyword">if</span>(!tr[x][i])  tr[x][i]=tr[fail[x]][i];</div><div class="line">			<span class="keyword">else</span> fail[tr[x][i]]=tr[fail[x]][i],q[++tail]=tr[x][i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  insert(fail[i],i);  dfs(<span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);  <span class="keyword">int</span> now=<span class="number">0</span>,N=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(now&amp;&amp;!tr[now][ch[i]-<span class="string">'a'</span>])  now=fail[now];</div><div class="line">		now=tr[now][ch[i]-<span class="string">'a'</span>];  ans+=get(L[now]);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) extend(pos[i]);  build();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) vis[i]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i) add(L[pos[i]],<span class="number">1</span>),add(R[pos[i]],<span class="number">-1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">char</span> opt; <span class="built_in">scanf</span>(<span class="string">"\n%c"</span>,&amp;opt);</div><div class="line">		<span class="keyword">if</span>(opt==<span class="string">'?'</span>)  ans=<span class="number">0</span>,work(),<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="string">'-'</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=read();<span class="keyword">if</span>(!vis[x])<span class="keyword">continue</span>;</div><div class="line">			add(L[pos[x]],<span class="number">-1</span>);add(R[pos[x]],<span class="number">1</span>);vis[x]=<span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> x=read();<span class="keyword">if</span>(vis[x]) <span class="keyword">continue</span>;</div><div class="line">			add(L[pos[x]],<span class="number">1</span>);add(R[pos[x]],<span class="number">-1</span>);vis[x]=<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> AC自动机 </tag>
            
            <tag> 树状数组 </tag>
            
            <tag> CF </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3172】单词]]></title>
      <url>/2017/03/07/3172/</url>
      <content type="html"><![CDATA[<ul>
<li>AC自动机重修系列第二题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3172" target="_blank" rel="external">AC通道</a></p>
<hr>
<p>做过bzoj2434之后，这题就觉得很水了</p>
<p>直接跑AC自动机，统计次数就行了</p>
<p>注意最后要按照拓扑序更新后缀节点，因为当前串中出现过的字符后缀节点所代表的串一定出现过</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> T,cnt,pos[MAXN],v[MAXN],fail[MAXN],q[MAXN],tr[MAXN][<span class="number">27</span>];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> &amp;now)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!tr[now][ch[i]-<span class="string">'a'</span>])  tr[now][ch[i]-<span class="string">'a'</span>]=++cnt;</div><div class="line">		now=tr[now][ch[i]-<span class="string">'a'</span>];  v[now]++;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i) <span class="keyword">if</span>(tr[<span class="number">0</span>][i]) q[++tail]=tr[<span class="number">0</span>][i];</div><div class="line">	<span class="keyword">while</span>(++head&lt;=tail)&#123;</div><div class="line">		<span class="keyword">int</span> x=q[head];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)&#123;</div><div class="line">			<span class="keyword">if</span>(!tr[x][i])  tr[x][i]=tr[fail[x]][i];</div><div class="line">			<span class="keyword">else</span> fail[tr[x][i]]=tr[fail[x]][i],q[++tail]=tr[x][i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=tail;i;--i)  v[fail[q[i]]]+=v[q[i]];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;++i)  <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>),extend(pos[i]);</div><div class="line">	build();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;++i)  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,v[pos[i]]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> AC自动机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2434】阿狸的打字机]]></title>
      <url>/2017/03/07/2434/</url>
      <content type="html"><![CDATA[<ul>
<li>AC自动机重修系列第一题<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2434" target="_blank" rel="external">AC通道</a></p>
<hr>
<p>今天吕老板讲了一发字符串，然后。。。我发现我好像学了假的AC自动机？</p>
<p>于是今晚恶补一发，此题便是AC自动机重修系列第一题</p>
<p>原先写这题的时候还是没有搞懂fail树这种神奇的东西，于是我去百度了一下，有一篇博文写得很好<a href="http://blog.csdn.net/txl199106/article/details/45315703" target="_blank" rel="external">传送门</a></p>
<p>查询x在y中的出现次数，我们可以离线搞</p>
<p>对于每个询问，从y向x连边，那么我们在跑AC自动机时，每得到一个串就可以计算该串对应的x的答案</p>
<p>关于删除操作，只需要在建AC自动机时返回父节点即可，注意下面代码中的fail和f不可混淆</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 200010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN],qe[MAXN];</div><div class="line"><span class="keyword">int</span> n,m,cnt,len,dfs_clock,ans[MAXN],pos[MAXN],fail[MAXN],f[MAXN],q[MAXN],Link[MAXN],qLink[MAXN],L[MAXN],R[MAXN],c[MAXN],tr[MAXN][<span class="number">26</span>];</div><div class="line"><span class="keyword">char</span> ch[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span></span>&#123;<span class="keyword">while</span>(x&lt;=dfs_clock)c[x]+=v,x+=(x&amp;-x);&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">temp</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="keyword">while</span>(x)temp+=c[x],x-=(x&amp;-x);<span class="keyword">return</span> temp;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> now=<span class="number">0</span>,id=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(ch[i]==<span class="string">'P'</span>) pos[++id]=now;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(ch[i]==<span class="string">'B'</span>) now=f[now];</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">if</span>(!tr[now][ch[i]-<span class="string">'a'</span>])  tr[now][ch[i]-<span class="string">'a'</span>]=++cnt,f[cnt]=now;</div><div class="line">			now=tr[now][ch[i]-<span class="string">'a'</span>];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)  <span class="keyword">if</span>(tr[<span class="number">0</span>][i])  q[++tail]=tr[<span class="number">0</span>][i];</div><div class="line">	<span class="keyword">while</span>(++head&lt;=tail)&#123;</div><div class="line">		<span class="keyword">int</span> x=q[head];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)&#123;</div><div class="line">			<span class="keyword">if</span>(!tr[x][i])  tr[x][i]=tr[fail[x]][i];</div><div class="line">			<span class="keyword">else</span> fail[tr[x][i]]=tr[fail[x]][i],q[++tail]=tr[x][i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)  insert(fail[i],i);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>); n=<span class="built_in">strlen</span>(ch+<span class="number">1</span>);</div><div class="line">	extend();  build();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		qe[i].next=qLink[y];qLink[y]=i;qe[i].y=x;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	L[x]=++dfs_clock;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">		dfs(e[i].y);</div><div class="line">	R[x]=++dfs_clock;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	dfs(<span class="number">0</span>);  <span class="keyword">int</span> now=<span class="number">0</span>,id=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(ch[i]==<span class="string">'P'</span>)&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=qLink[++id];j;j=qe[j].next)&#123;</div><div class="line">				<span class="keyword">int</span> x=pos[qe[j].y];</div><div class="line">				ans[j]=get(R[x])-get(L[x]<span class="number">-1</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(ch[i]==<span class="string">'B'</span>) add(L[now],<span class="number">-1</span>),now=f[now];</div><div class="line">		<span class="keyword">else</span> now=tr[now][ch[i]-<span class="string">'a'</span>],add(L[now],<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	init();</div><div class="line">	solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> AC自动机 </tag>
            
            <tag> 树状数组 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1823】满汉全席]]></title>
      <url>/2017/03/06/1823/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1823" target="_blank" rel="external">AC通道</a></p>
<hr>
<p>不管是这一段的CF，还是今天的测试，cydiater大神都多次提到2-sat问题，为此我在今晚恶补一发</p>
<p>所谓2-sat，其实是一种图论模型，用于解决集合元素的双决策问题</p>
<p>比如这题就是一个板子</p>
<p>2-sat巧妙地将元素的决策问题转化为了图论模型，并以O(m)的优越复杂度解决问题，确实很妙</p>
<p>这里记录一下做题时犯得sb错误：</p>
<blockquote>
<p>（1）读入函数写错(zz真是没救了)<br>（2）int类型的get()函数没有return<br>（3）数组开小</p>
</blockquote>
<p>犯这种错误我也是醉了，还好我静态差错能力较强，否则一晚上就进去了</p>
<p>留一个代码作为2-sat的板子</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 20100</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN&lt;&lt;<span class="number">1</span>];</div><div class="line"><span class="keyword">int</span> n,m,top,len,bcnt,dfs_clock,Link[MAXN],vis[MAXN],st[MAXN],dfn[MAXN],low[MAXN],belong[MAXN];</div><div class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">	<span class="keyword">return</span> x*f;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> x; <span class="keyword">char</span> ch=getchar();</div><div class="line">	<span class="keyword">while</span>(ch!=<span class="string">'m'</span>&amp;&amp;ch!=<span class="string">'h'</span>)  ch=getchar();</div><div class="line">	<span class="keyword">if</span>(ch==<span class="string">'m'</span>) x=read()*<span class="number">2</span>;</div><div class="line">	<span class="keyword">else</span> x=read()*<span class="number">2</span><span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> x;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	dfn[x]=low[x]=++dfs_clock; st[++top]=x; vis[x]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)&#123;</div><div class="line">		<span class="keyword">if</span>(!dfn[e[i].y])&#123;</div><div class="line">			tarjan(e[i].y);</div><div class="line">			cmin(low[x],low[e[i].y]);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(vis[e[i].y])  cmin(low[x],dfn[e[i].y]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(dfn[x]==low[x])&#123;</div><div class="line">		bcnt++; <span class="keyword">int</span> y;</div><div class="line">		<span class="keyword">do</span>&#123;</div><div class="line">			y=st[top--];</div><div class="line">			belong[y]=bcnt;</div><div class="line">			vis[y]=<span class="number">0</span>;</div><div class="line">		&#125;<span class="keyword">while</span>(x!=y);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	top=bcnt=len=dfs_clock=<span class="number">0</span>;</div><div class="line">	<span class="built_in">memset</span>(Link,<span class="number">0</span>,<span class="keyword">sizeof</span>(Link));</div><div class="line">	<span class="built_in">memset</span>(dfn,<span class="number">0</span>,<span class="keyword">sizeof</span>(dfn));</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	top=dfs_clock=len=bcnt=<span class="number">0</span>;</div><div class="line">	n=read();  m=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n;i++) Link[i]=dfn[i]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=get(),y=get(),xp,yp;</div><div class="line">		<span class="keyword">int</span> px=(x&amp;<span class="number">1</span>?x+<span class="number">1</span>:x<span class="number">-1</span>),py=(y&amp;<span class="number">1</span>?y+<span class="number">1</span>:y<span class="number">-1</span>);</div><div class="line">		insert(x,py);  insert(y,px);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;++i) <span class="keyword">if</span>(!dfn[i]) tarjan(i);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i+=<span class="number">2</span>) <span class="keyword">if</span>(belong[i]==belong[i+<span class="number">1</span>]) &#123;<span class="built_in">puts</span>(<span class="string">"BAD"</span>); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="built_in">puts</span>(<span class="string">"GOOD"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 2-sat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj4276】Bajtman i Okrągły Robin]]></title>
      <url>/2017/03/03/4276/</url>
      <content type="html"><![CDATA[<ul>
<li>线段树优化网络流真是一颗赛艇<a id="more"></a></li>
</ul>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这题的费用流建图是很显然的，把盗贼和时间看成点，每个盗贼向一段区间内的时间点连边，流量为$1$费用为$c[i]$</p>
<p>从$S$向$i$连边，流量为$1$费用为$0$，从$t$向$T$连边，流量为$1$费用为$0$</p>
<p>但是这样建图，边数的上界是$n^2$的，而连的边又是一段区间，我们考虑用线段树优化。</p>
<p>把时间的节点建成线段树，每次连边找对应的区间就行了</p>
<p>注意：线段树上的边流量为$INF$</p>
<p>通过这道题，我发现了$bzoj$有每日提交$50$次的限制。。。</p>
<!-- ![](http://images.cnblogs.com/cnblogs_com/chty/960092/o_2.png) -->
<p><img src="http://images.cnblogs.com/cnblogs_com/chty/960092/o_2.png"></p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=(<span class="keyword">int</span>)<span class="number">1e9</span>,MAXN=<span class="number">65000</span>,D=<span class="number">50</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,w,rel;&#125;e[(MAXN+D)&lt;&lt;<span class="number">5</span>];</div><div class="line"><span class="keyword">int</span> n,S,T,len,ans,c[MAXN+D],Link[MAXN+D],flow[MAXN+D],dis[MAXN+D],vis[MAXN+D],q[MAXN+D],lastnode[MAXN+D],lastedge[MAXN+D];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].w=-w;e[len].rel=len+<span class="number">1</span>;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;e[len].w=w;e[len].rel=len<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;r) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(l==r)&#123;insert(p+n,T,<span class="number">1</span>,<span class="number">0</span>); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;  </div><div class="line">	insert(p+n,(p&lt;&lt;<span class="number">1</span>)+n,INF,<span class="number">0</span>); insert(p+n,(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>)+n,INF,<span class="number">0</span>);</div><div class="line">	build(p&lt;&lt;<span class="number">1</span>,l,mid);  build(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> i)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)&#123;</div><div class="line">		insert(i,p+n,<span class="number">1</span>,c[i]); <span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	find(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,i); find(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,i);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">	<span class="built_in">memset</span>(dis,<span class="number">10</span>,<span class="keyword">sizeof</span>(dis));</div><div class="line">	<span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">1</span>,oo=dis[<span class="number">0</span>];</div><div class="line">	q[<span class="number">1</span>]=S;  vis[S]=<span class="number">1</span>; dis[S]=<span class="number">0</span>; flow[S]=INF;</div><div class="line">	<span class="keyword">while</span>(head!=tail)&#123;</div><div class="line">		<span class="keyword">int</span> x=q[++head];  vis[x]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(head==MAXN)  head=<span class="number">0</span>;  </div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)&#123;</div><div class="line">			<span class="keyword">if</span>(e[i].v&amp;&amp;e[i].w+dis[x]&lt;dis[e[i].y])&#123;</div><div class="line">				dis[e[i].y]=dis[x]+e[i].w;</div><div class="line">				flow[e[i].y]=min(flow[x],e[i].v);</div><div class="line">				lastnode[e[i].y]=x; lastedge[e[i].y]=i;</div><div class="line">				<span class="keyword">if</span>(!vis[e[i].y])&#123;</div><div class="line">					q[++tail]=e[i].y;</div><div class="line">					vis[e[i].y]=<span class="number">1</span>;</div><div class="line">					<span class="keyword">if</span>(tail==MAXN)  tail=<span class="number">0</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(dis[T]==oo)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	ans+=dis[T]*(-flow[T]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=T;i!=S;i=lastnode[i])&#123;</div><div class="line">		e[lastedge[i]].v-=flow[T];</div><div class="line">		e[e[lastedge[i]].rel].v+=flow[T];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read(); S=<span class="number">0</span>; T=<span class="number">30000</span>; build(<span class="number">1</span>,<span class="number">1</span>,<span class="number">5000</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read()<span class="number">-1</span>; c[i]=read();</div><div class="line">		find(<span class="number">1</span>,<span class="number">1</span>,<span class="number">5000</span>,x,y,i);</div><div class="line">		insert(S,i,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span>(spfa());</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> bzoj </tag>
            
            <tag> 费用流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3218/uoj#77】a+b Problem]]></title>
      <url>/2017/03/02/3218/</url>
      <content type="html"><![CDATA[<ul>
<li>用主席树优化网络流真是一颗赛艇<a id="more"></a></li>
</ul>
<p><a href="http://uoj.ac/problem/77" target="_blank" rel="external">AC通道一</a> <a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3218" target="_blank" rel="external">AC通道二</a></p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先看到这种题目，就有一种最小割的冲动，其实正解就是最小割</p>
<p>这题$POPOQQQ$大爷讲的非常好,<a href="http://blog.csdn.net/PoPoQQQ/article/details/42557217" target="_blank" rel="external">传送门</a></p>
<p>注意维护主席树时，如果到了叶子节点，我们需要连一条从上一版本的树所对应的节点出发指向该叶子节点的边，这样做的原因很显然</p>
<p>PS：$bzoj$丧心病狂卡空间，蒟蒻只好膜拜了$Cydiater$的代码才卡过去</p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 5010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,rel;&#125;e[MAXN&lt;&lt;<span class="number">7</span>];</div><div class="line"><span class="keyword">int</span> n,len,cnt,tot,ans,S,T,Link[MAXN&lt;&lt;<span class="number">6</span>],A[MAXN],B[MAXN],W[MAXN],P[MAXN],L[MAXN],R[MAXN],num[MAXN&lt;&lt;<span class="number">6</span>],hash[MAXN&lt;&lt;<span class="number">6</span>];</div><div class="line"><span class="keyword">int</span> level[MAXN&lt;&lt;<span class="number">6</span>],root[MAXN],son[MAXN&lt;&lt;<span class="number">6</span>][<span class="number">2</span>],id[MAXN][<span class="number">2</span>];</div><div class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].rel=len+<span class="number">1</span>;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;e[len].rel=len<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> l=<span class="number">1</span>,r=tot;</div><div class="line">	<span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)&#123;</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(hash[mid]&lt;=x)l=mid;</div><div class="line">		<span class="keyword">else</span> r=mid;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> hash[l]==x?l:r;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">newnode</span><span class="params">(<span class="keyword">int</span> last)</span></span>&#123;</div><div class="line">	son[++cnt][<span class="number">0</span>]=son[last][<span class="number">0</span>];</div><div class="line">	son[cnt][<span class="number">1</span>]=son[last][<span class="number">1</span>];</div><div class="line">	<span class="keyword">return</span> cnt;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> &amp;root,<span class="keyword">int</span> last,<span class="keyword">int</span> x,<span class="keyword">int</span> pos)</span></span>&#123;</div><div class="line">	root=newnode(last);</div><div class="line">	<span class="keyword">if</span>(l==r)  &#123;add(pos,root,INF);<span class="keyword">if</span>(last) add(last,root,INF); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>; </div><div class="line">	<span class="keyword">if</span>(x&lt;=mid)  insert(l,mid,son[root][<span class="number">0</span>],son[last][<span class="number">0</span>],x,pos);</div><div class="line">	<span class="keyword">else</span> insert(mid+<span class="number">1</span>,r,son[root][<span class="number">1</span>],son[last][<span class="number">1</span>],x,pos);</div><div class="line">	<span class="keyword">if</span>(son[root][<span class="number">0</span>]) add(son[root][<span class="number">0</span>],root,INF); </div><div class="line">	<span class="keyword">if</span>(son[root][<span class="number">1</span>]) add(son[root][<span class="number">1</span>],root,INF);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> root,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> pos)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r) &#123;add(root,pos,INF); <span class="keyword">return</span>;&#125;</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	<span class="keyword">if</span>(mid&gt;=x) query(l,mid,son[root][<span class="number">0</span>],x,y,pos);</div><div class="line">	<span class="keyword">if</span>(mid+<span class="number">1</span>&lt;=y) query(mid+<span class="number">1</span>,r,son[root][<span class="number">1</span>],x,y,pos);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(level,<span class="number">-1</span>,<span class="keyword">sizeof</span>(level));</div><div class="line">	q.push(S); level[S]=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(!q.empty())&#123;</div><div class="line">		<span class="keyword">int</span> x=q.front(); q.pop();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">			<span class="keyword">if</span>(level[e[i].y]&lt;<span class="number">0</span>&amp;&amp;e[i].v)&#123;</div><div class="line">				q.push(e[i].y);</div><div class="line">				level[e[i].y]=level[x]+<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> level[T]&gt;=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">MAXFLOW</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> flow)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x==T)  <span class="keyword">return</span> flow;</div><div class="line">	<span class="keyword">int</span> maxflow=<span class="number">0</span>,d=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i&amp;&amp;maxflow&lt;flow;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(e[i].v&amp;&amp;level[e[i].y]==level[x]+<span class="number">1</span>)</div><div class="line">			<span class="keyword">if</span>(d=MAXFLOW(e[i].y,min(e[i].v,flow-maxflow)))&#123;</div><div class="line">				e[i].v-=d; e[e[i].rel].v+=d; maxflow+=d;</div><div class="line">			&#125;</div><div class="line">	<span class="keyword">if</span>(!maxflow)  level[x]=<span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> maxflow;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> d=<span class="number">0</span>;</div><div class="line">	<span class="keyword">while</span>(bfs()) <span class="keyword">while</span>(d=MAXFLOW(S,INF)) ans-=d;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  </div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		A[i]=read(); B[i]=read();W[i]=read();L[i]=read();R[i]=read();P[i]=read();</div><div class="line">		num[++cnt]=A[i]; num[++cnt]=L[i]; num[++cnt]=R[i]; ans+=B[i]+W[i];</div><div class="line">	&#125;</div><div class="line">	sort(num+<span class="number">1</span>,num+cnt+<span class="number">1</span>); hash[++tot]=num[<span class="number">1</span>];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=cnt;++i) <span class="keyword">if</span>(num[i]!=num[i<span class="number">-1</span>]) hash[++tot]=num[i];</div><div class="line">	cnt=<span class="number">0</span>;  S=++cnt;  T=++cnt;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		id[i][<span class="number">0</span>]=++cnt;  id[i][<span class="number">1</span>]=++cnt;</div><div class="line">		add(S,id[i][<span class="number">0</span>],W[i]);  add(id[i][<span class="number">0</span>],T,B[i]);</div><div class="line">		add(id[i][<span class="number">1</span>],id[i][<span class="number">0</span>],P[i]);  query(<span class="number">1</span>,tot,root[i<span class="number">-1</span>],find(L[i]),find(R[i]),id[i][<span class="number">1</span>]);</div><div class="line">		insert(<span class="number">1</span>,tot,root[i],root[i<span class="number">-1</span>],find(A[i]),id[i][<span class="number">0</span>]);</div><div class="line">	&#125;</div><div class="line">	solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> uoj </tag>
            
            <tag> 最小割 </tag>
            
            <tag> 主席树 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1930】吃豆豆]]></title>
      <url>/2017/03/02/1930/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="吐槽"><a href="#吐槽" class="headerlink" title="吐槽"></a>吐槽</h2><p>先讲一个悲伤的故事</p>
<p><img src="http://i2.muimg.com/591838/66291490319a7993.png"></p>
<p>这是我从学OI至今提交次数最多的一道题，题目很水，但是很坑</p>
<p>首先这题卡空间，然后编译超时（excuse me？）</p>
<p>然后卡空间时各种RE</p>
<p>然后去膜大牛的代码，发现需要优化边数，然后又是各种wa</p>
<p>最后发现图建错了。。。。。</p>
<p>于是我的一下午就被这道水题坑走了</p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>问题可以转化为，吃豆人路径可以相交。因为如果路径相交，可以从相交位置开始交换两个吃豆人的后续路径。</p>
<p>考虑到所有豆之间组成了一张有向无环图，我们尝试网络流建模。</p>
<p>对于每个点，有经过次数限制和经过它的收益。</p>
<p>拆点费用流即可。</p>
<p>具体建模：</p>
<p>每个豆豆对应2个点ai,bi，另有S,SS,T,TT</p>
<p>SS-&gt;S流量2费用0</p>
<p>ai-&gt;bi要建两条边：一条流量为1费用1，一条流量为1费用为0；</p>
<p>S-&gt;ai流量INF费用0；bi-&gt;TT流量INF费用0。</p>
<p>TT-&gt;T流量2费用0</p>
<p>跑最大费用最大流即可。</p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000000</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">5010</span>;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next,v,w,rel;&#125;e[<span class="number">200000</span>];</div><div class="line"><span class="keyword">int</span> n,len,S,T,TT,ans,Link[MAXN],vis[MAXN],dis[MAXN],q[MAXN],lastnode[MAXN],lastedge[MAXN],flow[MAXN];</div><div class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; a[MAXN];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span>&#123;</div><div class="line">	e[++len].next=Link[x];Link[x]=len;e[len].y=y;e[len].v=v;e[len].w=-w;e[len].rel=len+<span class="number">1</span>;</div><div class="line">	e[++len].next=Link[y];Link[y]=len;e[len].y=x;e[len].v=<span class="number">0</span>;e[len].w=w;e[len].rel=len<span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</div><div class="line">	<span class="built_in">memset</span>(dis,<span class="number">10</span>,<span class="keyword">sizeof</span>(dis));</div><div class="line">	<span class="keyword">int</span> head=<span class="number">0</span>,tail=<span class="number">1</span>,oo=dis[<span class="number">0</span>]; </div><div class="line">	q[<span class="number">1</span>]=S; dis[S]=<span class="number">0</span>; vis[S]=<span class="number">1</span>; flow[S]=INF;</div><div class="line">	<span class="keyword">while</span>(head!=tail)&#123;</div><div class="line">		<span class="keyword">int</span> x=q[++head]; vis[x]=<span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(head==<span class="number">5000</span>) head=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)&#123;</div><div class="line">			<span class="keyword">if</span>(e[i].v&amp;&amp;e[i].w+dis[x]&lt;dis[e[i].y])&#123;</div><div class="line">				dis[e[i].y]=e[i].w+dis[x];</div><div class="line">				flow[e[i].y]=min(e[i].v,flow[x]);</div><div class="line">				<span class="keyword">if</span>(!vis[e[i].y])&#123;</div><div class="line">					vis[e[i].y]=<span class="number">1</span>;</div><div class="line">					q[++tail]=e[i].y;</div><div class="line">					<span class="keyword">if</span>(tail==<span class="number">5000</span>) tail=<span class="number">0</span>;</div><div class="line">				&#125;</div><div class="line">				lastnode[e[i].y]=x;  lastedge[e[i].y]=i;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(dis[T]==oo) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">	ans+=flow[T]*(-dis[T]);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=T;i!=S;i=lastnode[i])&#123;</div><div class="line">		e[lastedge[i]].v-=flow[T];</div><div class="line">		e[e[lastedge[i]].rel].v+=flow[T];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">while</span>(spfa());</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read(); S=n*<span class="number">2</span>+<span class="number">1</span>;  TT=S+<span class="number">1</span>;  T=TT+<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		a[i].first=read(); a[i].second=read();</div><div class="line">		insert(<span class="number">0</span>,i,<span class="number">2</span>,<span class="number">0</span>);  </div><div class="line">		insert(i,i+n,<span class="number">1</span>,<span class="number">1</span>);</div><div class="line">		insert(i,i+n,<span class="number">1</span>,<span class="number">0</span>);</div><div class="line">		insert(i+n,TT,<span class="number">2</span>,<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> maxx=INF;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">			<span class="keyword">if</span>(a[j].second&gt;=a[i].second&amp;&amp;a[j].second&lt;maxx)&#123;</div><div class="line">				insert(i+n,j,<span class="number">2</span>,<span class="number">0</span>);</div><div class="line">				maxx=a[j].second;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	insert(S,<span class="number">0</span>,<span class="number">2</span>,<span class="number">0</span>); insert(TT,T,<span class="number">2</span>,<span class="number">0</span>);</div><div class="line">	solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="附makedata程序"><a href="#附makedata程序" class="headerlink" title="附makedata程序"></a>附makedata程序</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="built_in">map</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;,<span class="keyword">int</span>&gt;M;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	srand(time(<span class="literal">NULL</span>));</div><div class="line">	<span class="keyword">int</span> n=<span class="number">2000</span>; <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</div><div class="line">	<span class="comment">/*for(int i=1;i&lt;=n/2;++i)&#123;</span></div><div class="line">		printf("%d %d\n",i,i);</div><div class="line">	&#125;*/<span class="comment">//构造数据</span></div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=rand()%<span class="number">1000</span>+<span class="number">1</span>,y=rand()%<span class="number">1000</span>+<span class="number">1</span>;</div><div class="line">		<span class="keyword">while</span>(M[make_pair(x,y)]) x=rand()%<span class="number">1000</span>+<span class="number">1</span>,y=rand()%<span class="number">1000</span>+<span class="number">1</span>;</div><div class="line">		M[make_pair(x,y)]=<span class="number">1</span>;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,x,y);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 费用流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1457】棋盘游戏]]></title>
      <url>/2017/03/02/1457/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这个问题与我们之前遇到的并不类似。我们擅长的问题通常是“不能操作者判负”的问题。因此，我们尝试转化。</p>
<p>注意到，如果初始情况下，有皇后可以通过一步操作直接到达，那么先手只要这么操作，就能直接获胜，因此这种局面是先手必胜的。</p>
<p>否则，玩家除非走投无路，否则一定不能把皇后移动到这些“通过一步操作可以直接到达”的位置（下面简称“禁区”）。也就是说，如果认为这些禁区是不能停留的，那么原问题就转化为了不能操作者判负的问题。</p>
<p>经过这样的转化，模型就不难建出了，这是一个有向无环图，直接按定义计算出每个位置的SG函数值并计算答案即可。</p>
<p>——题解来自王队长《OI中的博弈论》</p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e3</span>,D=<span class="number">50</span>;</div><div class="line"><span class="keyword">int</span> a[MAXN+D],b[MAXN+D],check[MAXN+D],sg[<span class="number">105</span>][<span class="number">105</span>];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">99</span>;++i) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">99</span>;++j)&#123;</div><div class="line">		<span class="keyword">if</span>(i==j||i*j==<span class="number">0</span>)  <span class="keyword">continue</span>;</div><div class="line">		<span class="built_in">memset</span>(check,<span class="number">0</span>,<span class="keyword">sizeof</span>(check));</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;min(i,j);++k)check[sg[i-k][j-k]]=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;i;++k)<span class="keyword">if</span>(i-k!=j)check[sg[i-k][j]]=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;j;++k)<span class="keyword">if</span>(i!=j-k)check[sg[i][j-k]]=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=MAXN;++k)<span class="keyword">if</span>(!check[k])&#123;sg[i][j]=k;<span class="keyword">break</span>;&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> n=read(),ans(<span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read(),b[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  ans^=sg[a[i]][b[i]];</div><div class="line">	<span class="built_in">puts</span>(ans?<span class="string">"^o^"</span>:<span class="string">"T_T"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 博弈论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1188】分裂游戏]]></title>
      <url>/2017/03/02/1188/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>可以发现，每个石子互相独立，且位置相同的石子等价。所以我们可以预处理出每个位置的$SG$函数值。</p>
<p>如果令状态$u$表示有一枚石子在第$u$堆的状态，那么它的后继状态就是所有“有一枚石子在$j$，一枚石子在$k$，且$j,k$在$u$的右边”的状态。</p>
<p>也就是说，$SG(u)=mex${$SG(j) xor SG(k)|j,k&gt;u$}</p>
<p>最后，我们求出所有石子的$SG$函数值（每个石子的SG函数值为其初始位置的$SG$函数值）的异或和，判断其是否为$0$，即可求得答案。</p>
<p>对于第一步操作，我们可以按字典序枚举之，再计算进行操作后的先后手必胜情况，来判断这一操作是否合法。</p>
<p>——题解来自王队长《OI中的博弈论》 </p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e4</span>,D=<span class="number">50</span>;</div><div class="line"><span class="keyword">int</span> ans[<span class="number">5</span>],a[<span class="number">25</span>],check[MAXN+D],sg[MAXN+D];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">	<span class="built_in">memset</span>(check,<span class="number">0</span>,<span class="keyword">sizeof</span>(check));</div><div class="line">	<span class="built_in">memset</span>(sg,<span class="number">0</span>,<span class="keyword">sizeof</span>(sg));</div><div class="line">	<span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;--i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;++j)<span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;=n;++k)check[sg[j]^sg[k]]=i;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=MAXN;++j)<span class="keyword">if</span>(check[j]!=i)&#123;sg[i]=j;<span class="keyword">break</span>;&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="keyword">if</span>(a[i]&amp;<span class="number">1</span>)ans[<span class="number">0</span>]^=sg[i];</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i;--i)<span class="keyword">for</span>(<span class="keyword">int</span> j=n;j&gt;=i+<span class="number">1</span>;--j)<span class="keyword">for</span>(<span class="keyword">int</span> k=n;k&gt;=j;--k)</div><div class="line">		<span class="keyword">if</span>((ans[<span class="number">0</span>]^sg[i]^sg[j]^sg[k])==<span class="number">0</span>)  ans[<span class="number">1</span>]=i,ans[<span class="number">2</span>]=j,ans[<span class="number">3</span>]=k,ans[<span class="number">4</span>]++;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d %d\n%d\n"</span>,ans[<span class="number">1</span>]<span class="number">-1</span>,ans[<span class="number">2</span>]<span class="number">-1</span>,ans[<span class="number">3</span>]<span class="number">-1</span>,ans[<span class="number">4</span>]);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T) solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 博弈论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1874】取石子游戏]]></title>
      <url>/2017/03/02/1874/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1874" target="_blank" rel="external">AC通道</a></p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先我们求出所有状态的$SG$函数，很显然这道题中$x$的后继状态为$succ(x)=${$ x-v |v\in B $}</p>
<p>那么所有$SG(A[i])$的抑或和不为$0$是先手必胜的条件</p>
<p>至于输出方案，暴力枚举即可</p>
<p>这道题目告诉我一定要注意位运算的优先级，博主因为这个wa掉多次</p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e3</span>,D=<span class="number">50</span>;</div><div class="line"><span class="keyword">int</span> n,m,ans,a[<span class="number">15</span>],b[<span class="number">15</span>],check[MAXN+D],sg[MAXN+D];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">	m=read();  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)  b[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j) <span class="keyword">if</span>(i-b[j]&gt;=<span class="number">0</span>) check[sg[i-b[j]]]=i;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=MAXN;++j) <span class="keyword">if</span>(check[j]!=i) &#123;sg[i]=j; <span class="keyword">break</span>;&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  ans^=sg[a[i]];</div><div class="line">	<span class="keyword">if</span>(ans)&#123;</div><div class="line">		<span class="built_in">puts</span>(<span class="string">"YES"</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</div><div class="line">				<span class="keyword">if</span>((ans^sg[a[i]]^sg[a[i]-b[j]])==<span class="number">0</span>)&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,i,b[j]);</div><div class="line">					<span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"NO"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 博弈论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1115】石子游戏Kam]]></title>
      <url>/2017/03/02/1115/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1115" target="_blank" rel="external">AC通道</a></p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>每堆石子的个数不少于前一堆石子的个数可以看成是相邻两堆石子时间的个数差保持非负。</p>
<p>于是可以把这些石子差看做石子，每次操作会将其中一堆石子减去一个值，又会将它后面的一堆加上相等的值，就可以看做是把这一堆推到它后面的一堆。</p>
<p>于是转化成了阶梯博弈。</p>
<p>手瞎眼瞎的博主犯了很低级的错误：把输出中的”NIE”打成了”NIM”，然后就是无限wa</p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">int</span> n,a[<span class="number">1010</span>];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read(); <span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i-=<span class="number">2</span>)  ans^=(a[i]-a[i<span class="number">-1</span>]);</div><div class="line">	<span class="built_in">puts</span>(ans?<span class="string">"TAK"</span>:<span class="string">"NIE"</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;--T)  solve();</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 博弈论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2693】jzptab]]></title>
      <url>/2017/03/01/2693/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2693" target="_blank" rel="external">AC通道</a></p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这题是$bzoj2154$的加强版</p>
<p>由于多组数据，我们像$bzoj2154$那样的$O(n)$做法已经不行了，考虑进一步优化</p>
<p>$ans=\sum_{d=1}^{min(n,m)}d\times F(\left [ \frac{n}{d} \right ],\left [ \frac{m}{d} \right ])=\sum_{d=1}^{min(n,m)}d\sum_{i=1}^{min(n,m)}i^2 \times \mu(i)\times Sum(\left [ \frac{n}{di} \right ],\left [ \frac{m}{di} \right ])=\sum_{D=1}^{min(n,m)}Sum(\left [ \frac{n}{d} \right ],\left [ \frac{m}{d} \right ])\sum_{i|d}^{ }\frac{D}{i}\times i^2\times \mu(i)$</p>
<p>我们发现$\sum_{i|d}^{ }\frac{D}{i}\times i^2\times \mu(i)$可以用前缀和来优化</p>
<p>注意到积性函数的约数和也是积性函数</p>
<p>因此后面的那坨东西可以利用线性筛求出来</p>
<p>线性筛当$i%prime[j]=0$时不满足积性函数的条件，但是由于此时$\mu(prime[j])=0$，故多出来的因数的函数值都是0，增加的只有原先因数的答案乘了个$prime[j]$而已</p>
<p>然后我们就可以$O(\sqrt n)$回答询问了</p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e7</span>,D=<span class="number">50</span>,mod=(<span class="keyword">int</span>)(<span class="number">20101009</span>);</div><div class="line"><span class="keyword">int</span> cnt,check[MAXN+D],prime[MAXN+D];</div><div class="line">ll sum[MAXN+D];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	sum[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i])  prime[++cnt]=i,sum[i]=(i-(ll)i*i)%mod;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=MAXN;++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) &#123;sum[i*prime[j]]=(sum[i]*prime[j])%mod; <span class="keyword">break</span>;&#125;</div><div class="line">			sum[i*prime[j]]=(sum[i]*sum[prime[j]])%mod;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;++i)  sum[i]+=sum[i<span class="number">-1</span>]%mod,sum[i]%=mod;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">get</span><span class="params">(ll x,ll y)</span> </span>&#123;<span class="keyword">return</span> ((x*(x+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>)%mod)*((y*(y+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>)%mod)%mod;&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(n&gt;m)  swap(n,m);  <span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,last;i&lt;=n;i=last+<span class="number">1</span>)&#123;</div><div class="line">		last=min(n/(n/i),m/(m/i));</div><div class="line">		ans+=(sum[last]-sum[i<span class="number">-1</span>])*get(n/i,m/i)%mod;</div><div class="line">		ans%=mod;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(ans+mod)%mod);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	pre();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> T=read();T;T--)&#123;</div><div class="line">		<span class="keyword">int</span> n=read(),m=read();</div><div class="line">		solve(n,m);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 莫比乌斯反演 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2154】Crash的数字表格]]></title>
      <url>/2017/03/01/2154/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2154" target="_blank" rel="external">AC通道</a></p>
<hr>
<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>一句话题意：给定n,m,求$\sum_{i=1}^{n}\sum_{j=1}^{m}lcm(i,j)(n,m&lt;=10^7)$</p>
<p>-<br>-</p>
<hr>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>$ans=\sum_{i=1}^{n}\sum_{j=1}^{m}lcm(i,j)=\sum_{i=1}^{n}\sum_{j=1}^{m}\frac{i\times j}{gcd(i,j)}$</p>
<p>令$d=gcd(i,j)$，$F(x,y)=\sum_{1&lt;=i&lt;=x,1&lt;=j&lt;=y,gcd(i,j)=1}^{ }i \times j$</p>
<p>然后我们枚举$d$，则有$ans=\sum_{d=1}^{min(n,m)}\frac{d^2 \times F(\left [ \frac{n}{d} \right ],\left [ \frac{m}{d} \right ])}{d}=\sum_{d=1}^{min(n,m)}d\times F(\left [ \frac{n}{d} \right ],\left [ \frac{m}{d} \right ])$  </p>
<p>令$Sum(x,y)=\sum_{i=1}^{x}\sum_{j=1}^{y}i \times j=\frac{x(x-1)}{2}\times\frac{y(y-1)}{2}$</p>
<p>显然$Sum(x,y)=\sum_{i=1}^{min(x,y)}i^2 \times F(\left [ \frac{x}{i} \right ],\left [ \frac{y}{i} \right ])$</p>
<p>通过莫比乌斯反演可得$F(x,y)=\sum_{i=1}^{min(x,y)}i^2\times \mu(i)\times Sum(\left [ \frac{x}{i} \right ],\left [ \frac{y}{i} \right ])$</p>
<p>这两个式子都可以进行$O(\sqrt n)$的计算，所以总的时间复杂度是$O(n)$</p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e7</span>,D(<span class="number">50</span>),mod=<span class="number">20101009</span>;</div><div class="line"><span class="keyword">int</span> n,m,cnt,prime[MAXN+D],check[MAXN+D],mu[MAXN+D];</div><div class="line">ll ans,sum[MAXN+D];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	mu[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=min(n,m);++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i])  prime[++cnt]=i,mu[i]=<span class="number">-1</span>;</div><div class="line">		<span class="keyword">for</span>(ll j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=min(n,m);++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)  &#123;mu[i*prime[j]]=<span class="number">0</span>; <span class="keyword">break</span>;&#125;</div><div class="line">			mu[i*prime[j]]=-mu[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=min(n,m);++i)  sum[i]=((sum[i<span class="number">-1</span>]+(mu[i]*i*i%mod)+mod)%mod+mod)%mod;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">cal</span><span class="params">(ll x,ll y)</span></span>&#123;<span class="keyword">return</span> ((x*(x+<span class="number">1</span>)/<span class="number">2</span>%mod)*(y*(y+<span class="number">1</span>)/<span class="number">2</span>%mod))%mod;&#125;</div><div class="line"><span class="function">ll <span class="title">get</span><span class="params">(ll x,ll y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;y)  swap(x,y);  <span class="function">ll <span class="title">temp</span><span class="params">(<span class="number">0</span>)</span></span>;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>,last;i&lt;=x;i=last+<span class="number">1</span>)&#123;</div><div class="line">		last=min(x/(x/i),y/(y/i));</div><div class="line">		temp+=((sum[last]-sum[i<span class="number">-1</span>])*cal(x/i,y/i))%mod;</div><div class="line">		temp%=mod;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> temp;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  m=read();  pre();</div><div class="line">	<span class="keyword">if</span>(n&gt;m)  swap(n,m);</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>,last;i&lt;=n;i=last+<span class="number">1</span>)&#123;</div><div class="line">		last=min(n/(n/i),m/(m/i));</div><div class="line">		ans+=(i+last)*(last-i+<span class="number">1</span>)/<span class="number">2</span>%mod*get(n/i,m/i)%mod;</div><div class="line">		ans%=mod;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ans+mod)%mod);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 莫比乌斯反演 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[0228考试总结]]></title>
      <url>/2017/02/28/0228%E8%80%83%E8%AF%95%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<ul>
<li>辣鸡果然倒数<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2440" target="_blank" rel="external">AC通道</a></p>
<p>本次测试略显失败，辣鸡25分滚粗，而三位大佬都是100+</p>
<h2 id="T1宏大的区间"><a href="#T1宏大的区间" class="headerlink" title="T1宏大的区间"></a>T1宏大的区间</h2><p>来自$bzoj3226$，数据加强了一下</p>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3226" target="_blank" rel="external">传送门</a></p>
<p>这题是一道比较裸的线段树题目，维护方法也很简单</p>
<p>但是考试中没有想到使用线段树维护区间，我想到了一个与线段树复杂度同阶的二分+枚举算法，在写了100多行的if大讨论后认为这题不可做，放弃了。</p>
<p>首先我们把开区间离散一下，比如$(2,5)$我们可以认为是$[2.5,4.5]$</p>
<p>然后把所有坐标乘2，然后认为奇数坐标为开，偶数坐标为闭</p>
<p>然后上线段树即可，注意标记的下传</p>
<p>写好程序后蒟蒻发现读入写挂了。。。果然是我弱啊</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"interval"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">524287</span>,D=<span class="number">50</span>;</div><div class="line"><span class="keyword">int</span> tr[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line"><span class="keyword">char</span> opt[<span class="number">5</span>];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(tr[p]==<span class="number">1</span>||tr[p]==<span class="number">-1</span>)&#123;</div><div class="line">		tr[p*<span class="number">2</span>]=tr[p*<span class="number">2</span>+<span class="number">1</span>]=tr[p];</div><div class="line">	&#125;<span class="keyword">else</span></div><div class="line">	<span class="keyword">if</span>(tr[p]==<span class="number">2</span>)&#123;</div><div class="line">		tr[p*<span class="number">2</span>]=-tr[p*<span class="number">2</span>];</div><div class="line">		tr[p*<span class="number">2</span>+<span class="number">1</span>]=-tr[p*<span class="number">2</span>+<span class="number">1</span>];</div><div class="line">	&#125;</div><div class="line">	tr[p]=<span class="number">-2</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  &#123;tr[p]=v;  <span class="keyword">return</span>;&#125;</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	insert(p&lt;&lt;<span class="number">1</span>,l,mid,x,y,v); insert(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y,v);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">updata</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  &#123;tr[p]=-tr[p]; <span class="keyword">return</span>;&#125;</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	updata(p&lt;&lt;<span class="number">1</span>,l,mid,x,y);  updata(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;=r)  <span class="keyword">return</span>;</div><div class="line">	pushdown(p);</div><div class="line">	<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">	clear(p&lt;&lt;<span class="number">1</span>,l,mid);  clear(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="built_in">memset</span>(tr,<span class="number">-1</span>,<span class="keyword">sizeof</span>(tr));</div><div class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,opt+<span class="number">1</span>)!=EOF)&#123;</div><div class="line">		<span class="keyword">char</span> ch=getchar();</div><div class="line">		<span class="keyword">while</span>(ch!=<span class="string">'('</span>&amp;&amp;ch!=<span class="string">'['</span>) ch=getchar();</div><div class="line">		<span class="keyword">int</span> flag=(ch==<span class="string">'('</span>),a,b;  <span class="built_in">scanf</span>(<span class="string">"%d,%d"</span>,&amp;a,&amp;b);</div><div class="line">		a=a*<span class="number">2</span>+flag;  ch=getchar();</div><div class="line">		<span class="keyword">while</span>(ch!=<span class="string">')'</span>&amp;&amp;ch!=<span class="string">']'</span>) ch=getchar();</div><div class="line">		flag=(ch==<span class="string">')'</span>); b=b*<span class="number">2</span>-flag;		</div><div class="line">		<span class="keyword">if</span>(opt[<span class="number">1</span>]==<span class="string">'U'</span>)  insert(<span class="number">1</span>,<span class="number">0</span>,MAXN,a,b,<span class="number">1</span>);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt[<span class="number">1</span>]==<span class="string">'I'</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(a)  insert(<span class="number">1</span>,<span class="number">0</span>,MAXN,<span class="number">0</span>,a<span class="number">-1</span>,<span class="number">-1</span>);</div><div class="line">			insert(<span class="number">1</span>,<span class="number">0</span>,MAXN,b+<span class="number">1</span>,MAXN,<span class="number">-1</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt[<span class="number">1</span>]==<span class="string">'D'</span>)  insert(<span class="number">1</span>,<span class="number">0</span>,MAXN,a,b,<span class="number">-1</span>);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(opt[<span class="number">1</span>]==<span class="string">'C'</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(a)  insert(<span class="number">1</span>,<span class="number">0</span>,MAXN,<span class="number">0</span>,a<span class="number">-1</span>,<span class="number">-1</span>);</div><div class="line">			insert(<span class="number">1</span>,<span class="number">0</span>,MAXN,b+<span class="number">1</span>,MAXN,<span class="number">-1</span>);</div><div class="line">			updata(<span class="number">1</span>,<span class="number">0</span>,MAXN,a,b);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> updata(<span class="number">1</span>,<span class="number">0</span>,MAXN,a,b);</div><div class="line">	&#125;</div><div class="line">	clear(<span class="number">1</span>,<span class="number">0</span>,MAXN);  tr[MAXN]=<span class="number">-1</span>; <span class="keyword">int</span> flag=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(tr[i+MAXN+<span class="number">1</span>]==<span class="number">1</span>&amp;&amp;tr[i+MAXN]==<span class="number">-1</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(flag)&#123;</div><div class="line">				<span class="built_in">printf</span>(i&amp;<span class="number">1</span>?<span class="string">"("</span>:<span class="string">"["</span>);<span class="built_in">printf</span>(<span class="string">"%d,"</span>,i&gt;&gt;<span class="number">1</span>);</div><div class="line">				flag=<span class="number">0</span>; <span class="keyword">continue</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">" "</span>);<span class="built_in">printf</span>(i&amp;<span class="number">1</span>?<span class="string">"("</span>:<span class="string">"["</span>);<span class="built_in">printf</span>(<span class="string">"%d,"</span>,i&gt;&gt;<span class="number">1</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(tr[i+MAXN+<span class="number">1</span>]==<span class="number">-1</span>&amp;&amp;tr[i+MAXN]==<span class="number">1</span>)&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%d"</span>,i&gt;&gt;<span class="number">1</span>);<span class="built_in">printf</span>(i&amp;<span class="number">1</span>?<span class="string">"]"</span>:<span class="string">")"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span>(flag)  <span class="built_in">puts</span>(<span class="string">"empty set"</span>); </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>-<br>-<br>-</p>
<h2 id="T2滑稽"><a href="#T2滑稽" class="headerlink" title="T2滑稽"></a>T2滑稽</h2><p>题目大意：有4个数组A,B,C,D，一个四元组是滑稽的当且仅当每个元素来自不同的数组，且他们的乘积模P为1，其中P为质数。求有多少个滑稽的四元组。</p>
<p>说起这题我就心痛啊，由于没有开$long long$，我的正解只拿到了$25$分</p>
<p>这题做法很简单，将$A[i]\times {B[j]}$的值存入一个桶中，然后枚举$C[i]\times {D[j]}$，求其逆元，然后统计答案就行了</p>
<p>虽然评测时开$O2$，但是本地测试使用$map$约为$1.4s$，所以我将$map$改成了二分，成功卡进$0.6s$</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"huaji"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line">ll n,mod,cnt,ans,a[<span class="number">1010</span>],b[<span class="number">1010</span>],c[<span class="number">1010</span>],d[<span class="number">1010</span>],A[<span class="number">1001000</span>],B[<span class="number">1001000</span>];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(!b) &#123;x=<span class="number">1</span>; y=<span class="number">0</span>; <span class="keyword">return</span>;&#125;</div><div class="line">	exgcd(b,a%b,x,y);</div><div class="line">	ll t=x;x=y;y=t-a/b*y;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">findl</span><span class="params">(ll v)</span></span>&#123;</div><div class="line">	ll l=<span class="number">1</span>,r=cnt,temp(<span class="number">0</span>);</div><div class="line">	<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">		ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(B[mid]&lt;v)  l=mid+<span class="number">1</span>;</div><div class="line">		<span class="keyword">else</span> temp=mid,r=mid<span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> temp;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">findr</span><span class="params">(ll v)</span></span>&#123;</div><div class="line">	ll l=<span class="number">1</span>,r=cnt,temp(<span class="number">0</span>);</div><div class="line">	<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">		ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		<span class="keyword">if</span>(B[mid]&lt;=v)  &#123;temp=mid; l=mid+<span class="number">1</span>;&#125;</div><div class="line">		<span class="keyword">else</span> r=mid<span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> temp;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();  mod=read();</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)  a[i]=read()%mod;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)  b[i]=read()%mod;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)  c[i]=read()%mod;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)  d[i]=read()%mod;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">		<span class="keyword">for</span>(ll j=<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">			A[++cnt]=a[i]*b[j]%mod;</div><div class="line">	cnt=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;++i)</div><div class="line">		<span class="keyword">for</span>(ll j=<span class="number">1</span>;j&lt;=n;++j)</div><div class="line">			B[++cnt]=c[i]*d[j]%mod;</div><div class="line">	sort(B+<span class="number">1</span>,B+cnt+<span class="number">1</span>);</div><div class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n*n;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(A[i]==<span class="number">0</span>)  <span class="keyword">continue</span>;</div><div class="line">		ll x,y; exgcd(A[i],mod,x,y);</div><div class="line">		x=(x%mod+mod)%mod;</div><div class="line">		ll l=findl(x),r=findr(x);</div><div class="line">		<span class="keyword">if</span>(!l||!r)  <span class="keyword">continue</span>;</div><div class="line">		ans+=r-l+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="T3吨吨反应炉"><a href="#T3吨吨反应炉" class="headerlink" title="T3吨吨反应炉"></a>T3吨吨反应炉</h2><p>来自$bzoj4593$</p>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=4593" target="_blank" rel="external">传送门</a></p>
<p>这题数据略水，随便写一发就拿到了$bzoj$的$rank1$（主要还是写的人少）</p>
<p>正解：树形dp</p>
<p>我们用$f[i]$表示i节点不引爆父亲的情况下的最少花费，$h[i]$表示i节点在引爆父亲的情况下的最少花费</p>
<p>那么显然$h[i]&lt;=f[i]$恒成立</p>
<p>对于节点$x$以及它的儿子节点$y$，如果$f[y]-h[y]&gt;=c[y]$，那么我们用$h[y]$来转移，否则我们用$f[y]$来转移</p>
<p>就这样瞎搞搞就行了</p>
<p>当然正解不是这样子的，但是由于数据水，所以这样做就能水过。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"fusion"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 100010</span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> y,next;&#125;e[MAXN*<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,len,ans,Link[MAXN],d[MAXN],c[MAXN],vis[MAXN],f[MAXN],h[MAXN],boom[MAXN],fa[MAXN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;e[++len].next=Link[x];Link[x]=len;e[len].y=y;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> temp=<span class="number">0</span>,sum=d[x]; vis[x]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=Link[x];i;i=e[i].next)</div><div class="line">		<span class="keyword">if</span>(!vis[e[i].y]&amp;&amp;c[e[i].y])&#123;</div><div class="line">			fa[e[i].y]=x; dp(e[i].y);</div><div class="line">			<span class="keyword">if</span>(f[e[i].y]-h[e[i].y]&gt;=c[e[i].y])  temp+=h[e[i].y];</div><div class="line">			<span class="keyword">else</span> temp+=f[e[i].y],sum-=c[e[i].y];</div><div class="line">		&#125;</div><div class="line">	f[x]=temp+sum;</div><div class="line">	h[x]=temp+sum-c[fa[x]];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	n=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  d[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  c[i]=read();</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</div><div class="line">		<span class="keyword">int</span> x=read(),y=read();</div><div class="line">		insert(x,y); insert(y,x);</div><div class="line">		boom[x]+=c[y];  boom[y]+=c[x];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(!c[i]) ans+=max(d[i]-boom[i],<span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="keyword">if</span>(c[i]&amp;&amp;!vis[i]) fa[i]=<span class="number">0</span>,c[<span class="number">0</span>]=<span class="number">0</span>,dp(i),ans+=f[i];</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 考试总结 </tag>
            
            <tag> 线段树 </tag>
            
            <tag> 乘法逆元 </tag>
            
            <tag> 树形dp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj3529】数表]]></title>
      <url>/2017/02/27/3529/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3529" target="_blank" rel="external">AC通道</a></p>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>我们先考虑如果没有a的限制条件的情况：</p>
<p>设n&lt;m</p>
<p>令$F(i)$表示i的约数和，则$F(i)$可以在$O(n\log(n))$的时间内求出来（POPOQQQ大爷有一种$O(n)$的方法）</p>
<p>令$g(i)$表示$\gcd(x,y)=i$的数对$(x,y)$的个数，则通过莫比乌斯反演可得 $g(i)=\sum_{i|d}^{ }\mu(\frac{d}{i})\left [ \frac{n}{d} \right ]\left [ \frac{m}{d} \right ]$</p>
<p>则 $ans=\sum_{i=1}^{n}F(i)g(i)=\sum_{i=1}^{n}F(i)\sum_{i|d}^{ }\mu(\frac{d}{i})\left [ \frac{n}{d} \right ]\left [ \frac{m}{d} \right ]=\sum_{d=1}^{n}\left [ \frac{n}{d} \right ]\left [ \frac{m}{d} \right ]\sum_{i|d}^{ }F(i)\mu(\frac{d}{i})$</p>
<p>所以我们只需要计算出 $\sum_{i|d}^{ }F(i)\mu(\frac{d}{i})$ 的前缀和就行了</p>
<p>然而现在有a的限制，怎么做呢？</p>
<p>我们发现对答案有贡献的$i$只有$F(i)&lt;=a$的$i$</p>
<p>所以我们离线处理，将$F(i)$排序，将询问按$a$排序</p>
<p>每次询问前将满足$F(i)&lt;=a$的$i$插入到树状数组中，然后查询。</p>
<p>时间复杂度：$O(n\log^2{n}+q\sqrt{n}\log{n})$</p>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e5</span>,D(<span class="number">50</span>);</div><div class="line"><span class="keyword">struct</span> node&#123;</div><div class="line">	<span class="keyword">int</span> n,m,a,id;</div><div class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> node &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> a&lt;b.a;&#125;</div><div class="line">&#125;Q[MAXN+D];</div><div class="line"><span class="keyword">int</span> T,cnt,maxx,mu[MAXN+D],prime[MAXN+D],check[MAXN+D],tr[MAXN+D],ans[MAXN+D];</div><div class="line">pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;f[MAXN+D];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span></span>&#123;<span class="keyword">while</span>(x&lt;=maxx)tr[x]+=v,x+=(x&amp;-x);&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="keyword">while</span>(x)sum+=tr[x],x-=(x&amp;-x);<span class="keyword">return</span> sum;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	mu[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxx;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i])  prime[++cnt]=i,mu[i]=<span class="number">-1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=maxx;++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)  &#123;mu[i*prime[j]]=<span class="number">0</span>; <span class="keyword">break</span>;&#125;</div><div class="line">			mu[i*prime[j]]=-mu[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxx;++i)</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=maxx;j+=i)  f[j].first+=i;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxx;++i)  f[i].second=i;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> n=Q[x].n,m=Q[x].m;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,last;i&lt;=n;i=last+<span class="number">1</span>)&#123;</div><div class="line">		last=min(n/(n/i),m/(m/i));</div><div class="line">		ans[Q[x].id]+=(n/i)*(m/i)*(get(last)-get(i<span class="number">-1</span>));</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	T=read();  </div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;++i)&#123;</div><div class="line">		Q[i].n=read(); Q[i].m=read(); Q[i].a=read(); Q[i].id=i;</div><div class="line">		<span class="keyword">if</span>(Q[i].n&gt;Q[i].m)  swap(Q[i].n,Q[i].m);</div><div class="line">		cmax(maxx,Q[i].n);</div><div class="line">	&#125;</div><div class="line">	pre(); </div><div class="line">	sort(Q+<span class="number">1</span>,Q+T+<span class="number">1</span>);  sort(f+<span class="number">1</span>,f+maxx+<span class="number">1</span>); <span class="function"><span class="keyword">int</span> <span class="title">now</span><span class="params">(<span class="number">0</span>)</span></span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;++i)&#123;</div><div class="line">		<span class="keyword">while</span>(now&lt;maxx&amp;&amp;f[now+<span class="number">1</span>].first&lt;=Q[i].a)&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=f[++now].second;j&lt;=maxx;j+=f[now].second)</div><div class="line">				add(j,f[now].first*mu[j/f[now].second]);</div><div class="line">		&#125;</div><div class="line">		solve(i);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;++i)  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]&amp;<span class="number">0x7fffffff</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 树状数组 </tag>
            
            <tag> 莫比乌斯反演 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【算法笔记】莫比乌斯反演详解]]></title>
      <url>/2017/02/27/%E3%80%90%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E3%80%91%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><hr>
<p>莫比乌斯反演是数论中的重要内容，在许多情况下能够简化运算。</p>
<p>我们来看这个函数$F(n)=\sum_{d|n}^{ } f(d)$，则有：</p>
<blockquote>
<p>$F(1)=f(1)$<br>$F(2)=f(1)+f(2)$<br>$F(3)=f(1)+f(3)$<br>$F(4)=f(1)+f(2)+f(4)$<br>$F(5)=f(1)+f(5)$<br>$F(6)=f(1)+f(2)+f(3)+f(6)$<br>$F(7)=f(1)+f(7)$<br>$F(8)=f(1)+f(2)+f(4)+f(8)$</p>
</blockquote>
<p>于是我们可以通过$F(n)$推导出$f(n)$</p>
<blockquote>
<p>$f(1)=F(1)$<br>$f(2)=F(2)-F(1)$<br>$f(3)=F(3)-F(1)$<br>$f(4)=F(4)-F(2)$<br>$f(5)=F(5)-F(1)$<br>$f(6)=F(6)-F(3)-F(2)+F(1)$<br>$f(7)=F(7)-F(1)$<br>$f(8)=F(8)-F(4)$</p>
</blockquote>
<p>观察以上式子的系数，我们做出如下猜想：$f(n)=\sum_{d|n}^{ }\mu (d)F(\frac{n}{d})$</p>
<p>那么这个猜想到底是否正确呢？上式中的$\mu (d)$又是什么呢？</p>
<p>诸位，让我们进入正题，翱翔在数学的天空中吧。</p>
<p>-<br>-<br>-</p>
<h2 id="莫比乌斯函数"><a href="#莫比乌斯函数" class="headerlink" title="莫比乌斯函数"></a>莫比乌斯函数</h2><hr>
<h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>记莫比乌斯函数为$\mu (d)$，d为正整数</p>
<p>若$d=1$，则$\mu (d)=1$</p>
<p>若$d={p_{1}}{p_{2}} {p_{3}}…{p_{k}}$，则$\mu (d)=(-1)^k$</p>
<p>其他情况下$\mu (d)=0$</p>
<p>-<br>-<br>-</p>
<h3 id="性质一"><a href="#性质一" class="headerlink" title="性质一"></a>性质一</h3><blockquote>
<p>对于任意正整数n</p>
<p>若$n=1$，则$\sum_{d|n}^{ } \mu (d)=1$</p>
<p>若$n&gt;1$，则$\sum_{d|n}^{ } \mu (d)=0$</p>
</blockquote>
<p> 证明：</p>
<p> （1）当$n=1$时，显然成立<br> （2）当$n\neq 1$时，将n分解为$n={p_{1}}^{a_{1}}{p_{2}}^{a_{2}}…{p_{k}}^{a_{k}}$<br> 在n的所有因子中，值不为零的只有所有质因子次数都为1的因子，其中质因数个数为r个的因子有$C_{k}^{r}$个<br> 那么显然有：$\sum_{n|d}^{ }\mu(d)=C_{k}^{0}-C_{k}^{1}+C_{k}^{2}+…+(-1)^{k}C_{k}^{k}=\sum_{i=0}^{k}(-1)^{i}C_{k}^{i}$<br> 根据二项式定理：$(x+y)^{n}=\sum_{i=0}^{n}C_{n}^{i}x^{i}y^{n-i}$<br> 令$x=1，y=-1$，代入即可得证</p>
<p>-<br>-<br>-</p>
<h3 id="性质二"><a href="#性质二" class="headerlink" title="性质二"></a>性质二</h3><ul>
<li>温馨提示：此性质涉及欧拉函数和莫比乌斯定理，读者可先学习之</li>
</ul>
<blockquote>
<p>对于任意正整数n有：$\sum_{d|n}^{ }\frac{\mu(d)}{d}=\frac{\phi (n)}{n}$</p>
</blockquote>
<p> 证明：<br> 因为$n=\sum_{d|n}^{ }\phi(d)$<br> 所以令$F(n)=n,f(n)=\phi(n)$<br> 代入莫比乌斯定理得：$\phi(n)=\sum_{d|n}^{ }\mu(d)F(\frac{n}{d})$<br> 即$\sum_{d|n}^{ }\frac{\mu(d)}{d}=\frac{\phi (n)}{n}$</p>
<p>-<br>-<br>-</p>
<h3 id="积性函数"><a href="#积性函数" class="headerlink" title="积性函数"></a>积性函数</h3><p>数论上积性函数的定义：设$f(n)$为定义在$\mathbb{N^{+}}$上的函数，若对于任意的$\gcd (x,y)=1$，都有$f(xy)=f(x)f(y)$，则称$f(x)$为积性函数</p>
<p>积性函数的性质：</p>
<p>（1）$f(1)=1$</p>
<p>（2）积性函数的前缀和也是积性函数</p>
<p>莫比乌斯函数就是一个积性函数(我不会证明)</p>
<p>所以我们可以通过线性筛来求莫比乌斯函数</p>
<p>-<br>-<br>-</p>
<h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> cnt,check[MAXN],prime[MAXN],mu[MAXN];</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	mu[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i])  prime[++cnt]=i,mu[i]=<span class="number">-1</span>; </div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=MAXN;++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) &#123;mu[prime[j]*i]=<span class="number">0</span>;<span class="keyword">break</span>;&#125; </div><div class="line">			mu[prime[j]*i]=-mu[i]; </div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>【bzoj2440】完全平方数  <a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2440" target="_blank" rel="external">传送门</a>  <a href="http://localhost:4000/2017/02/26/%E3%80%90bzoj2440%E3%80%91%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/" target="_blank" rel="external">题解传送门</a></p>
<p>-<br>-<br>-</p>
<h2 id="莫比乌斯定理"><a href="#莫比乌斯定理" class="headerlink" title="莫比乌斯定理"></a>莫比乌斯定理</h2><hr>
<h3 id="因数形式"><a href="#因数形式" class="headerlink" title="因数形式"></a>因数形式</h3><blockquote>
<p>$F(n)=\sum_{d|n}^{ }f(d)\Leftrightarrow f(n)=\sum_{d|n}^{ }\mu(d)F(\frac{n}{d})$</p>
</blockquote>
<p> 证明：<br> $\sum_{d|n}^{ }\mu(d)F(\frac{n}{d})=\sum_{d|n}^{ }\mu(d)\sum_{k|\frac{n}{d}}^{ }f(k)=\sum_{k|n}^{ }f(k)\sum_{d|\frac{n}{k}}^{ }\mu(d)$<br> 根据性质一，当且仅当$\frac{n}{k}=1$时，$\sum_{d|\frac{n}{k}}^{ }\mu(d)$不为0<br> 所以原式=$f(n)$，证毕</p>
<p>-<br>-<br>-</p>
<h3 id="倍数形式"><a href="#倍数形式" class="headerlink" title="倍数形式"></a>倍数形式</h3><blockquote>
<p>$F(n)=\sum_{n|d}^{ }f(d)\Leftrightarrow f(n)=\sum_{n|d}^{ }\mu(\frac{d}{n})F(d)$</p>
</blockquote>
<p>证明：<br>令$k=\frac{d}{n}$，则$\sum_{n|d}^{ }\mu(\frac{d}{n})F(d)=\sum_{k=1}^{+\infty}\mu(k)F(nk)=\sum_{k=1}^{+\infty}\mu(k)\sum_{nk|d}^{ }f(d)=\sum_{n|d}^{ }f(d)\sum_{k|\frac{d}{n}}^{ }\mu(k)$<br>根据性质一，当且仅当$\frac{d}{n}=1$时，$\sum_{k|\frac{d}{n}}^{ }\mu(k)$不为0<br>所以原式=$f(n)$，证毕</p>
<p>-<br>-<br>-</p>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>对于一些函数f(n)，如果我们很难直接求出它的值，而容易求出倍数和或约数和F(n)，那么我们可以通过莫比乌斯反演来求得f(n)的值</p>
<p>例：f(n)表示某一范围内(x,y)=n的数对的数量，F(n)表示某一范围内n|(x,y)的数对的数量</p>
<p>那么直接求f(n)并不是很好求，而F(n)求起来相对无脑一些，我们可以通过对F(n)进行莫比乌斯反演来求得f(n)</p>
<p>-<br>-<br>-</p>
<h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><p>【bzoj2301】<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2301" target="_blank" rel="external">传送门</a>  <a href="https://chty.coding.me/2017/02/27/%E3%80%90bzoj2301%E3%80%91/" target="_blank" rel="external">题解传送门</a></p>
<p>【bzoj2820】<a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2820" target="_blank" rel="external">传送门</a>  <a href="https://chty.coding.me/2017/02/27/%E3%80%90bzoj2820%E3%80%91/" target="_blank" rel="external">题解传送门</a></p>
<p>-<br>-</p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><hr>
<ul>
<li>《莫比乌斯反演》——PoPoQQQ <a href="https://wenku.baidu.com/view/fbec9c63ba1aa8114431d9ac.html?from=search" target="_blank" rel="external">传送门</a></li>
<li>《莫比乌斯反演定理证明（两种形式）》——outer_form <a href="http://www.cnblogs.com/outerform/p/5921887.html" target="_blank" rel="external">传送门</a></li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> 莫比乌斯反演 </tag>
            
            <tag> 算法笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2820】YY的GCD]]></title>
      <url>/2017/02/27/%E3%80%90bzoj2820%E3%80%91/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2820" target="_blank" rel="external">AC通道</a></p>
<hr>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>我们设n&lt;m</p>
<p>如果我们枚举每一个质数，那么答案显然就是 $\sum_{p=1}^{n} \sum_{d=1}^{n}  \mu(d)\left[\frac{n}{pd}\right]\left[\frac{m}{pd}\right]$  </p>
<p>这样做的时间复杂度为O($\frac{n^{2}}{\log(n)}$)，显然会超时，考虑优化。</p>
<p>我们设T=pd，则 $ans=\sum_{T=1}^{n}\left [ \frac{n}{T} \right ]\left [ \frac{m}{T} \right ]\sum_{p|T}^{ }\mu (\frac{T}{p})$  </p>
<p>那么我们就需要求出 $\sum_{p|T}^{ }\mu (\frac{T}{p})$ 的前缀和，然后利用bzoj2301提出的方法，就能做到O($\sqrt{n}$)的时间内回答询问</p>
<p>对于维护前缀和，我们枚举每一个质数p，去更新p的倍数的答案，更新方法类似于筛法，具体见代码</p>
<p>对于质数p，更新p的倍数的时间为O($\frac{\log(n)}{\log(p)}$)，均摊一下就是O($\log(n)$)</p>
<p>而n以内的质数最多有$\frac{n}{\log(n)}$个，所以维护前缀和的时间复杂度O(n)</p>
<hr>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e7</span>,D(<span class="number">50</span>);</div><div class="line"><span class="keyword">int</span> cnt,check[MAXN+D],mu[MAXN+D],prime[<span class="number">1000000</span>+D],sum[MAXN+D];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	mu[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i])  prime[++cnt]=i,mu[i]=<span class="number">-1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=MAXN;++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) &#123;mu[i*prime[j]]=<span class="number">0</span>; <span class="keyword">break</span>;&#125;</div><div class="line">			mu[i*prime[j]]=-mu[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;++i)&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j*prime[i]&lt;=MAXN;++j)</div><div class="line">			sum[j*prime[i]]+=mu[j];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i)  sum[i]+=sum[i<span class="number">-1</span>];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> T=read();  pre();</div><div class="line">	<span class="keyword">while</span>(T--)&#123;</div><div class="line">		<span class="keyword">int</span> n=read(),m=read(),last;</div><div class="line">		ll ans=<span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(n&gt;m)  swap(n,m);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i=last+<span class="number">1</span>)&#123;</div><div class="line">			last=min(n/(n/i),m/(m/i));</div><div class="line">			ans+=(ll)(n/i)*(m/i)*(sum[last]-sum[i<span class="number">-1</span>]);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 莫比乌斯反演 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2301】Problem b]]></title>
      <url>/2017/02/27/%E3%80%90bzoj2301%E3%80%91/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2301" target="_blank" rel="external">AC通道</a></p>
<hr>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先我们利用容斥原理把1个询问拆成4个，即ans(b,d)-ans(b,c-1)-ans(a-1,d)+ans(a-1,c-1)</p>
<p>其中ans(x,y)表示1&lt;=i&lt;=x/k,1&lt;=j&lt;=y/k且gcd(x,y)=1的(x,y)的有序数对的数量</p>
<p>那么如何求出ans(x,y)呢？</p>
<p>我们可以令f(i)为1&lt;=x&lt;=n,1&lt;=y&lt;=m且gcd(x,y)=i的数对(x,y)的个数，F(i)为1&lt;=x&lt;=n,1&lt;=y&lt;=m且i|gcd(x,y)的数对(x,y)的个数</p>
<p>那么显然$F(i)=\sum_{i|d}^{ } f(d)$</p>
<p>且 $F(i)=\left [ \frac{n}{i} \right ]\left [ \frac{m}{i} \right ]$</p>
<p>所以我们使用莫比乌斯反演的倍数形式得到$f(i)=\sum_{i|d}^{ }\mu (\frac{d}{i})F(d)$</p>
<p>f(1)就是答案</p>
<p>那么我们枚举1~n即可计算答案，时间复杂度O(n^2)</p>
<p>还是无法通过此题，考虑进一步优化</p>
<p>我们发现 $\left [ \frac{n}{d} \right ]\left [ \frac{m}{d} \right ]$ 最多只有 $2(\sqrt{n}+\sqrt{m})$ 个取值</p>
<p>那么我们可以对每一个取值维护一段区间，对莫比乌斯函数维护一个前缀和sum[i]，然后计算这个区间的值即可</p>
<p>时间复杂度O( $n\sqrt{n}$ )</p>
<hr>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e5</span>,D(<span class="number">50</span>);</div><div class="line"><span class="keyword">int</span> cnt,k,check[MAXN+D],mu[MAXN+D],prime[MAXN+D],sum[MAXN+D];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>; <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>) f=<span class="number">-1</span>; ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>; ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	mu[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i])  prime[++cnt]=i,mu[i]=<span class="number">-1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prime[j]*i&lt;=MAXN;++j)&#123;</div><div class="line">			check[prime[j]*i]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)  &#123;mu[i*prime[j]]=<span class="number">0</span>; <span class="keyword">break</span>;&#125;</div><div class="line">			<span class="keyword">else</span> mu[i*prime[j]]=-mu[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=MAXN;++i)  sum[i]=sum[i<span class="number">-1</span>]+mu[i];</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</div><div class="line">	n/=k;  m/=k; </div><div class="line">	<span class="keyword">if</span>(n&gt;m) swap(n,m);</div><div class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>,last;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i=last+<span class="number">1</span>)&#123;</div><div class="line">		last=min(n/(n/i),m/(m/i));</div><div class="line">		ans+=(n/i)*(m/i)*(sum[last]-sum[i<span class="number">-1</span>]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">int</span> n=read();  pre();</div><div class="line">	<span class="keyword">while</span>(n--)&#123;</div><div class="line">		<span class="keyword">int</span> a=read(),b=read(),c=read(),d=read(); k=read();</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solve(b,d)-solve(b,c<span class="number">-1</span>)-solve(a<span class="number">-1</span>,d)+solve(a<span class="number">-1</span>,c<span class="number">-1</span>));</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 容斥原理 </tag>
            
            <tag> 莫比乌斯反演 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2440】完全平方数]]></title>
      <url>/2017/02/26/%E3%80%90bzoj2440%E3%80%91%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=2440" target="_blank" rel="external">AC通道</a></p>
<hr>
<h2 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h2><p>一句话题意：求第k个无平方因子数，无平方因子数，即分解之后所有质因数的次数都为1的数。</p>
<hr>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先二分答案将问题转化为求[1,x]之间有多少个无平方因子数</p>
<p>根据容斥原理可知：对于 $\sqrt{x}$ 以内所有的质数有</p>
<blockquote>
<p>x以内的无平方因子数</p>
<p>=0个质数乘积的平方的倍数的数的数量(1的倍数)</p>
<p>-每个质数的平方的倍数的数的数量(9的倍数,25的倍数,…)</p>
<p>+每2个质数乘积的平方的倍数的数的数量(36的倍数,100的倍数,…)</p>
<p>-…</p>
</blockquote>
<p>容易发现每个乘积a前面的符号恰好是 $\mu \left ( x \right )$</p>
<p>x以内i^2的倍数有 $\left [ \frac{x}{i^{2}} \right ]$ 个 </p>
<p>故有$Q(x)=\sum_{i=1}^{\sqrt{x}}\mu (i)\left [ \frac{x}{i^{2}} \right ]$</p>
<p>这题和莫比乌斯反演没关系，算是莫比乌斯函数的一个应用吧。。。</p>
<p>——题解来自POPOQQQ大爷的ppt</p>
<hr>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=(<span class="keyword">int</span>)<span class="number">1e5</span>,D=<span class="number">50</span>;</div><div class="line"><span class="keyword">const</span> ll INF=(ll)<span class="number">1e10</span>;</div><div class="line"><span class="keyword">int</span> CASE,cnt,prime[MAXN+D],check[MAXN+D],mu[MAXN+D];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	mu[<span class="number">1</span>]=<span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;++i)&#123;</div><div class="line">		<span class="keyword">if</span>(!check[i])  prime[++cnt]=i,mu[i]=<span class="number">-1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;i*prime[j]&lt;=MAXN;++j)&#123;</div><div class="line">			check[i*prime[j]]=<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)  &#123;mu[i*prime[j]]=<span class="number">0</span>;<span class="keyword">break</span>;&#125;</div><div class="line">			mu[i*prime[j]]=-mu[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function">ll <span class="title">solve</span><span class="params">(ll x)</span></span>&#123;</div><div class="line">	ll temp=(ll)<span class="built_in">sqrt</span>(x*<span class="number">1.0</span>),sum(<span class="number">0</span>);</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=temp;++i)&#123;</div><div class="line">		sum+=mu[i]*(x/((ll)i*i));</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> sum;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	CASE=read();  pre();</div><div class="line">	<span class="keyword">while</span>(CASE--)&#123;</div><div class="line">		ll k=read(),l(<span class="number">0</span>),r(INF),ans(<span class="number">0</span>);</div><div class="line">		<span class="keyword">while</span>(l&lt;=r)&#123;</div><div class="line">			ll mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">			<span class="keyword">if</span>(solve(mid)&gt;=k)  &#123;ans=mid;  r=mid<span class="number">-1</span>;&#125;</div><div class="line">			<span class="keyword">else</span> l=mid+<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 容斥原理 </tag>
            
            <tag> 二分 </tag>
            
            <tag> 莫比乌斯反演 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj2034】K大数查询]]></title>
      <url>/2017/02/25/2034/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=3110" target="_blank" rel="external">AC通道</a></p>
<hr>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>我们可以用整体二分解决插入对询问的影响<br>在此过程中，用线段树维护区间修改和区间查询即可</p>
<hr>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 50010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000000</span></div><div class="line"><span class="comment">//#define up(i,j,n) for(int i=j;i&lt;=n;++i)</span></div><div class="line"><span class="comment">//#define dn(i,j,n) for(int i=j;i&gt;=n;--i)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">struct</span> node&#123;ll x,y,opt,k,id;&#125;q[MAXN],<span class="built_in">stack</span>[MAXN][<span class="number">2</span>];</div><div class="line">ll n,m,cnt,ans[MAXN];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		ll x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getc();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getc();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="keyword">namespace</span> Segment_Tree&#123;</div><div class="line">	ll tr[MAXN&lt;&lt;<span class="number">2</span>],clean[MAXN&lt;&lt;<span class="number">2</span>],delt[MAXN&lt;&lt;<span class="number">2</span>];</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">relord</span><span class="params">(<span class="keyword">int</span> p)</span></span>&#123;tr[p]=tr[p&lt;&lt;<span class="number">1</span>]+tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</div><div class="line">		<span class="keyword">if</span>(clean[p])&#123;</div><div class="line">			clean[p&lt;&lt;<span class="number">1</span>]=clean[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]=<span class="number">1</span>;  clean[p]=<span class="number">0</span>;</div><div class="line">			delt[p&lt;&lt;<span class="number">1</span>]=delt[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]=tr[p&lt;&lt;<span class="number">1</span>]=tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]=<span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		ll d=delt[p],mid=(l+r)&gt;&gt;<span class="number">1</span>;</div><div class="line">		delt[p&lt;&lt;<span class="number">1</span>]+=d;  delt[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]+=d;</div><div class="line">		tr[p&lt;&lt;<span class="number">1</span>]+=d*(mid-l+<span class="number">1</span>);  tr[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]+=d*(r-mid);</div><div class="line">		delt[p]=<span class="number">0</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">		<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span>;</div><div class="line">		<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  &#123;delt[p]++; tr[p]+=(r-l+<span class="number">1</span>); <span class="keyword">return</span>;&#125;</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;  pushdown(p,l,r);</div><div class="line">		insert(p&lt;&lt;<span class="number">1</span>,l,mid,x,y); insert(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">		relord(p);</div><div class="line">	&#125;</div><div class="line">	<span class="function">ll <span class="title">ask</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">		<span class="keyword">if</span>(x&gt;r||y&lt;l)  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(x&lt;=l&amp;&amp;y&gt;=r)  <span class="keyword">return</span> tr[p];</div><div class="line">		<span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;  pushdown(p,l,r);</div><div class="line">		<span class="keyword">return</span> ask(p&lt;&lt;<span class="number">1</span>,l,mid,x,y)+ask(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y);</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> Segment_Tree;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	n=read();  m=read();</div><div class="line">	up(i,<span class="number">1</span>,m)&#123;</div><div class="line">		ll opt=read(),x=read(),y=read(),k=read();</div><div class="line">		<span class="keyword">if</span>(opt==<span class="number">1</span>)  q[i]=(node)&#123;x,y,opt,k,<span class="number">0</span>&#125;;</div><div class="line">		<span class="keyword">else</span> q[i]=(node)&#123;x,y,opt,k,++cnt&#125;;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;r) <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(L==R)&#123;</div><div class="line">		up(i,l,r) <span class="keyword">if</span>(q[i].opt==<span class="number">2</span>) ans[q[i].id]=L;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(L+R)&gt;&gt;<span class="number">1</span>,ta(<span class="number">0</span>),tb(<span class="number">0</span>);</div><div class="line">	clean[<span class="number">1</span>]=<span class="number">1</span>;  delt[<span class="number">1</span>]=tr[<span class="number">1</span>]=<span class="number">0</span>; <span class="comment">//清空线段树</span></div><div class="line">	up(i,l,r)&#123;</div><div class="line">		<span class="keyword">if</span>(q[i].opt==<span class="number">1</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(q[i].k&lt;=mid) <span class="built_in">stack</span>[++ta][<span class="number">0</span>]=q[i];</div><div class="line">			<span class="keyword">else</span> insert(<span class="number">1</span>,<span class="number">1</span>,n,q[i].x,q[i].y),<span class="built_in">stack</span>[++tb][<span class="number">1</span>]=q[i];</div><div class="line">		&#125;<span class="keyword">else</span>&#123;</div><div class="line">			ll temp=ask(<span class="number">1</span>,<span class="number">1</span>,n,q[i].x,q[i].y);</div><div class="line">			<span class="keyword">if</span>(temp&lt;q[i].k) q[i].k-=temp,<span class="built_in">stack</span>[++ta][<span class="number">0</span>]=q[i];</div><div class="line">			<span class="keyword">else</span> <span class="built_in">stack</span>[++tb][<span class="number">1</span>]=q[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	up(i,<span class="number">1</span>,ta) q[i+l<span class="number">-1</span>]=<span class="built_in">stack</span>[i][<span class="number">0</span>];</div><div class="line">	up(i,<span class="number">1</span>,tb) q[i+l+ta<span class="number">-1</span>]=<span class="built_in">stack</span>[i][<span class="number">1</span>];</div><div class="line">	solve(l,l+ta<span class="number">-1</span>,L,mid);</div><div class="line">	solve(l+ta,r,mid+<span class="number">1</span>,R);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	init(); solve(<span class="number">1</span>,m,-INF,INF);</div><div class="line">	up(i,<span class="number">1</span>,cnt) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans[i]);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> 线段树 </tag>
            
            <tag> bzoj </tag>
            
            <tag> 整体二分 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【bzoj1901】Dynamic Rankings]]></title>
      <url>/2017/02/25/1901/</url>
      <content type="html"><![CDATA[<ul>
<li>本文为博主原创，未经许可不得转载<a id="more"></a></li>
</ul>
<p><a href="http://www.lydsy.com/JudgeOnline/problem.php?id=1901" target="_blank" rel="external">AC通道</a></p>
<hr>
<h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这是一个整体二分的板子<br>用树状数组维护单点修改和区间求和即可</p>
<hr>
<h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE <span class="meta-string">"read"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 500010</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> INF 1000000000</span></div><div class="line"><span class="comment">//#define up(i,j,n) for(int i=j;i&lt;=n;++i)</span></div><div class="line"><span class="comment">//#define dn(i,j,n) for(int i=j;i&gt;=n;--i)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmax(a,b) a=max(a,b)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> cmin(a,b) a=min(a,b)</span></div><div class="line"><span class="keyword">struct</span> node&#123;<span class="keyword">int</span> x,y,k,cur,id,type;&#125;q[MAXN],<span class="built_in">stack</span>[MAXN][<span class="number">2</span>];</div><div class="line"><span class="keyword">int</span> n,m,cnt,num,data[MAXN],ans[MAXN],tr[MAXN],temp[MAXN];</div><div class="line"><span class="keyword">namespace</span> INIT&#123;</div><div class="line">	<span class="keyword">char</span> buf[<span class="number">1</span>&lt;&lt;<span class="number">15</span>],*fs,*ft;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">getc</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> (fs==ft&amp;&amp;(ft=(fs=buf)+fread(buf,<span class="number">1</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="built_in">stdin</span>),fs==ft))?<span class="number">0</span>:*fs++;&#125;</div><div class="line">	<span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;  <span class="keyword">char</span> ch=getchar();</div><div class="line">		<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch))  &#123;<span class="keyword">if</span>(ch==<span class="string">'-'</span>)  f=<span class="number">-1</span>;  ch=getchar();&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch))  &#123;x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;  ch=getchar();&#125;</div><div class="line">		<span class="keyword">return</span> x*f;</div><div class="line">	&#125;</div><div class="line">&#125;<span class="keyword">using</span> <span class="keyword">namespace</span> INIT;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> v)</span></span>&#123;<span class="keyword">while</span>(x&lt;=n)tr[x]+=v,x+=(x&amp;-x);&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="keyword">while</span>(x)sum+=tr[x],x-=(x&amp;-x);<span class="keyword">return</span> sum;&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</div><div class="line">	up(i,<span class="number">1</span>,n)  data[i]=read(),q[++num]=(node)&#123;i,data[i],<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</div><div class="line">	up(i,<span class="number">1</span>,m)&#123;</div><div class="line">		<span class="keyword">char</span> ch[<span class="number">3</span>]; <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch+<span class="number">1</span>);</div><div class="line">		<span class="keyword">if</span>(ch[<span class="number">1</span>]==<span class="string">'Q'</span>)&#123;</div><div class="line">			<span class="keyword">int</span> x=read(),y=read(),k=read();</div><div class="line">			q[++num]=(node)&#123;x,y,k,<span class="number">0</span>,++cnt,<span class="number">3</span>&#125;;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">int</span> x=read(),v=read();</div><div class="line">			q[++num]=(node)&#123;x,data[x],<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>&#125;;</div><div class="line">			q[++num]=(node)&#123;x,v,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</div><div class="line">			data[x]=v;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span>(l&gt;r)  <span class="keyword">return</span>;</div><div class="line">	<span class="keyword">if</span>(L==R)&#123;</div><div class="line">		up(i,l,r) <span class="keyword">if</span>(q[i].type==<span class="number">3</span>) ans[q[i].id]=L;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> mid=(L+R)&gt;&gt;<span class="number">1</span>,ta(<span class="number">0</span>),tb(<span class="number">0</span>);</div><div class="line">	up(i,l,r)&#123;</div><div class="line">		<span class="keyword">if</span>(q[i].y&lt;=mid&amp;&amp;q[i].type==<span class="number">1</span>) add(q[i].x,<span class="number">1</span>);</div><div class="line">		<span class="keyword">if</span>(q[i].y&lt;=mid&amp;&amp;q[i].type==<span class="number">2</span>) add(q[i].x,<span class="number">-1</span>);</div><div class="line">		<span class="keyword">if</span>(q[i].type==<span class="number">3</span>)  temp[i]=get(q[i].y)-get(q[i].x<span class="number">-1</span>);</div><div class="line">	&#125;</div><div class="line">	up(i,l,r)&#123;</div><div class="line">		<span class="keyword">if</span>(q[i].y&lt;=mid&amp;&amp;q[i].type==<span class="number">1</span>) add(q[i].x,<span class="number">-1</span>);</div><div class="line">		<span class="keyword">if</span>(q[i].y&lt;=mid&amp;&amp;q[i].type==<span class="number">2</span>) add(q[i].x,<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">	up(i,l,r)&#123;</div><div class="line">		<span class="keyword">if</span>(q[i].type==<span class="number">3</span>)&#123;</div><div class="line">			<span class="keyword">if</span>(q[i].cur+temp[i]&gt;=q[i].k)  <span class="built_in">stack</span>[++ta][<span class="number">0</span>]=q[i];</div><div class="line">			<span class="keyword">else</span> q[i].cur+=temp[i],<span class="built_in">stack</span>[++tb][<span class="number">1</span>]=q[i];</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">if</span>(q[i].y&lt;=mid)  <span class="built_in">stack</span>[++ta][<span class="number">0</span>]=q[i];</div><div class="line">			<span class="keyword">else</span> <span class="built_in">stack</span>[++tb][<span class="number">1</span>]=q[i];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	up(i,<span class="number">1</span>,ta)  q[i+l<span class="number">-1</span>]=<span class="built_in">stack</span>[i][<span class="number">0</span>];</div><div class="line">	up(i,<span class="number">1</span>,tb)  q[i+l+ta<span class="number">-1</span>]=<span class="built_in">stack</span>[i][<span class="number">1</span>];</div><div class="line">	solve(l,l+ta<span class="number">-1</span>,L,mid);</div><div class="line">	solve(l+ta,r,mid+<span class="number">1</span>,R);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>&#123;</div><div class="line">	cnt=num=<span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	freopen(FILE<span class="string">".in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</div><div class="line">	freopen(FILE<span class="string">".out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</div><div class="line">	<span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m))&#123;</div><div class="line">		pre(); init();</div><div class="line">		solve(<span class="number">1</span>,num,<span class="number">0</span>,INF);</div><div class="line">		up(i,<span class="number">1</span>,cnt)  <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> bzoj </tag>
            
            <tag> 树状数组 </tag>
            
            <tag> 整体二分 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
